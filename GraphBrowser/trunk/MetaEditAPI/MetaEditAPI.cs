//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.239
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by wsdl, Version=4.0.30319.1.
// 
namespace MetaEditAPI {
    using System;
    using System.Diagnostics;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System.Web.Services;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="MetaEditAPISoapBinding", Namespace="http://metacase.com/wsdl/")]
    public partial class MetaEditAPI : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback allGoodInstancesOperationCompleted;
        
        private System.Threading.SendOrPostCallback allSimilarInstancesOperationCompleted;
        
        private System.Threading.SendOrPostCallback subTypeNamedOperationCompleted;
        
        private System.Threading.SendOrPostCallback findStringOperationCompleted;
        
        private System.Threading.SendOrPostCallback instancesNamedOperationCompleted;
        
        private System.Threading.SendOrPostCallback typeNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback typeOperationCompleted;
        
        private System.Threading.SendOrPostCallback userPrintStringOperationCompleted;
        
        private System.Threading.SendOrPostCallback valueAtOperationCompleted;
        
        private System.Threading.SendOrPostCallback setValueAtOperationCompleted;
        
        private System.Threading.SendOrPostCallback allPropertiesValuesOperationCompleted;
        
        private System.Threading.SendOrPostCallback allPropertiesOperationCompleted;
        
        private System.Threading.SendOrPostCallback allPropertiesWrappedOperationCompleted;
        
        private System.Threading.SendOrPostCallback instPropsOperationCompleted;
        
        private System.Threading.SendOrPostCallback unsafeNewOperationCompleted;
        
        private System.Threading.SendOrPostCallback objectSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback relationshipSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback roleSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback bindingSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback explodeGraphsOperationCompleted;
        
        private System.Threading.SendOrPostCallback decompGraphsOperationCompleted;
        
        private System.Threading.SendOrPostCallback subgraphsOperationCompleted;
        
        private System.Threading.SendOrPostCallback addExplodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback getExplodeGraphsForNPOperationCompleted;
        
        private System.Threading.SendOrPostCallback removeExplodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback decompGraphOperationCompleted;
        
        private System.Threading.SendOrPostCallback setDecompGraphOperationCompleted;
        
        private System.Threading.SendOrPostCallback objsForObjOperationCompleted;
        
        private System.Threading.SendOrPostCallback objsForRelOperationCompleted;
        
        private System.Threading.SendOrPostCallback objsForRoleOperationCompleted;
        
        private System.Threading.SendOrPostCallback relsForObjOperationCompleted;
        
        private System.Threading.SendOrPostCallback relsForRoleOperationCompleted;
        
        private System.Threading.SendOrPostCallback rolesForObjOperationCompleted;
        
        private System.Threading.SendOrPostCallback rolesForRelOperationCompleted;
        
        private System.Threading.SendOrPostCallback rolesForRoleOperationCompleted;
        
        private System.Threading.SendOrPostCallback openOperationCompleted;
        
        private System.Threading.SendOrPostCallback animateOperationCompleted;
        
        private System.Threading.SendOrPostCallback refreshOperationCompleted;
        
        private System.Threading.SendOrPostCallback copiedObjectsOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback addToGraphOperationCompleted;
        
        private System.Threading.SendOrPostCallback createBindingOperationCompleted;
        
        private System.Threading.SendOrPostCallback relationshipOperationCompleted;
        
        private System.Threading.SendOrPostCallback rolesOperationCompleted;
        
        private System.Threading.SendOrPostCallback objectsOperationCompleted;
        
        private System.Threading.SendOrPostCallback diagramsOperationCompleted;
        
        private System.Threading.SendOrPostCallback matricesOperationCompleted;
        
        private System.Threading.SendOrPostCallback tablesOperationCompleted;
        
        private System.Threading.SendOrPostCallback newDiagramOperationCompleted;
        
        private System.Threading.SendOrPostCallback newMatrixOperationCompleted;
        
        private System.Threading.SendOrPostCallback newTableOperationCompleted;
        
        private System.Threading.SendOrPostCallback instOperationCompleted;
        
        private System.Threading.SendOrPostCallback repSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback reprGraphOperationCompleted;
        
        private System.Threading.SendOrPostCallback removeOperationCompleted;
        
        private System.Threading.SendOrPostCallback timeStampOperationCompleted;
        
        private System.Threading.SendOrPostCallback setTimeStampOperationCompleted;
        
        private System.Threading.SendOrPostCallback objectReprsOperationCompleted;
        
        private System.Threading.SendOrPostCallback bindingReprsOperationCompleted;
        
        private System.Threading.SendOrPostCallback gridOperationCompleted;
        
        private System.Threading.SendOrPostCallback setGridOperationCompleted;
        
        private System.Threading.SendOrPostCallback displayGridOperationCompleted;
        
        private System.Threading.SendOrPostCallback setDisplayGridOperationCompleted;
        
        private System.Threading.SendOrPostCallback useGridOperationCompleted;
        
        private System.Threading.SendOrPostCallback setUseGridOperationCompleted;
        
        private System.Threading.SendOrPostCallback placeOperationCompleted;
        
        private System.Threading.SendOrPostCallback setPlaceOperationCompleted;
        
        private System.Threading.SendOrPostCallback scaleOperationCompleted;
        
        private System.Threading.SendOrPostCallback setScaleOperationCompleted;
        
        private System.Threading.SendOrPostCallback isStraightOperationCompleted;
        
        private System.Threading.SendOrPostCallback straightenOperationCompleted;
        
        private System.Threading.SendOrPostCallback layoutOperationCompleted;
        
        private System.Threading.SendOrPostCallback addNewObjectRepForOperationCompleted;
        
        private System.Threading.SendOrPostCallback addNewBindingRepForOperationCompleted;
        
        private System.Threading.SendOrPostCallback connectionReprIdsOperationCompleted;
        
        private System.Threading.SendOrPostCallback addPointOperationCompleted;
        
        private System.Threading.SendOrPostCallback putPointAtIndexOperationCompleted;
        
        private System.Threading.SendOrPostCallback breakpointsOperationCompleted;
        
        private System.Threading.SendOrPostCallback objTargetOffsetOperationCompleted;
        
        private System.Threading.SendOrPostCallback removePointOperationCompleted;
        
        private System.Threading.SendOrPostCallback hAxisOperationCompleted;
        
        private System.Threading.SendOrPostCallback vAxisOperationCompleted;
        
        private System.Threading.SendOrPostCallback bindSelectOperationCompleted;
        
        private System.Threading.SendOrPostCallback setBindSelectOperationCompleted;
        
        private System.Threading.SendOrPostCallback cellDisplayModeOperationCompleted;
        
        private System.Threading.SendOrPostCallback setCellDisplayModeOperationCompleted;
        
        private System.Threading.SendOrPostCallback displayStringSelectorOperationCompleted;
        
        private System.Threading.SendOrPostCallback setDisplayStringSelectorOperationCompleted;
        
        private System.Threading.SendOrPostCallback axisDisplayModeOperationCompleted;
        
        private System.Threading.SendOrPostCallback setAxisDisplayModeOperationCompleted;
        
        private System.Threading.SendOrPostCallback showFirstOperationCompleted;
        
        private System.Threading.SendOrPostCallback setShowFirstOperationCompleted;
        
        private System.Threading.SendOrPostCallback rowLabelsWidthOperationCompleted;
        
        private System.Threading.SendOrPostCallback setRowLabelsWidthOperationCompleted;
        
        private System.Threading.SendOrPostCallback textStyleSymbolOperationCompleted;
        
        private System.Threading.SendOrPostCallback setTextStyleSymbolOperationCompleted;
        
        private System.Threading.SendOrPostCallback addNewAxisEltForOperationCompleted;
        
        private System.Threading.SendOrPostCallback getWidthOperationCompleted;
        
        private System.Threading.SendOrPostCallback setWidthOperationCompleted;
        
        private System.Threading.SendOrPostCallback oTOperationCompleted;
        
        private System.Threading.SendOrPostCallback baseCollectionOperationCompleted;
        
        private System.Threading.SendOrPostCallback fontOperationCompleted;
        
        private System.Threading.SendOrPostCallback setFontOperationCompleted;
        
        private System.Threading.SendOrPostCallback gxlWidthsOperationCompleted;
        
        private System.Threading.SendOrPostCallback setGxlWidthsOperationCompleted;
        
        private System.Threading.SendOrPostCallback addNewTableEltForOperationCompleted;
        
        private System.Threading.SendOrPostCallback waitForBindingCreationOperationCompleted;
        
        private System.Threading.SendOrPostCallback waitForBindingFinalizationOperationCompleted;
        
        private System.Threading.SendOrPostCallback openedGraphReprsOperationCompleted;
        
        private System.Threading.SendOrPostCallback animateAllOperationCompleted;
        
        private System.Threading.SendOrPostCallback animateNoneOperationCompleted;
        
        private System.Threading.SendOrPostCallback createGraphDialogOperationCompleted;
        
        private System.Threading.SendOrPostCallback createFromPropertyDialogInAreaOperationCompleted;
        
        private System.Threading.SendOrPostCallback propertyDialogOperationCompleted;
        
        private System.Threading.SendOrPostCallback forGraphRunOperationCompleted;
        
        private System.Threading.SendOrPostCallback generatorNamesOperationCompleted;
        
        private System.Threading.SendOrPostCallback currentDirOperationCompleted;
        
        private System.Threading.SendOrPostCallback fileInPatchOperationCompleted;
        
        private System.Threading.SendOrPostCallback fileInPatchesOperationCompleted;
        
        private System.Threading.SendOrPostCallback abandonOperationCompleted;
        
        private System.Threading.SendOrPostCallback commitOperationCompleted;
        
        private System.Threading.SendOrPostCallback condenseDatabaseOperationCompleted;
        
        private System.Threading.SendOrPostCallback createProjectOperationCompleted;
        
        private System.Threading.SendOrPostCallback documentOperationCompleted;
        
        private System.Threading.SendOrPostCallback forAllOperationCompleted;
        
        private System.Threading.SendOrPostCallback forNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback loginOperationCompleted;
        
        private System.Threading.SendOrPostCallback loginDBOperationCompleted;
        
        private System.Threading.SendOrPostCallback loginNewDBOperationCompleted;
        
        private System.Threading.SendOrPostCallback logoutAndExitOperationCompleted;
        
        private System.Threading.SendOrPostCallback maintainDatabaseOperationCompleted;
        
        private System.Threading.SendOrPostCallback openAllProjectsOperationCompleted;
        
        private System.Threading.SendOrPostCallback quitOperationCompleted;
        
        private System.Threading.SendOrPostCallback saveWSDLOperationCompleted;
        
        private System.Threading.SendOrPostCallback setProjectOperationCompleted;
        
        private System.Threading.SendOrPostCallback startAPIOperationCompleted;
        
        private System.Threading.SendOrPostCallback startAPIHostnameOperationCompleted;
        
        private System.Threading.SendOrPostCallback stopAPIOperationCompleted;
        
        /// <remarks/>
        public MetaEditAPI() {
            this.Url = "http://localhost:6390/MetaEditAPI";
        }

        /// <remarks/>
        public event allGoodInstancesCompletedEventHandler allGoodInstancesCompleted;
        
        /// <remarks/>
        public event allSimilarInstancesCompletedEventHandler allSimilarInstancesCompleted;
        
        /// <remarks/>
        public event subTypeNamedCompletedEventHandler subTypeNamedCompleted;
        
        /// <remarks/>
        public event findStringCompletedEventHandler findStringCompleted;
        
        /// <remarks/>
        public event instancesNamedCompletedEventHandler instancesNamedCompleted;
        
        /// <remarks/>
        public event typeNameCompletedEventHandler typeNameCompleted;
        
        /// <remarks/>
        public event typeCompletedEventHandler typeCompleted;
        
        /// <remarks/>
        public event userPrintStringCompletedEventHandler userPrintStringCompleted;
        
        /// <remarks/>
        public event valueAtCompletedEventHandler valueAtCompleted;
        
        /// <remarks/>
        public event setValueAtCompletedEventHandler setValueAtCompleted;
        
        /// <remarks/>
        public event allPropertiesValuesCompletedEventHandler allPropertiesValuesCompleted;
        
        /// <remarks/>
        public event allPropertiesCompletedEventHandler allPropertiesCompleted;
        
        /// <remarks/>
        public event allPropertiesWrappedCompletedEventHandler allPropertiesWrappedCompleted;
        
        /// <remarks/>
        public event instPropsCompletedEventHandler instPropsCompleted;
        
        /// <remarks/>
        public event unsafeNewCompletedEventHandler unsafeNewCompleted;
        
        /// <remarks/>
        public event objectSetCompletedEventHandler objectSetCompleted;
        
        /// <remarks/>
        public event relationshipSetCompletedEventHandler relationshipSetCompleted;
        
        /// <remarks/>
        public event roleSetCompletedEventHandler roleSetCompleted;
        
        /// <remarks/>
        public event bindingSetCompletedEventHandler bindingSetCompleted;
        
        /// <remarks/>
        public event explodeGraphsCompletedEventHandler explodeGraphsCompleted;
        
        /// <remarks/>
        public event decompGraphsCompletedEventHandler decompGraphsCompleted;
        
        /// <remarks/>
        public event subgraphsCompletedEventHandler subgraphsCompleted;
        
        /// <remarks/>
        public event addExplodeCompletedEventHandler addExplodeCompleted;
        
        /// <remarks/>
        public event getExplodeGraphsForNPCompletedEventHandler getExplodeGraphsForNPCompleted;
        
        /// <remarks/>
        public event removeExplodeCompletedEventHandler removeExplodeCompleted;
        
        /// <remarks/>
        public event decompGraphCompletedEventHandler decompGraphCompleted;
        
        /// <remarks/>
        public event setDecompGraphCompletedEventHandler setDecompGraphCompleted;
        
        /// <remarks/>
        public event objsForObjCompletedEventHandler objsForObjCompleted;
        
        /// <remarks/>
        public event objsForRelCompletedEventHandler objsForRelCompleted;
        
        /// <remarks/>
        public event objsForRoleCompletedEventHandler objsForRoleCompleted;
        
        /// <remarks/>
        public event relsForObjCompletedEventHandler relsForObjCompleted;
        
        /// <remarks/>
        public event relsForRoleCompletedEventHandler relsForRoleCompleted;
        
        /// <remarks/>
        public event rolesForObjCompletedEventHandler rolesForObjCompleted;
        
        /// <remarks/>
        public event rolesForRelCompletedEventHandler rolesForRelCompleted;
        
        /// <remarks/>
        public event rolesForRoleCompletedEventHandler rolesForRoleCompleted;
        
        /// <remarks/>
        public event openCompletedEventHandler openCompleted;
        
        /// <remarks/>
        public event animateCompletedEventHandler animateCompleted;
        
        /// <remarks/>
        public event refreshCompletedEventHandler refreshCompleted;
        
        /// <remarks/>
        public event copiedObjectsCompletedEventHandler copiedObjectsCompleted;
        
        /// <remarks/>
        public event deleteCompletedEventHandler deleteCompleted;
        
        /// <remarks/>
        public event addToGraphCompletedEventHandler addToGraphCompleted;
        
        /// <remarks/>
        public event createBindingCompletedEventHandler createBindingCompleted;
        
        /// <remarks/>
        public event relationshipCompletedEventHandler relationshipCompleted;
        
        /// <remarks/>
        public event rolesCompletedEventHandler rolesCompleted;
        
        /// <remarks/>
        public event objectsCompletedEventHandler objectsCompleted;
        
        /// <remarks/>
        public event diagramsCompletedEventHandler diagramsCompleted;
        
        /// <remarks/>
        public event matricesCompletedEventHandler matricesCompleted;
        
        /// <remarks/>
        public event tablesCompletedEventHandler tablesCompleted;
        
        /// <remarks/>
        public event newDiagramCompletedEventHandler newDiagramCompleted;
        
        /// <remarks/>
        public event newMatrixCompletedEventHandler newMatrixCompleted;
        
        /// <remarks/>
        public event newTableCompletedEventHandler newTableCompleted;
        
        /// <remarks/>
        public event instCompletedEventHandler instCompleted;
        
        /// <remarks/>
        public event repSetCompletedEventHandler repSetCompleted;
        
        /// <remarks/>
        public event reprGraphCompletedEventHandler reprGraphCompleted;
        
        /// <remarks/>
        public event removeCompletedEventHandler removeCompleted;
        
        /// <remarks/>
        public event timeStampCompletedEventHandler timeStampCompleted;
        
        /// <remarks/>
        public event setTimeStampCompletedEventHandler setTimeStampCompleted;
        
        /// <remarks/>
        public event objectReprsCompletedEventHandler objectReprsCompleted;
        
        /// <remarks/>
        public event bindingReprsCompletedEventHandler bindingReprsCompleted;
        
        /// <remarks/>
        public event gridCompletedEventHandler gridCompleted;
        
        /// <remarks/>
        public event setGridCompletedEventHandler setGridCompleted;
        
        /// <remarks/>
        public event displayGridCompletedEventHandler displayGridCompleted;
        
        /// <remarks/>
        public event setDisplayGridCompletedEventHandler setDisplayGridCompleted;
        
        /// <remarks/>
        public event useGridCompletedEventHandler useGridCompleted;
        
        /// <remarks/>
        public event setUseGridCompletedEventHandler setUseGridCompleted;
        
        /// <remarks/>
        public event placeCompletedEventHandler placeCompleted;
        
        /// <remarks/>
        public event setPlaceCompletedEventHandler setPlaceCompleted;
        
        /// <remarks/>
        public event scaleCompletedEventHandler scaleCompleted;
        
        /// <remarks/>
        public event setScaleCompletedEventHandler setScaleCompleted;
        
        /// <remarks/>
        public event isStraightCompletedEventHandler isStraightCompleted;
        
        /// <remarks/>
        public event straightenCompletedEventHandler straightenCompleted;
        
        /// <remarks/>
        public event layoutCompletedEventHandler layoutCompleted;
        
        /// <remarks/>
        public event addNewObjectRepForCompletedEventHandler addNewObjectRepForCompleted;
        
        /// <remarks/>
        public event addNewBindingRepForCompletedEventHandler addNewBindingRepForCompleted;
        
        /// <remarks/>
        public event connectionReprIdsCompletedEventHandler connectionReprIdsCompleted;
        
        /// <remarks/>
        public event addPointCompletedEventHandler addPointCompleted;
        
        /// <remarks/>
        public event putPointAtIndexCompletedEventHandler putPointAtIndexCompleted;
        
        /// <remarks/>
        public event breakpointsCompletedEventHandler breakpointsCompleted;
        
        /// <remarks/>
        public event objTargetOffsetCompletedEventHandler objTargetOffsetCompleted;
        
        /// <remarks/>
        public event removePointCompletedEventHandler removePointCompleted;
        
        /// <remarks/>
        public event hAxisCompletedEventHandler hAxisCompleted;
        
        /// <remarks/>
        public event vAxisCompletedEventHandler vAxisCompleted;
        
        /// <remarks/>
        public event bindSelectCompletedEventHandler bindSelectCompleted;
        
        /// <remarks/>
        public event setBindSelectCompletedEventHandler setBindSelectCompleted;
        
        /// <remarks/>
        public event cellDisplayModeCompletedEventHandler cellDisplayModeCompleted;
        
        /// <remarks/>
        public event setCellDisplayModeCompletedEventHandler setCellDisplayModeCompleted;
        
        /// <remarks/>
        public event displayStringSelectorCompletedEventHandler displayStringSelectorCompleted;
        
        /// <remarks/>
        public event setDisplayStringSelectorCompletedEventHandler setDisplayStringSelectorCompleted;
        
        /// <remarks/>
        public event axisDisplayModeCompletedEventHandler axisDisplayModeCompleted;
        
        /// <remarks/>
        public event setAxisDisplayModeCompletedEventHandler setAxisDisplayModeCompleted;
        
        /// <remarks/>
        public event showFirstCompletedEventHandler showFirstCompleted;
        
        /// <remarks/>
        public event setShowFirstCompletedEventHandler setShowFirstCompleted;
        
        /// <remarks/>
        public event rowLabelsWidthCompletedEventHandler rowLabelsWidthCompleted;
        
        /// <remarks/>
        public event setRowLabelsWidthCompletedEventHandler setRowLabelsWidthCompleted;
        
        /// <remarks/>
        public event textStyleSymbolCompletedEventHandler textStyleSymbolCompleted;
        
        /// <remarks/>
        public event setTextStyleSymbolCompletedEventHandler setTextStyleSymbolCompleted;
        
        /// <remarks/>
        public event addNewAxisEltForCompletedEventHandler addNewAxisEltForCompleted;
        
        /// <remarks/>
        public event getWidthCompletedEventHandler getWidthCompleted;
        
        /// <remarks/>
        public event setWidthCompletedEventHandler setWidthCompleted;
        
        /// <remarks/>
        public event oTCompletedEventHandler oTCompleted;
        
        /// <remarks/>
        public event baseCollectionCompletedEventHandler baseCollectionCompleted;
        
        /// <remarks/>
        public event fontCompletedEventHandler fontCompleted;
        
        /// <remarks/>
        public event setFontCompletedEventHandler setFontCompleted;
        
        /// <remarks/>
        public event gxlWidthsCompletedEventHandler gxlWidthsCompleted;
        
        /// <remarks/>
        public event setGxlWidthsCompletedEventHandler setGxlWidthsCompleted;
        
        /// <remarks/>
        public event addNewTableEltForCompletedEventHandler addNewTableEltForCompleted;
        
        /// <remarks/>
        public event waitForBindingCreationCompletedEventHandler waitForBindingCreationCompleted;
        
        /// <remarks/>
        public event waitForBindingFinalizationCompletedEventHandler waitForBindingFinalizationCompleted;
        
        /// <remarks/>
        public event openedGraphReprsCompletedEventHandler openedGraphReprsCompleted;
        
        /// <remarks/>
        public event animateAllCompletedEventHandler animateAllCompleted;
        
        /// <remarks/>
        public event animateNoneCompletedEventHandler animateNoneCompleted;
        
        /// <remarks/>
        public event createGraphDialogCompletedEventHandler createGraphDialogCompleted;
        
        /// <remarks/>
        public event createFromPropertyDialogInAreaCompletedEventHandler createFromPropertyDialogInAreaCompleted;
        
        /// <remarks/>
        public event propertyDialogCompletedEventHandler propertyDialogCompleted;
        
        /// <remarks/>
        public event forGraphRunCompletedEventHandler forGraphRunCompleted;
        
        /// <remarks/>
        public event generatorNamesCompletedEventHandler generatorNamesCompleted;
        
        /// <remarks/>
        public event currentDirCompletedEventHandler currentDirCompleted;
        
        /// <remarks/>
        public event fileInPatchCompletedEventHandler fileInPatchCompleted;
        
        /// <remarks/>
        public event fileInPatchesCompletedEventHandler fileInPatchesCompleted;
        
        /// <remarks/>
        public event abandonCompletedEventHandler abandonCompleted;
        
        /// <remarks/>
        public event commitCompletedEventHandler commitCompleted;
        
        /// <remarks/>
        public event condenseDatabaseCompletedEventHandler condenseDatabaseCompleted;
        
        /// <remarks/>
        public event createProjectCompletedEventHandler createProjectCompleted;
        
        /// <remarks/>
        public event documentCompletedEventHandler documentCompleted;
        
        /// <remarks/>
        public event forAllCompletedEventHandler forAllCompleted;
        
        /// <remarks/>
        public event forNameCompletedEventHandler forNameCompleted;
        
        /// <remarks/>
        public event loginCompletedEventHandler loginCompleted;
        
        /// <remarks/>
        public event loginDBCompletedEventHandler loginDBCompleted;
        
        /// <remarks/>
        public event loginNewDBCompletedEventHandler loginNewDBCompleted;
        
        /// <remarks/>
        public event logoutAndExitCompletedEventHandler logoutAndExitCompleted;
        
        /// <remarks/>
        public event maintainDatabaseCompletedEventHandler maintainDatabaseCompleted;
        
        /// <remarks/>
        public event openAllProjectsCompletedEventHandler openAllProjectsCompleted;
        
        /// <remarks/>
        public event quitCompletedEventHandler quitCompleted;
        
        /// <remarks/>
        public event saveWSDLCompletedEventHandler saveWSDLCompleted;
        
        /// <remarks/>
        public event setProjectCompletedEventHandler setProjectCompleted;
        
        /// <remarks/>
        public event startAPICompletedEventHandler startAPICompleted;
        
        /// <remarks/>
        public event startAPIHostnameCompletedEventHandler startAPIHostnameCompleted;
        
        /// <remarks/>
        public event stopAPICompletedEventHandler stopAPICompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://metacase.com/MetaEditAPI.allGoodInstances", RequestNamespace="http://metacase.com/wsdl/", ResponseNamespace="http://metacase.com/wsdl/")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public MEOop[] allGoodInstances(METype receiver) {
            object[] results = this.Invoke("allGoodInstances", new object[] {
                        receiver});
            return ((MEOop[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginallGoodInstances(METype receiver, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("allGoodInstances", new object[] {
                        receiver}, callback, asyncState);
        }
        
        /// <remarks/>
        public MEOop[] EndallGoodInstances(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((MEOop[])(results[0]));
        }
        
        /// <remarks/>
        public void allGoodInstancesAsync(METype receiver) {
            this.allGoodInstancesAsync(receiver, null);
        }
        
        /// <remarks/>
        public void allGoodInstancesAsync(METype receiver, object userState) {
            if ((this.allGoodInstancesOperationCompleted == null)) {
                this.allGoodInstancesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnallGoodInstancesOperationCompleted);
            }
            this.InvokeAsync("allGoodInstances", new object[] {
                        receiver}, this.allGoodInstancesOperationCompleted, userState);
        }
        
        private void OnallGoodInstancesOperationCompleted(object arg) {
            if ((this.allGoodInstancesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.allGoodInstancesCompleted(this, new allGoodInstancesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://metacase.com/MetaEditAPI.allSimilarInstances", RequestNamespace="http://metacase.com/wsdl/", ResponseNamespace="http://metacase.com/wsdl/")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public MEOop[] allSimilarInstances(METype receiver) {
            object[] results = this.Invoke("allSimilarInstances", new object[] {
                        receiver});
            return ((MEOop[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginallSimilarInstances(METype receiver, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("allSimilarInstances", new object[] {
                        receiver}, callback, asyncState);
        }
        
        /// <remarks/>
        public MEOop[] EndallSimilarInstances(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((MEOop[])(results[0]));
        }
        
        /// <remarks/>
        public void allSimilarInstancesAsync(METype receiver) {
            this.allSimilarInstancesAsync(receiver, null);
        }
        
        /// <remarks/>
        public void allSimilarInstancesAsync(METype receiver, object userState) {
            if ((this.allSimilarInstancesOperationCompleted == null)) {
                this.allSimilarInstancesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnallSimilarInstancesOperationCompleted);
            }
            this.InvokeAsync("allSimilarInstances", new object[] {
                        receiver}, this.allSimilarInstancesOperationCompleted, userState);
        }
        
        private void OnallSimilarInstancesOperationCompleted(object arg) {
            if ((this.allSimilarInstancesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.allSimilarInstancesCompleted(this, new allSimilarInstancesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://metacase.com/MetaEditAPI.subTypeNamed", RequestNamespace="http://metacase.com/wsdl/", ResponseNamespace="http://metacase.com/wsdl/")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public METype subTypeNamed(METype receiver, [System.Xml.Serialization.SoapElementAttribute("subTypeNamed")] string subTypeNamed1) {
            object[] results = this.Invoke("subTypeNamed", new object[] {
                        receiver,
                        subTypeNamed1});
            return ((METype)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginsubTypeNamed(METype receiver, string subTypeNamed1, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("subTypeNamed", new object[] {
                        receiver,
                        subTypeNamed1}, callback, asyncState);
        }
        
        /// <remarks/>
        public METype EndsubTypeNamed(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((METype)(results[0]));
        }
        
        /// <remarks/>
        public void subTypeNamedAsync(METype receiver, string subTypeNamed1) {
            this.subTypeNamedAsync(receiver, subTypeNamed1, null);
        }
        
        /// <remarks/>
        public void subTypeNamedAsync(METype receiver, string subTypeNamed1, object userState) {
            if ((this.subTypeNamedOperationCompleted == null)) {
                this.subTypeNamedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsubTypeNamedOperationCompleted);
            }
            this.InvokeAsync("subTypeNamed", new object[] {
                        receiver,
                        subTypeNamed1}, this.subTypeNamedOperationCompleted, userState);
        }
        
        private void OnsubTypeNamedOperationCompleted(object arg) {
            if ((this.subTypeNamedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.subTypeNamedCompleted(this, new subTypeNamedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://metacase.com/MetaEditAPI.findString", RequestNamespace="http://metacase.com/wsdl/", ResponseNamespace="http://metacase.com/wsdl/")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public MEOop[] findString(MEOop receiver, [System.Xml.Serialization.SoapElementAttribute("findString")] string findString1) {
            object[] results = this.Invoke("findString", new object[] {
                        receiver,
                        findString1});
            return ((MEOop[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginfindString(MEOop receiver, string findString1, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("findString", new object[] {
                        receiver,
                        findString1}, callback, asyncState);
        }
        
        /// <remarks/>
        public MEOop[] EndfindString(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((MEOop[])(results[0]));
        }
        
        /// <remarks/>
        public void findStringAsync(MEOop receiver, string findString1) {
            this.findStringAsync(receiver, findString1, null);
        }
        
        /// <remarks/>
        public void findStringAsync(MEOop receiver, string findString1, object userState) {
            if ((this.findStringOperationCompleted == null)) {
                this.findStringOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfindStringOperationCompleted);
            }
            this.InvokeAsync("findString", new object[] {
                        receiver,
                        findString1}, this.findStringOperationCompleted, userState);
        }
        
        private void OnfindStringOperationCompleted(object arg) {
            if ((this.findStringCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.findStringCompleted(this, new findStringCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://metacase.com/MetaEditAPI.instancesNamed", RequestNamespace="http://metacase.com/wsdl/", ResponseNamespace="http://metacase.com/wsdl/")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public MEOop[] instancesNamed(METype receiver, [System.Xml.Serialization.SoapElementAttribute("instancesNamed")] string instancesNamed1, string ofSubTypesNamed) {
            object[] results = this.Invoke("instancesNamed", new object[] {
                        receiver,
                        instancesNamed1,
                        ofSubTypesNamed});
            return ((MEOop[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegininstancesNamed(METype receiver, string instancesNamed1, string ofSubTypesNamed, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("instancesNamed", new object[] {
                        receiver,
                        instancesNamed1,
                        ofSubTypesNamed}, callback, asyncState);
        }
        
        /// <remarks/>
        public MEOop[] EndinstancesNamed(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((MEOop[])(results[0]));
        }
        
        /// <remarks/>
        public void instancesNamedAsync(METype receiver, string instancesNamed1, string ofSubTypesNamed) {
            this.instancesNamedAsync(receiver, instancesNamed1, ofSubTypesNamed, null);
        }
        
        /// <remarks/>
        public void instancesNamedAsync(METype receiver, string instancesNamed1, string ofSubTypesNamed, object userState) {
            if ((this.instancesNamedOperationCompleted == null)) {
                this.instancesNamedOperationCompleted = new System.Threading.SendOrPostCallback(this.OninstancesNamedOperationCompleted);
            }
            this.InvokeAsync("instancesNamed", new object[] {
                        receiver,
                        instancesNamed1,
                        ofSubTypesNamed}, this.instancesNamedOperationCompleted, userState);
        }
        
        private void OninstancesNamedOperationCompleted(object arg) {
            if ((this.instancesNamedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.instancesNamedCompleted(this, new instancesNamedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://metacase.com/MetaEditAPI.typeName", RequestNamespace="http://metacase.com/wsdl/", ResponseNamespace="http://metacase.com/wsdl/")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public string typeName(METype receiver) {
            object[] results = this.Invoke("typeName", new object[] {
                        receiver});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegintypeName(METype receiver, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("typeName", new object[] {
                        receiver}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndtypeName(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void typeNameAsync(METype receiver) {
            this.typeNameAsync(receiver, null);
        }
        
        /// <remarks/>
        public void typeNameAsync(METype receiver, object userState) {
            if ((this.typeNameOperationCompleted == null)) {
                this.typeNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OntypeNameOperationCompleted);
            }
            this.InvokeAsync("typeName", new object[] {
                        receiver}, this.typeNameOperationCompleted, userState);
        }
        
        private void OntypeNameOperationCompleted(object arg) {
            if ((this.typeNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.typeNameCompleted(this, new typeNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://metacase.com/MetaEditAPI.type", RequestNamespace="http://metacase.com/wsdl/", ResponseNamespace="http://metacase.com/wsdl/")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public METype type(MEOop receiver) {
            object[] results = this.Invoke("type", new object[] {
                        receiver});
            return ((METype)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult Begintype(MEOop receiver, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("type", new object[] {
                        receiver}, callback, asyncState);
        }
        
        /// <remarks/>
        public METype Endtype(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((METype)(results[0]));
        }
        
        /// <remarks/>
        public void typeAsync(MEOop receiver) {
            this.typeAsync(receiver, null);
        }
        
        /// <remarks/>
        public void typeAsync(MEOop receiver, object userState) {
            if ((this.typeOperationCompleted == null)) {
                this.typeOperationCompleted = new System.Threading.SendOrPostCallback(this.OntypeOperationCompleted);
            }
            this.InvokeAsync("type", new object[] {
                        receiver}, this.typeOperationCompleted, userState);
        }
        
        private void OntypeOperationCompleted(object arg) {
            if ((this.typeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.typeCompleted(this, new typeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://metacase.com/MetaEditAPI.userPrintString", RequestNamespace="http://metacase.com/wsdl/", ResponseNamespace="http://metacase.com/wsdl/")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public string userPrintString(MEOop receiver) {
            object[] results = this.Invoke("userPrintString", new object[] {
                        receiver});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginuserPrintString(MEOop receiver, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("userPrintString", new object[] {
                        receiver}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EnduserPrintString(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void userPrintStringAsync(MEOop receiver) {
            this.userPrintStringAsync(receiver, null);
        }
        
        /// <remarks/>
        public void userPrintStringAsync(MEOop receiver, object userState) {
            if ((this.userPrintStringOperationCompleted == null)) {
                this.userPrintStringOperationCompleted = new System.Threading.SendOrPostCallback(this.OnuserPrintStringOperationCompleted);
            }
            this.InvokeAsync("userPrintString", new object[] {
                        receiver}, this.userPrintStringOperationCompleted, userState);
        }
        
        private void OnuserPrintStringOperationCompleted(object arg) {
            if ((this.userPrintStringCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.userPrintStringCompleted(this, new userPrintStringCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://metacase.com/MetaEditAPI.valueAt", RequestNamespace="http://metacase.com/wsdl/", ResponseNamespace="http://metacase.com/wsdl/")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public MEAny valueAt(MEOop receiver, [System.Xml.Serialization.SoapElementAttribute("valueAt")] int valueAt1) {
            object[] results = this.Invoke("valueAt", new object[] {
                        receiver,
                        valueAt1});
            return ((MEAny)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginvalueAt(MEOop receiver, int valueAt1, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("valueAt", new object[] {
                        receiver,
                        valueAt1}, callback, asyncState);
        }
        
        /// <remarks/>
        public MEAny EndvalueAt(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((MEAny)(results[0]));
        }
        
        /// <remarks/>
        public void valueAtAsync(MEOop receiver, int valueAt1) {
            this.valueAtAsync(receiver, valueAt1, null);
        }
        
        /// <remarks/>
        public void valueAtAsync(MEOop receiver, int valueAt1, object userState) {
            if ((this.valueAtOperationCompleted == null)) {
                this.valueAtOperationCompleted = new System.Threading.SendOrPostCallback(this.OnvalueAtOperationCompleted);
            }
            this.InvokeAsync("valueAt", new object[] {
                        receiver,
                        valueAt1}, this.valueAtOperationCompleted, userState);
        }
        
        private void OnvalueAtOperationCompleted(object arg) {
            if ((this.valueAtCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.valueAtCompleted(this, new valueAtCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://metacase.com/MetaEditAPI.setValueAt", RequestNamespace="http://metacase.com/wsdl/", ResponseNamespace="http://metacase.com/wsdl/")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public MEAny setValueAt(MEOop receiver, [System.Xml.Serialization.SoapElementAttribute("valueAt")] int valueAt1, MEAny put) {
            object[] results = this.Invoke("setValueAt", new object[] {
                        receiver,
                        valueAt1,
                        put});
            return ((MEAny)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginsetValueAt(MEOop receiver, int valueAt1, MEAny put, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("setValueAt", new object[] {
                        receiver,
                        valueAt1,
                        put}, callback, asyncState);
        }
        
        /// <remarks/>
        public MEAny EndsetValueAt(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((MEAny)(results[0]));
        }
        
        /// <remarks/>
        public void setValueAtAsync(MEOop receiver, int valueAt1, MEAny put) {
            this.setValueAtAsync(receiver, valueAt1, put, null);
        }
        
        /// <remarks/>
        public void setValueAtAsync(MEOop receiver, int valueAt1, MEAny put, object userState) {
            if ((this.setValueAtOperationCompleted == null)) {
                this.setValueAtOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetValueAtOperationCompleted);
            }
            this.InvokeAsync("setValueAt", new object[] {
                        receiver,
                        valueAt1,
                        put}, this.setValueAtOperationCompleted, userState);
        }
        
        private void OnsetValueAtOperationCompleted(object arg) {
            if ((this.setValueAtCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setValueAtCompleted(this, new setValueAtCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://metacase.com/MetaEditAPI.allPropertiesValues", RequestNamespace="http://metacase.com/wsdl/", ResponseNamespace="http://metacase.com/wsdl/")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public MEAny[] allPropertiesValues(MEOop receiver) {
            object[] results = this.Invoke("allPropertiesValues", new object[] {
                        receiver});
            return ((MEAny[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginallPropertiesValues(MEOop receiver, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("allPropertiesValues", new object[] {
                        receiver}, callback, asyncState);
        }
        
        /// <remarks/>
        public MEAny[] EndallPropertiesValues(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((MEAny[])(results[0]));
        }
        
        /// <remarks/>
        public void allPropertiesValuesAsync(MEOop receiver) {
            this.allPropertiesValuesAsync(receiver, null);
        }
        
        /// <remarks/>
        public void allPropertiesValuesAsync(MEOop receiver, object userState) {
            if ((this.allPropertiesValuesOperationCompleted == null)) {
                this.allPropertiesValuesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnallPropertiesValuesOperationCompleted);
            }
            this.InvokeAsync("allPropertiesValues", new object[] {
                        receiver}, this.allPropertiesValuesOperationCompleted, userState);
        }
        
        private void OnallPropertiesValuesOperationCompleted(object arg) {
            if ((this.allPropertiesValuesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.allPropertiesValuesCompleted(this, new allPropertiesValuesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://metacase.com/MetaEditAPI.allProperties", RequestNamespace="http://metacase.com/wsdl/", ResponseNamespace="http://metacase.com/wsdl/")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public MEOop[] allProperties(MEOop receiver) {
            object[] results = this.Invoke("allProperties", new object[] {
                        receiver});
            return ((MEOop[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginallProperties(MEOop receiver, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("allProperties", new object[] {
                        receiver}, callback, asyncState);
        }
        
        /// <remarks/>
        public MEOop[] EndallProperties(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((MEOop[])(results[0]));
        }
        
        /// <remarks/>
        public void allPropertiesAsync(MEOop receiver) {
            this.allPropertiesAsync(receiver, null);
        }
        
        /// <remarks/>
        public void allPropertiesAsync(MEOop receiver, object userState) {
            if ((this.allPropertiesOperationCompleted == null)) {
                this.allPropertiesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnallPropertiesOperationCompleted);
            }
            this.InvokeAsync("allProperties", new object[] {
                        receiver}, this.allPropertiesOperationCompleted, userState);
        }
        
        private void OnallPropertiesOperationCompleted(object arg) {
            if ((this.allPropertiesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.allPropertiesCompleted(this, new allPropertiesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://metacase.com/MetaEditAPI.allPropertiesWrapped", RequestNamespace="http://metacase.com/wsdl/", ResponseNamespace="http://metacase.com/wsdl/")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public MEAny[] allPropertiesWrapped(MEOop receiver) {
            object[] results = this.Invoke("allPropertiesWrapped", new object[] {
                        receiver});
            return ((MEAny[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginallPropertiesWrapped(MEOop receiver, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("allPropertiesWrapped", new object[] {
                        receiver}, callback, asyncState);
        }
        
        /// <remarks/>
        public MEAny[] EndallPropertiesWrapped(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((MEAny[])(results[0]));
        }
        
        /// <remarks/>
        public void allPropertiesWrappedAsync(MEOop receiver) {
            this.allPropertiesWrappedAsync(receiver, null);
        }
        
        /// <remarks/>
        public void allPropertiesWrappedAsync(MEOop receiver, object userState) {
            if ((this.allPropertiesWrappedOperationCompleted == null)) {
                this.allPropertiesWrappedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnallPropertiesWrappedOperationCompleted);
            }
            this.InvokeAsync("allPropertiesWrapped", new object[] {
                        receiver}, this.allPropertiesWrappedOperationCompleted, userState);
        }
        
        private void OnallPropertiesWrappedOperationCompleted(object arg) {
            if ((this.allPropertiesWrappedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.allPropertiesWrappedCompleted(this, new allPropertiesWrappedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://metacase.com/MetaEditAPI.instProps", RequestNamespace="http://metacase.com/wsdl/", ResponseNamespace="http://metacase.com/wsdl/")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public MEAny instProps(METype receiver, MEAny[] propColl, MEAny[] valueColl, MEAny np, MEAny inArea) {
            object[] results = this.Invoke("instProps", new object[] {
                        receiver,
                        propColl,
                        valueColl,
                        np,
                        inArea});
            return ((MEAny)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegininstProps(METype receiver, MEAny[] propColl, MEAny[] valueColl, MEAny np, MEAny inArea, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("instProps", new object[] {
                        receiver,
                        propColl,
                        valueColl,
                        np,
                        inArea}, callback, asyncState);
        }
        
        /// <remarks/>
        public MEAny EndinstProps(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((MEAny)(results[0]));
        }
        
        /// <remarks/>
        public void instPropsAsync(METype receiver, MEAny[] propColl, MEAny[] valueColl, MEAny np, MEAny inArea) {
            this.instPropsAsync(receiver, propColl, valueColl, np, inArea, null);
        }
        
        /// <remarks/>
        public void instPropsAsync(METype receiver, MEAny[] propColl, MEAny[] valueColl, MEAny np, MEAny inArea, object userState) {
            if ((this.instPropsOperationCompleted == null)) {
                this.instPropsOperationCompleted = new System.Threading.SendOrPostCallback(this.OninstPropsOperationCompleted);
            }
            this.InvokeAsync("instProps", new object[] {
                        receiver,
                        propColl,
                        valueColl,
                        np,
                        inArea}, this.instPropsOperationCompleted, userState);
        }
        
        private void OninstPropsOperationCompleted(object arg) {
            if ((this.instPropsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.instPropsCompleted(this, new instPropsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://metacase.com/MetaEditAPI.unsafeNew", RequestNamespace="http://metacase.com/wsdl/", ResponseNamespace="http://metacase.com/wsdl/")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public MEOop unsafeNew(METype receiver) {
            object[] results = this.Invoke("unsafeNew", new object[] {
                        receiver});
            return ((MEOop)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginunsafeNew(METype receiver, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("unsafeNew", new object[] {
                        receiver}, callback, asyncState);
        }
        
        /// <remarks/>
        public MEOop EndunsafeNew(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((MEOop)(results[0]));
        }
        
        /// <remarks/>
        public void unsafeNewAsync(METype receiver) {
            this.unsafeNewAsync(receiver, null);
        }
        
        /// <remarks/>
        public void unsafeNewAsync(METype receiver, object userState) {
            if ((this.unsafeNewOperationCompleted == null)) {
                this.unsafeNewOperationCompleted = new System.Threading.SendOrPostCallback(this.OnunsafeNewOperationCompleted);
            }
            this.InvokeAsync("unsafeNew", new object[] {
                        receiver}, this.unsafeNewOperationCompleted, userState);
        }
        
        private void OnunsafeNewOperationCompleted(object arg) {
            if ((this.unsafeNewCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.unsafeNewCompleted(this, new unsafeNewCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://metacase.com/MetaEditAPI.objectSet", RequestNamespace="http://metacase.com/wsdl/", ResponseNamespace="http://metacase.com/wsdl/")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public MEOop[] objectSet(MEOop receiver) {
            object[] results = this.Invoke("objectSet", new object[] {
                        receiver});
            return ((MEOop[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginobjectSet(MEOop receiver, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("objectSet", new object[] {
                        receiver}, callback, asyncState);
        }
        
        /// <remarks/>
        public MEOop[] EndobjectSet(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((MEOop[])(results[0]));
        }
        
        /// <remarks/>
        public void objectSetAsync(MEOop receiver) {
            this.objectSetAsync(receiver, null);
        }
        
        /// <remarks/>
        public void objectSetAsync(MEOop receiver, object userState) {
            if ((this.objectSetOperationCompleted == null)) {
                this.objectSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnobjectSetOperationCompleted);
            }
            this.InvokeAsync("objectSet", new object[] {
                        receiver}, this.objectSetOperationCompleted, userState);
        }
        
        private void OnobjectSetOperationCompleted(object arg) {
            if ((this.objectSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.objectSetCompleted(this, new objectSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://metacase.com/MetaEditAPI.relationshipSet", RequestNamespace="http://metacase.com/wsdl/", ResponseNamespace="http://metacase.com/wsdl/")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public MEOop[] relationshipSet(MEOop receiver) {
            object[] results = this.Invoke("relationshipSet", new object[] {
                        receiver});
            return ((MEOop[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginrelationshipSet(MEOop receiver, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("relationshipSet", new object[] {
                        receiver}, callback, asyncState);
        }
        
        /// <remarks/>
        public MEOop[] EndrelationshipSet(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((MEOop[])(results[0]));
        }
        
        /// <remarks/>
        public void relationshipSetAsync(MEOop receiver) {
            this.relationshipSetAsync(receiver, null);
        }
        
        /// <remarks/>
        public void relationshipSetAsync(MEOop receiver, object userState) {
            if ((this.relationshipSetOperationCompleted == null)) {
                this.relationshipSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnrelationshipSetOperationCompleted);
            }
            this.InvokeAsync("relationshipSet", new object[] {
                        receiver}, this.relationshipSetOperationCompleted, userState);
        }
        
        private void OnrelationshipSetOperationCompleted(object arg) {
            if ((this.relationshipSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.relationshipSetCompleted(this, new relationshipSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://metacase.com/MetaEditAPI.roleSet", RequestNamespace="http://metacase.com/wsdl/", ResponseNamespace="http://metacase.com/wsdl/")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public MEOop[] roleSet(MEOop receiver) {
            object[] results = this.Invoke("roleSet", new object[] {
                        receiver});
            return ((MEOop[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginroleSet(MEOop receiver, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("roleSet", new object[] {
                        receiver}, callback, asyncState);
        }
        
        /// <remarks/>
        public MEOop[] EndroleSet(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((MEOop[])(results[0]));
        }
        
        /// <remarks/>
        public void roleSetAsync(MEOop receiver) {
            this.roleSetAsync(receiver, null);
        }
        
        /// <remarks/>
        public void roleSetAsync(MEOop receiver, object userState) {
            if ((this.roleSetOperationCompleted == null)) {
                this.roleSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnroleSetOperationCompleted);
            }
            this.InvokeAsync("roleSet", new object[] {
                        receiver}, this.roleSetOperationCompleted, userState);
        }
        
        private void OnroleSetOperationCompleted(object arg) {
            if ((this.roleSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.roleSetCompleted(this, new roleSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://metacase.com/MetaEditAPI.bindingSet", RequestNamespace="http://metacase.com/wsdl/", ResponseNamespace="http://metacase.com/wsdl/")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public MEOop[] bindingSet(MEOop receiver) {
            object[] results = this.Invoke("bindingSet", new object[] {
                        receiver});
            return ((MEOop[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginbindingSet(MEOop receiver, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("bindingSet", new object[] {
                        receiver}, callback, asyncState);
        }
        
        /// <remarks/>
        public MEOop[] EndbindingSet(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((MEOop[])(results[0]));
        }
        
        /// <remarks/>
        public void bindingSetAsync(MEOop receiver) {
            this.bindingSetAsync(receiver, null);
        }
        
        /// <remarks/>
        public void bindingSetAsync(MEOop receiver, object userState) {
            if ((this.bindingSetOperationCompleted == null)) {
                this.bindingSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnbindingSetOperationCompleted);
            }
            this.InvokeAsync("bindingSet", new object[] {
                        receiver}, this.bindingSetOperationCompleted, userState);
        }
        
        private void OnbindingSetOperationCompleted(object arg) {
            if ((this.bindingSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.bindingSetCompleted(this, new bindingSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://metacase.com/MetaEditAPI.explodeGraphs", RequestNamespace="http://metacase.com/wsdl/", ResponseNamespace="http://metacase.com/wsdl/")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public MEOop[] explodeGraphs(MEOop receiver) {
            object[] results = this.Invoke("explodeGraphs", new object[] {
                        receiver});
            return ((MEOop[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginexplodeGraphs(MEOop receiver, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("explodeGraphs", new object[] {
                        receiver}, callback, asyncState);
        }
        
        /// <remarks/>
        public MEOop[] EndexplodeGraphs(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((MEOop[])(results[0]));
        }
        
        /// <remarks/>
        public void explodeGraphsAsync(MEOop receiver) {
            this.explodeGraphsAsync(receiver, null);
        }
        
        /// <remarks/>
        public void explodeGraphsAsync(MEOop receiver, object userState) {
            if ((this.explodeGraphsOperationCompleted == null)) {
                this.explodeGraphsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnexplodeGraphsOperationCompleted);
            }
            this.InvokeAsync("explodeGraphs", new object[] {
                        receiver}, this.explodeGraphsOperationCompleted, userState);
        }
        
        private void OnexplodeGraphsOperationCompleted(object arg) {
            if ((this.explodeGraphsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.explodeGraphsCompleted(this, new explodeGraphsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://metacase.com/MetaEditAPI.decompGraphs", RequestNamespace="http://metacase.com/wsdl/", ResponseNamespace="http://metacase.com/wsdl/")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public MEOop[] decompGraphs(MEOop receiver) {
            object[] results = this.Invoke("decompGraphs", new object[] {
                        receiver});
            return ((MEOop[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegindecompGraphs(MEOop receiver, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("decompGraphs", new object[] {
                        receiver}, callback, asyncState);
        }
        
        /// <remarks/>
        public MEOop[] EnddecompGraphs(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((MEOop[])(results[0]));
        }
        
        /// <remarks/>
        public void decompGraphsAsync(MEOop receiver) {
            this.decompGraphsAsync(receiver, null);
        }
        
        /// <remarks/>
        public void decompGraphsAsync(MEOop receiver, object userState) {
            if ((this.decompGraphsOperationCompleted == null)) {
                this.decompGraphsOperationCompleted = new System.Threading.SendOrPostCallback(this.OndecompGraphsOperationCompleted);
            }
            this.InvokeAsync("decompGraphs", new object[] {
                        receiver}, this.decompGraphsOperationCompleted, userState);
        }
        
        private void OndecompGraphsOperationCompleted(object arg) {
            if ((this.decompGraphsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.decompGraphsCompleted(this, new decompGraphsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://metacase.com/MetaEditAPI.subgraphs", RequestNamespace="http://metacase.com/wsdl/", ResponseNamespace="http://metacase.com/wsdl/")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public MEOop[] subgraphs(MEOop receiver) {
            object[] results = this.Invoke("subgraphs", new object[] {
                        receiver});
            return ((MEOop[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult Beginsubgraphs(MEOop receiver, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("subgraphs", new object[] {
                        receiver}, callback, asyncState);
        }
        
        /// <remarks/>
        public MEOop[] Endsubgraphs(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((MEOop[])(results[0]));
        }
        
        /// <remarks/>
        public void subgraphsAsync(MEOop receiver) {
            this.subgraphsAsync(receiver, null);
        }
        
        /// <remarks/>
        public void subgraphsAsync(MEOop receiver, object userState) {
            if ((this.subgraphsOperationCompleted == null)) {
                this.subgraphsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsubgraphsOperationCompleted);
            }
            this.InvokeAsync("subgraphs", new object[] {
                        receiver}, this.subgraphsOperationCompleted, userState);
        }
        
        private void OnsubgraphsOperationCompleted(object arg) {
            if ((this.subgraphsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.subgraphsCompleted(this, new subgraphsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://metacase.com/MetaEditAPI.addExplode", RequestNamespace="http://metacase.com/wsdl/", ResponseNamespace="http://metacase.com/wsdl/")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public MEOop addExplode(MEOop receiver, [System.Xml.Serialization.SoapElementAttribute("addExplode")] MEOop addExplode1, MEOop @for) {
            object[] results = this.Invoke("addExplode", new object[] {
                        receiver,
                        addExplode1,
                        @for});
            return ((MEOop)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginaddExplode(MEOop receiver, MEOop addExplode1, MEOop @for, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("addExplode", new object[] {
                        receiver,
                        addExplode1,
                        @for}, callback, asyncState);
        }
        
        /// <remarks/>
        public MEOop EndaddExplode(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((MEOop)(results[0]));
        }
        
        /// <remarks/>
        public void addExplodeAsync(MEOop receiver, MEOop addExplode1, MEOop @for) {
            this.addExplodeAsync(receiver, addExplode1, @for, null);
        }
        
        /// <remarks/>
        public void addExplodeAsync(MEOop receiver, MEOop addExplode1, MEOop @for, object userState) {
            if ((this.addExplodeOperationCompleted == null)) {
                this.addExplodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddExplodeOperationCompleted);
            }
            this.InvokeAsync("addExplode", new object[] {
                        receiver,
                        addExplode1,
                        @for}, this.addExplodeOperationCompleted, userState);
        }
        
        private void OnaddExplodeOperationCompleted(object arg) {
            if ((this.addExplodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addExplodeCompleted(this, new addExplodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://metacase.com/MetaEditAPI.getExplodeGraphsForNP", RequestNamespace="http://metacase.com/wsdl/", ResponseNamespace="http://metacase.com/wsdl/")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public MEOop[] getExplodeGraphsForNP(MEOop receiver, [System.Xml.Serialization.SoapElementAttribute("getExplodeGraphsForNP")] MEOop getExplodeGraphsForNP1) {
            object[] results = this.Invoke("getExplodeGraphsForNP", new object[] {
                        receiver,
                        getExplodeGraphsForNP1});
            return ((MEOop[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetExplodeGraphsForNP(MEOop receiver, MEOop getExplodeGraphsForNP1, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getExplodeGraphsForNP", new object[] {
                        receiver,
                        getExplodeGraphsForNP1}, callback, asyncState);
        }
        
        /// <remarks/>
        public MEOop[] EndgetExplodeGraphsForNP(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((MEOop[])(results[0]));
        }
        
        /// <remarks/>
        public void getExplodeGraphsForNPAsync(MEOop receiver, MEOop getExplodeGraphsForNP1) {
            this.getExplodeGraphsForNPAsync(receiver, getExplodeGraphsForNP1, null);
        }
        
        /// <remarks/>
        public void getExplodeGraphsForNPAsync(MEOop receiver, MEOop getExplodeGraphsForNP1, object userState) {
            if ((this.getExplodeGraphsForNPOperationCompleted == null)) {
                this.getExplodeGraphsForNPOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetExplodeGraphsForNPOperationCompleted);
            }
            this.InvokeAsync("getExplodeGraphsForNP", new object[] {
                        receiver,
                        getExplodeGraphsForNP1}, this.getExplodeGraphsForNPOperationCompleted, userState);
        }
        
        private void OngetExplodeGraphsForNPOperationCompleted(object arg) {
            if ((this.getExplodeGraphsForNPCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getExplodeGraphsForNPCompleted(this, new getExplodeGraphsForNPCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://metacase.com/MetaEditAPI.removeExplode", RequestNamespace="http://metacase.com/wsdl/", ResponseNamespace="http://metacase.com/wsdl/")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public MEOop removeExplode(MEOop receiver, [System.Xml.Serialization.SoapElementAttribute("removeExplode")] MEOop removeExplode1, MEOop @for) {
            object[] results = this.Invoke("removeExplode", new object[] {
                        receiver,
                        removeExplode1,
                        @for});
            return ((MEOop)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginremoveExplode(MEOop receiver, MEOop removeExplode1, MEOop @for, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("removeExplode", new object[] {
                        receiver,
                        removeExplode1,
                        @for}, callback, asyncState);
        }
        
        /// <remarks/>
        public MEOop EndremoveExplode(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((MEOop)(results[0]));
        }
        
        /// <remarks/>
        public void removeExplodeAsync(MEOop receiver, MEOop removeExplode1, MEOop @for) {
            this.removeExplodeAsync(receiver, removeExplode1, @for, null);
        }
        
        /// <remarks/>
        public void removeExplodeAsync(MEOop receiver, MEOop removeExplode1, MEOop @for, object userState) {
            if ((this.removeExplodeOperationCompleted == null)) {
                this.removeExplodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnremoveExplodeOperationCompleted);
            }
            this.InvokeAsync("removeExplode", new object[] {
                        receiver,
                        removeExplode1,
                        @for}, this.removeExplodeOperationCompleted, userState);
        }
        
        private void OnremoveExplodeOperationCompleted(object arg) {
            if ((this.removeExplodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.removeExplodeCompleted(this, new removeExplodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://metacase.com/MetaEditAPI.decompGraph", RequestNamespace="http://metacase.com/wsdl/", ResponseNamespace="http://metacase.com/wsdl/")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public MEAny decompGraph(MEOop receiver) {
            object[] results = this.Invoke("decompGraph", new object[] {
                        receiver});
            return ((MEAny)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegindecompGraph(MEOop receiver, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("decompGraph", new object[] {
                        receiver}, callback, asyncState);
        }
        
        /// <remarks/>
        public MEAny EnddecompGraph(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((MEAny)(results[0]));
        }
        
        /// <remarks/>
        public void decompGraphAsync(MEOop receiver) {
            this.decompGraphAsync(receiver, null);
        }
        
        /// <remarks/>
        public void decompGraphAsync(MEOop receiver, object userState) {
            if ((this.decompGraphOperationCompleted == null)) {
                this.decompGraphOperationCompleted = new System.Threading.SendOrPostCallback(this.OndecompGraphOperationCompleted);
            }
            this.InvokeAsync("decompGraph", new object[] {
                        receiver}, this.decompGraphOperationCompleted, userState);
        }
        
        private void OndecompGraphOperationCompleted(object arg) {
            if ((this.decompGraphCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.decompGraphCompleted(this, new decompGraphCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://metacase.com/MetaEditAPI.setDecompGraph", RequestNamespace="http://metacase.com/wsdl/", ResponseNamespace="http://metacase.com/wsdl/")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public MEAny setDecompGraph(MEOop receiver, [System.Xml.Serialization.SoapElementAttribute("decompGraph")] MEAny decompGraph1) {
            object[] results = this.Invoke("setDecompGraph", new object[] {
                        receiver,
                        decompGraph1});
            return ((MEAny)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginsetDecompGraph(MEOop receiver, MEAny decompGraph1, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("setDecompGraph", new object[] {
                        receiver,
                        decompGraph1}, callback, asyncState);
        }
        
        /// <remarks/>
        public MEAny EndsetDecompGraph(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((MEAny)(results[0]));
        }
        
        /// <remarks/>
        public void setDecompGraphAsync(MEOop receiver, MEAny decompGraph1) {
            this.setDecompGraphAsync(receiver, decompGraph1, null);
        }
        
        /// <remarks/>
        public void setDecompGraphAsync(MEOop receiver, MEAny decompGraph1, object userState) {
            if ((this.setDecompGraphOperationCompleted == null)) {
                this.setDecompGraphOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetDecompGraphOperationCompleted);
            }
            this.InvokeAsync("setDecompGraph", new object[] {
                        receiver,
                        decompGraph1}, this.setDecompGraphOperationCompleted, userState);
        }
        
        private void OnsetDecompGraphOperationCompleted(object arg) {
            if ((this.setDecompGraphCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setDecompGraphCompleted(this, new setDecompGraphCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://metacase.com/MetaEditAPI.objsForObj", RequestNamespace="http://metacase.com/wsdl/", ResponseNamespace="http://metacase.com/wsdl/")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public MEOop[] objsForObj(MEOop receiver, [System.Xml.Serialization.SoapElementAttribute("objsForObj")] MEOop objsForObj1, METype ofClass) {
            object[] results = this.Invoke("objsForObj", new object[] {
                        receiver,
                        objsForObj1,
                        ofClass});
            return ((MEOop[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginobjsForObj(MEOop receiver, MEOop objsForObj1, METype ofClass, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("objsForObj", new object[] {
                        receiver,
                        objsForObj1,
                        ofClass}, callback, asyncState);
        }
        
        /// <remarks/>
        public MEOop[] EndobjsForObj(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((MEOop[])(results[0]));
        }
        
        /// <remarks/>
        public void objsForObjAsync(MEOop receiver, MEOop objsForObj1, METype ofClass) {
            this.objsForObjAsync(receiver, objsForObj1, ofClass, null);
        }
        
        /// <remarks/>
        public void objsForObjAsync(MEOop receiver, MEOop objsForObj1, METype ofClass, object userState) {
            if ((this.objsForObjOperationCompleted == null)) {
                this.objsForObjOperationCompleted = new System.Threading.SendOrPostCallback(this.OnobjsForObjOperationCompleted);
            }
            this.InvokeAsync("objsForObj", new object[] {
                        receiver,
                        objsForObj1,
                        ofClass}, this.objsForObjOperationCompleted, userState);
        }
        
        private void OnobjsForObjOperationCompleted(object arg) {
            if ((this.objsForObjCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.objsForObjCompleted(this, new objsForObjCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://metacase.com/MetaEditAPI.objsForRel", RequestNamespace="http://metacase.com/wsdl/", ResponseNamespace="http://metacase.com/wsdl/")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public MEOop[] objsForRel(MEOop receiver, [System.Xml.Serialization.SoapElementAttribute("objsForRel")] MEOop objsForRel1, METype ofClass) {
            object[] results = this.Invoke("objsForRel", new object[] {
                        receiver,
                        objsForRel1,
                        ofClass});
            return ((MEOop[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginobjsForRel(MEOop receiver, MEOop objsForRel1, METype ofClass, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("objsForRel", new object[] {
                        receiver,
                        objsForRel1,
                        ofClass}, callback, asyncState);
        }
        
        /// <remarks/>
        public MEOop[] EndobjsForRel(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((MEOop[])(results[0]));
        }
        
        /// <remarks/>
        public void objsForRelAsync(MEOop receiver, MEOop objsForRel1, METype ofClass) {
            this.objsForRelAsync(receiver, objsForRel1, ofClass, null);
        }
        
        /// <remarks/>
        public void objsForRelAsync(MEOop receiver, MEOop objsForRel1, METype ofClass, object userState) {
            if ((this.objsForRelOperationCompleted == null)) {
                this.objsForRelOperationCompleted = new System.Threading.SendOrPostCallback(this.OnobjsForRelOperationCompleted);
            }
            this.InvokeAsync("objsForRel", new object[] {
                        receiver,
                        objsForRel1,
                        ofClass}, this.objsForRelOperationCompleted, userState);
        }
        
        private void OnobjsForRelOperationCompleted(object arg) {
            if ((this.objsForRelCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.objsForRelCompleted(this, new objsForRelCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://metacase.com/MetaEditAPI.objsForRole", RequestNamespace="http://metacase.com/wsdl/", ResponseNamespace="http://metacase.com/wsdl/")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public MEOop[] objsForRole(MEOop receiver, [System.Xml.Serialization.SoapElementAttribute("objsForRole")] MEOop objsForRole1, METype ofClass) {
            object[] results = this.Invoke("objsForRole", new object[] {
                        receiver,
                        objsForRole1,
                        ofClass});
            return ((MEOop[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginobjsForRole(MEOop receiver, MEOop objsForRole1, METype ofClass, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("objsForRole", new object[] {
                        receiver,
                        objsForRole1,
                        ofClass}, callback, asyncState);
        }
        
        /// <remarks/>
        public MEOop[] EndobjsForRole(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((MEOop[])(results[0]));
        }
        
        /// <remarks/>
        public void objsForRoleAsync(MEOop receiver, MEOop objsForRole1, METype ofClass) {
            this.objsForRoleAsync(receiver, objsForRole1, ofClass, null);
        }
        
        /// <remarks/>
        public void objsForRoleAsync(MEOop receiver, MEOop objsForRole1, METype ofClass, object userState) {
            if ((this.objsForRoleOperationCompleted == null)) {
                this.objsForRoleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnobjsForRoleOperationCompleted);
            }
            this.InvokeAsync("objsForRole", new object[] {
                        receiver,
                        objsForRole1,
                        ofClass}, this.objsForRoleOperationCompleted, userState);
        }
        
        private void OnobjsForRoleOperationCompleted(object arg) {
            if ((this.objsForRoleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.objsForRoleCompleted(this, new objsForRoleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://metacase.com/MetaEditAPI.relsForObj", RequestNamespace="http://metacase.com/wsdl/", ResponseNamespace="http://metacase.com/wsdl/")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public MEOop[] relsForObj(MEOop receiver, [System.Xml.Serialization.SoapElementAttribute("relsForObj")] MEOop relsForObj1, METype ofClass) {
            object[] results = this.Invoke("relsForObj", new object[] {
                        receiver,
                        relsForObj1,
                        ofClass});
            return ((MEOop[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginrelsForObj(MEOop receiver, MEOop relsForObj1, METype ofClass, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("relsForObj", new object[] {
                        receiver,
                        relsForObj1,
                        ofClass}, callback, asyncState);
        }
        
        /// <remarks/>
        public MEOop[] EndrelsForObj(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((MEOop[])(results[0]));
        }
        
        /// <remarks/>
        public void relsForObjAsync(MEOop receiver, MEOop relsForObj1, METype ofClass) {
            this.relsForObjAsync(receiver, relsForObj1, ofClass, null);
        }
        
        /// <remarks/>
        public void relsForObjAsync(MEOop receiver, MEOop relsForObj1, METype ofClass, object userState) {
            if ((this.relsForObjOperationCompleted == null)) {
                this.relsForObjOperationCompleted = new System.Threading.SendOrPostCallback(this.OnrelsForObjOperationCompleted);
            }
            this.InvokeAsync("relsForObj", new object[] {
                        receiver,
                        relsForObj1,
                        ofClass}, this.relsForObjOperationCompleted, userState);
        }
        
        private void OnrelsForObjOperationCompleted(object arg) {
            if ((this.relsForObjCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.relsForObjCompleted(this, new relsForObjCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://metacase.com/MetaEditAPI.relsForRole", RequestNamespace="http://metacase.com/wsdl/", ResponseNamespace="http://metacase.com/wsdl/")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public MEOop[] relsForRole(MEOop receiver, [System.Xml.Serialization.SoapElementAttribute("relsForRole")] MEOop relsForRole1, METype ofClass) {
            object[] results = this.Invoke("relsForRole", new object[] {
                        receiver,
                        relsForRole1,
                        ofClass});
            return ((MEOop[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginrelsForRole(MEOop receiver, MEOop relsForRole1, METype ofClass, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("relsForRole", new object[] {
                        receiver,
                        relsForRole1,
                        ofClass}, callback, asyncState);
        }
        
        /// <remarks/>
        public MEOop[] EndrelsForRole(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((MEOop[])(results[0]));
        }
        
        /// <remarks/>
        public void relsForRoleAsync(MEOop receiver, MEOop relsForRole1, METype ofClass) {
            this.relsForRoleAsync(receiver, relsForRole1, ofClass, null);
        }
        
        /// <remarks/>
        public void relsForRoleAsync(MEOop receiver, MEOop relsForRole1, METype ofClass, object userState) {
            if ((this.relsForRoleOperationCompleted == null)) {
                this.relsForRoleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnrelsForRoleOperationCompleted);
            }
            this.InvokeAsync("relsForRole", new object[] {
                        receiver,
                        relsForRole1,
                        ofClass}, this.relsForRoleOperationCompleted, userState);
        }
        
        private void OnrelsForRoleOperationCompleted(object arg) {
            if ((this.relsForRoleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.relsForRoleCompleted(this, new relsForRoleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://metacase.com/MetaEditAPI.rolesForObj", RequestNamespace="http://metacase.com/wsdl/", ResponseNamespace="http://metacase.com/wsdl/")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public MEOop[] rolesForObj(MEOop receiver, [System.Xml.Serialization.SoapElementAttribute("rolesForObj")] MEOop rolesForObj1, METype ofClass) {
            object[] results = this.Invoke("rolesForObj", new object[] {
                        receiver,
                        rolesForObj1,
                        ofClass});
            return ((MEOop[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginrolesForObj(MEOop receiver, MEOop rolesForObj1, METype ofClass, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("rolesForObj", new object[] {
                        receiver,
                        rolesForObj1,
                        ofClass}, callback, asyncState);
        }
        
        /// <remarks/>
        public MEOop[] EndrolesForObj(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((MEOop[])(results[0]));
        }
        
        /// <remarks/>
        public void rolesForObjAsync(MEOop receiver, MEOop rolesForObj1, METype ofClass) {
            this.rolesForObjAsync(receiver, rolesForObj1, ofClass, null);
        }
        
        /// <remarks/>
        public void rolesForObjAsync(MEOop receiver, MEOop rolesForObj1, METype ofClass, object userState) {
            if ((this.rolesForObjOperationCompleted == null)) {
                this.rolesForObjOperationCompleted = new System.Threading.SendOrPostCallback(this.OnrolesForObjOperationCompleted);
            }
            this.InvokeAsync("rolesForObj", new object[] {
                        receiver,
                        rolesForObj1,
                        ofClass}, this.rolesForObjOperationCompleted, userState);
        }
        
        private void OnrolesForObjOperationCompleted(object arg) {
            if ((this.rolesForObjCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.rolesForObjCompleted(this, new rolesForObjCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://metacase.com/MetaEditAPI.rolesForRel", RequestNamespace="http://metacase.com/wsdl/", ResponseNamespace="http://metacase.com/wsdl/")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public MEOop[] rolesForRel(MEOop receiver, [System.Xml.Serialization.SoapElementAttribute("rolesForRel")] MEOop rolesForRel1, METype ofClass) {
            object[] results = this.Invoke("rolesForRel", new object[] {
                        receiver,
                        rolesForRel1,
                        ofClass});
            return ((MEOop[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginrolesForRel(MEOop receiver, MEOop rolesForRel1, METype ofClass, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("rolesForRel", new object[] {
                        receiver,
                        rolesForRel1,
                        ofClass}, callback, asyncState);
        }
        
        /// <remarks/>
        public MEOop[] EndrolesForRel(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((MEOop[])(results[0]));
        }
        
        /// <remarks/>
        public void rolesForRelAsync(MEOop receiver, MEOop rolesForRel1, METype ofClass) {
            this.rolesForRelAsync(receiver, rolesForRel1, ofClass, null);
        }
        
        /// <remarks/>
        public void rolesForRelAsync(MEOop receiver, MEOop rolesForRel1, METype ofClass, object userState) {
            if ((this.rolesForRelOperationCompleted == null)) {
                this.rolesForRelOperationCompleted = new System.Threading.SendOrPostCallback(this.OnrolesForRelOperationCompleted);
            }
            this.InvokeAsync("rolesForRel", new object[] {
                        receiver,
                        rolesForRel1,
                        ofClass}, this.rolesForRelOperationCompleted, userState);
        }
        
        private void OnrolesForRelOperationCompleted(object arg) {
            if ((this.rolesForRelCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.rolesForRelCompleted(this, new rolesForRelCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://metacase.com/MetaEditAPI.rolesForRole", RequestNamespace="http://metacase.com/wsdl/", ResponseNamespace="http://metacase.com/wsdl/")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public MEOop[] rolesForRole(MEOop receiver, [System.Xml.Serialization.SoapElementAttribute("rolesForRole")] MEOop rolesForRole1, METype ofClass) {
            object[] results = this.Invoke("rolesForRole", new object[] {
                        receiver,
                        rolesForRole1,
                        ofClass});
            return ((MEOop[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginrolesForRole(MEOop receiver, MEOop rolesForRole1, METype ofClass, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("rolesForRole", new object[] {
                        receiver,
                        rolesForRole1,
                        ofClass}, callback, asyncState);
        }
        
        /// <remarks/>
        public MEOop[] EndrolesForRole(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((MEOop[])(results[0]));
        }
        
        /// <remarks/>
        public void rolesForRoleAsync(MEOop receiver, MEOop rolesForRole1, METype ofClass) {
            this.rolesForRoleAsync(receiver, rolesForRole1, ofClass, null);
        }
        
        /// <remarks/>
        public void rolesForRoleAsync(MEOop receiver, MEOop rolesForRole1, METype ofClass, object userState) {
            if ((this.rolesForRoleOperationCompleted == null)) {
                this.rolesForRoleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnrolesForRoleOperationCompleted);
            }
            this.InvokeAsync("rolesForRole", new object[] {
                        receiver,
                        rolesForRole1,
                        ofClass}, this.rolesForRoleOperationCompleted, userState);
        }
        
        private void OnrolesForRoleOperationCompleted(object arg) {
            if ((this.rolesForRoleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.rolesForRoleCompleted(this, new rolesForRoleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://metacase.com/MetaEditAPI.open", RequestNamespace="http://metacase.com/wsdl/", ResponseNamespace="http://metacase.com/wsdl/")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public MENull open(MEOop receiver) {
            object[] results = this.Invoke("open", new object[] {
                        receiver});
            return ((MENull)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult Beginopen(MEOop receiver, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("open", new object[] {
                        receiver}, callback, asyncState);
        }
        
        /// <remarks/>
        public MENull Endopen(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((MENull)(results[0]));
        }
        
        /// <remarks/>
        public void openAsync(MEOop receiver) {
            this.openAsync(receiver, null);
        }
        
        /// <remarks/>
        public void openAsync(MEOop receiver, object userState) {
            if ((this.openOperationCompleted == null)) {
                this.openOperationCompleted = new System.Threading.SendOrPostCallback(this.OnopenOperationCompleted);
            }
            this.InvokeAsync("open", new object[] {
                        receiver}, this.openOperationCompleted, userState);
        }
        
        private void OnopenOperationCompleted(object arg) {
            if ((this.openCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.openCompleted(this, new openCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://metacase.com/MetaEditAPI.animate", RequestNamespace="http://metacase.com/wsdl/", ResponseNamespace="http://metacase.com/wsdl/")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public MENull animate(MEOop receiver, [System.Xml.Serialization.SoapElementAttribute("animate")] MEOop animate1) {
            object[] results = this.Invoke("animate", new object[] {
                        receiver,
                        animate1});
            return ((MENull)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult Beginanimate(MEOop receiver, MEOop animate1, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("animate", new object[] {
                        receiver,
                        animate1}, callback, asyncState);
        }
        
        /// <remarks/>
        public MENull Endanimate(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((MENull)(results[0]));
        }
        
        /// <remarks/>
        public void animateAsync(MEOop receiver, MEOop animate1) {
            this.animateAsync(receiver, animate1, null);
        }
        
        /// <remarks/>
        public void animateAsync(MEOop receiver, MEOop animate1, object userState) {
            if ((this.animateOperationCompleted == null)) {
                this.animateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnanimateOperationCompleted);
            }
            this.InvokeAsync("animate", new object[] {
                        receiver,
                        animate1}, this.animateOperationCompleted, userState);
        }
        
        private void OnanimateOperationCompleted(object arg) {
            if ((this.animateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.animateCompleted(this, new animateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://metacase.com/MetaEditAPI.refresh", RequestNamespace="http://metacase.com/wsdl/", ResponseNamespace="http://metacase.com/wsdl/")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public MENull refresh(MEOop receiver) {
            object[] results = this.Invoke("refresh", new object[] {
                        receiver});
            return ((MENull)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult Beginrefresh(MEOop receiver, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("refresh", new object[] {
                        receiver}, callback, asyncState);
        }
        
        /// <remarks/>
        public MENull Endrefresh(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((MENull)(results[0]));
        }
        
        /// <remarks/>
        public void refreshAsync(MEOop receiver) {
            this.refreshAsync(receiver, null);
        }
        
        /// <remarks/>
        public void refreshAsync(MEOop receiver, object userState) {
            if ((this.refreshOperationCompleted == null)) {
                this.refreshOperationCompleted = new System.Threading.SendOrPostCallback(this.OnrefreshOperationCompleted);
            }
            this.InvokeAsync("refresh", new object[] {
                        receiver}, this.refreshOperationCompleted, userState);
        }
        
        private void OnrefreshOperationCompleted(object arg) {
            if ((this.refreshCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.refreshCompleted(this, new refreshCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://metacase.com/MetaEditAPI.copiedObjects", RequestNamespace="http://metacase.com/wsdl/", ResponseNamespace="http://metacase.com/wsdl/")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public MEOop[] copiedObjects(MENull receiver) {
            object[] results = this.Invoke("copiedObjects", new object[] {
                        receiver});
            return ((MEOop[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegincopiedObjects(MENull receiver, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("copiedObjects", new object[] {
                        receiver}, callback, asyncState);
        }
        
        /// <remarks/>
        public MEOop[] EndcopiedObjects(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((MEOop[])(results[0]));
        }
        
        /// <remarks/>
        public void copiedObjectsAsync(MENull receiver) {
            this.copiedObjectsAsync(receiver, null);
        }
        
        /// <remarks/>
        public void copiedObjectsAsync(MENull receiver, object userState) {
            if ((this.copiedObjectsOperationCompleted == null)) {
                this.copiedObjectsOperationCompleted = new System.Threading.SendOrPostCallback(this.OncopiedObjectsOperationCompleted);
            }
            this.InvokeAsync("copiedObjects", new object[] {
                        receiver}, this.copiedObjectsOperationCompleted, userState);
        }
        
        private void OncopiedObjectsOperationCompleted(object arg) {
            if ((this.copiedObjectsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.copiedObjectsCompleted(this, new copiedObjectsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://metacase.com/MetaEditAPI.delete", RequestNamespace="http://metacase.com/wsdl/", ResponseNamespace="http://metacase.com/wsdl/")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public MENull delete(MEOop receiver) {
            object[] results = this.Invoke("delete", new object[] {
                        receiver});
            return ((MENull)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult Begindelete(MEOop receiver, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("delete", new object[] {
                        receiver}, callback, asyncState);
        }
        
        /// <remarks/>
        public MENull Enddelete(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((MENull)(results[0]));
        }
        
        /// <remarks/>
        public void deleteAsync(MEOop receiver) {
            this.deleteAsync(receiver, null);
        }
        
        /// <remarks/>
        public void deleteAsync(MEOop receiver, object userState) {
            if ((this.deleteOperationCompleted == null)) {
                this.deleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteOperationCompleted);
            }
            this.InvokeAsync("delete", new object[] {
                        receiver}, this.deleteOperationCompleted, userState);
        }
        
        private void OndeleteOperationCompleted(object arg) {
            if ((this.deleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteCompleted(this, new deleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://metacase.com/MetaEditAPI.addToGraph", RequestNamespace="http://metacase.com/wsdl/", ResponseNamespace="http://metacase.com/wsdl/")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public MENull addToGraph(MEOop receiver, [System.Xml.Serialization.SoapElementAttribute("addToGraph")] MEOop addToGraph1) {
            object[] results = this.Invoke("addToGraph", new object[] {
                        receiver,
                        addToGraph1});
            return ((MENull)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginaddToGraph(MEOop receiver, MEOop addToGraph1, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("addToGraph", new object[] {
                        receiver,
                        addToGraph1}, callback, asyncState);
        }
        
        /// <remarks/>
        public MENull EndaddToGraph(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((MENull)(results[0]));
        }
        
        /// <remarks/>
        public void addToGraphAsync(MEOop receiver, MEOop addToGraph1) {
            this.addToGraphAsync(receiver, addToGraph1, null);
        }
        
        /// <remarks/>
        public void addToGraphAsync(MEOop receiver, MEOop addToGraph1, object userState) {
            if ((this.addToGraphOperationCompleted == null)) {
                this.addToGraphOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddToGraphOperationCompleted);
            }
            this.InvokeAsync("addToGraph", new object[] {
                        receiver,
                        addToGraph1}, this.addToGraphOperationCompleted, userState);
        }
        
        private void OnaddToGraphOperationCompleted(object arg) {
            if ((this.addToGraphCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addToGraphCompleted(this, new addToGraphCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://metacase.com/MetaEditAPI.createBinding", RequestNamespace="http://metacase.com/wsdl/", ResponseNamespace="http://metacase.com/wsdl/")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public MEOop createBinding(MEOop receiver, METype relType, METype[] roleTypes, MEOop[] objects) {
            object[] results = this.Invoke("createBinding", new object[] {
                        receiver,
                        relType,
                        roleTypes,
                        objects});
            return ((MEOop)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegincreateBinding(MEOop receiver, METype relType, METype[] roleTypes, MEOop[] objects, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("createBinding", new object[] {
                        receiver,
                        relType,
                        roleTypes,
                        objects}, callback, asyncState);
        }
        
        /// <remarks/>
        public MEOop EndcreateBinding(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((MEOop)(results[0]));
        }
        
        /// <remarks/>
        public void createBindingAsync(MEOop receiver, METype relType, METype[] roleTypes, MEOop[] objects) {
            this.createBindingAsync(receiver, relType, roleTypes, objects, null);
        }
        
        /// <remarks/>
        public void createBindingAsync(MEOop receiver, METype relType, METype[] roleTypes, MEOop[] objects, object userState) {
            if ((this.createBindingOperationCompleted == null)) {
                this.createBindingOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateBindingOperationCompleted);
            }
            this.InvokeAsync("createBinding", new object[] {
                        receiver,
                        relType,
                        roleTypes,
                        objects}, this.createBindingOperationCompleted, userState);
        }
        
        private void OncreateBindingOperationCompleted(object arg) {
            if ((this.createBindingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createBindingCompleted(this, new createBindingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://metacase.com/MetaEditAPI.relationship", RequestNamespace="http://metacase.com/wsdl/", ResponseNamespace="http://metacase.com/wsdl/")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public MEOop relationship(MEOop receiver) {
            object[] results = this.Invoke("relationship", new object[] {
                        receiver});
            return ((MEOop)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult Beginrelationship(MEOop receiver, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("relationship", new object[] {
                        receiver}, callback, asyncState);
        }
        
        /// <remarks/>
        public MEOop Endrelationship(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((MEOop)(results[0]));
        }
        
        /// <remarks/>
        public void relationshipAsync(MEOop receiver) {
            this.relationshipAsync(receiver, null);
        }
        
        /// <remarks/>
        public void relationshipAsync(MEOop receiver, object userState) {
            if ((this.relationshipOperationCompleted == null)) {
                this.relationshipOperationCompleted = new System.Threading.SendOrPostCallback(this.OnrelationshipOperationCompleted);
            }
            this.InvokeAsync("relationship", new object[] {
                        receiver}, this.relationshipOperationCompleted, userState);
        }
        
        private void OnrelationshipOperationCompleted(object arg) {
            if ((this.relationshipCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.relationshipCompleted(this, new relationshipCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://metacase.com/MetaEditAPI.roles", RequestNamespace="http://metacase.com/wsdl/", ResponseNamespace="http://metacase.com/wsdl/")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public MEOop[] roles(MEOop receiver) {
            object[] results = this.Invoke("roles", new object[] {
                        receiver});
            return ((MEOop[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult Beginroles(MEOop receiver, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("roles", new object[] {
                        receiver}, callback, asyncState);
        }
        
        /// <remarks/>
        public MEOop[] Endroles(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((MEOop[])(results[0]));
        }
        
        /// <remarks/>
        public void rolesAsync(MEOop receiver) {
            this.rolesAsync(receiver, null);
        }
        
        /// <remarks/>
        public void rolesAsync(MEOop receiver, object userState) {
            if ((this.rolesOperationCompleted == null)) {
                this.rolesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnrolesOperationCompleted);
            }
            this.InvokeAsync("roles", new object[] {
                        receiver}, this.rolesOperationCompleted, userState);
        }
        
        private void OnrolesOperationCompleted(object arg) {
            if ((this.rolesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.rolesCompleted(this, new rolesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://metacase.com/MetaEditAPI.objects", RequestNamespace="http://metacase.com/wsdl/", ResponseNamespace="http://metacase.com/wsdl/")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public MEOop[] objects(MEOop receiver) {
            object[] results = this.Invoke("objects", new object[] {
                        receiver});
            return ((MEOop[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult Beginobjects(MEOop receiver, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("objects", new object[] {
                        receiver}, callback, asyncState);
        }
        
        /// <remarks/>
        public MEOop[] Endobjects(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((MEOop[])(results[0]));
        }
        
        /// <remarks/>
        public void objectsAsync(MEOop receiver) {
            this.objectsAsync(receiver, null);
        }
        
        /// <remarks/>
        public void objectsAsync(MEOop receiver, object userState) {
            if ((this.objectsOperationCompleted == null)) {
                this.objectsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnobjectsOperationCompleted);
            }
            this.InvokeAsync("objects", new object[] {
                        receiver}, this.objectsOperationCompleted, userState);
        }
        
        private void OnobjectsOperationCompleted(object arg) {
            if ((this.objectsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.objectsCompleted(this, new objectsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://metacase.com/MetaEditAPI.diagrams", RequestNamespace="http://metacase.com/wsdl/", ResponseNamespace="http://metacase.com/wsdl/")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public MEOop[] diagrams(MEOop receiver) {
            object[] results = this.Invoke("diagrams", new object[] {
                        receiver});
            return ((MEOop[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult Begindiagrams(MEOop receiver, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("diagrams", new object[] {
                        receiver}, callback, asyncState);
        }
        
        /// <remarks/>
        public MEOop[] Enddiagrams(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((MEOop[])(results[0]));
        }
        
        /// <remarks/>
        public void diagramsAsync(MEOop receiver) {
            this.diagramsAsync(receiver, null);
        }
        
        /// <remarks/>
        public void diagramsAsync(MEOop receiver, object userState) {
            if ((this.diagramsOperationCompleted == null)) {
                this.diagramsOperationCompleted = new System.Threading.SendOrPostCallback(this.OndiagramsOperationCompleted);
            }
            this.InvokeAsync("diagrams", new object[] {
                        receiver}, this.diagramsOperationCompleted, userState);
        }
        
        private void OndiagramsOperationCompleted(object arg) {
            if ((this.diagramsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.diagramsCompleted(this, new diagramsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://metacase.com/MetaEditAPI.matrices", RequestNamespace="http://metacase.com/wsdl/", ResponseNamespace="http://metacase.com/wsdl/")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public MEOop[] matrices(MEOop receiver) {
            object[] results = this.Invoke("matrices", new object[] {
                        receiver});
            return ((MEOop[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult Beginmatrices(MEOop receiver, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("matrices", new object[] {
                        receiver}, callback, asyncState);
        }
        
        /// <remarks/>
        public MEOop[] Endmatrices(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((MEOop[])(results[0]));
        }
        
        /// <remarks/>
        public void matricesAsync(MEOop receiver) {
            this.matricesAsync(receiver, null);
        }
        
        /// <remarks/>
        public void matricesAsync(MEOop receiver, object userState) {
            if ((this.matricesOperationCompleted == null)) {
                this.matricesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmatricesOperationCompleted);
            }
            this.InvokeAsync("matrices", new object[] {
                        receiver}, this.matricesOperationCompleted, userState);
        }
        
        private void OnmatricesOperationCompleted(object arg) {
            if ((this.matricesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.matricesCompleted(this, new matricesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://metacase.com/MetaEditAPI.tables", RequestNamespace="http://metacase.com/wsdl/", ResponseNamespace="http://metacase.com/wsdl/")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public MEOop[] tables(MEOop receiver) {
            object[] results = this.Invoke("tables", new object[] {
                        receiver});
            return ((MEOop[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult Begintables(MEOop receiver, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("tables", new object[] {
                        receiver}, callback, asyncState);
        }
        
        /// <remarks/>
        public MEOop[] Endtables(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((MEOop[])(results[0]));
        }
        
        /// <remarks/>
        public void tablesAsync(MEOop receiver) {
            this.tablesAsync(receiver, null);
        }
        
        /// <remarks/>
        public void tablesAsync(MEOop receiver, object userState) {
            if ((this.tablesOperationCompleted == null)) {
                this.tablesOperationCompleted = new System.Threading.SendOrPostCallback(this.OntablesOperationCompleted);
            }
            this.InvokeAsync("tables", new object[] {
                        receiver}, this.tablesOperationCompleted, userState);
        }
        
        private void OntablesOperationCompleted(object arg) {
            if ((this.tablesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.tablesCompleted(this, new tablesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://metacase.com/MetaEditAPI.newDiagram", RequestNamespace="http://metacase.com/wsdl/", ResponseNamespace="http://metacase.com/wsdl/")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public MEOop newDiagram(MEOop receiver) {
            object[] results = this.Invoke("newDiagram", new object[] {
                        receiver});
            return ((MEOop)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginnewDiagram(MEOop receiver, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("newDiagram", new object[] {
                        receiver}, callback, asyncState);
        }
        
        /// <remarks/>
        public MEOop EndnewDiagram(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((MEOop)(results[0]));
        }
        
        /// <remarks/>
        public void newDiagramAsync(MEOop receiver) {
            this.newDiagramAsync(receiver, null);
        }
        
        /// <remarks/>
        public void newDiagramAsync(MEOop receiver, object userState) {
            if ((this.newDiagramOperationCompleted == null)) {
                this.newDiagramOperationCompleted = new System.Threading.SendOrPostCallback(this.OnnewDiagramOperationCompleted);
            }
            this.InvokeAsync("newDiagram", new object[] {
                        receiver}, this.newDiagramOperationCompleted, userState);
        }
        
        private void OnnewDiagramOperationCompleted(object arg) {
            if ((this.newDiagramCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.newDiagramCompleted(this, new newDiagramCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://metacase.com/MetaEditAPI.newMatrix", RequestNamespace="http://metacase.com/wsdl/", ResponseNamespace="http://metacase.com/wsdl/")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public MEOop newMatrix(MEOop receiver) {
            object[] results = this.Invoke("newMatrix", new object[] {
                        receiver});
            return ((MEOop)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginnewMatrix(MEOop receiver, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("newMatrix", new object[] {
                        receiver}, callback, asyncState);
        }
        
        /// <remarks/>
        public MEOop EndnewMatrix(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((MEOop)(results[0]));
        }
        
        /// <remarks/>
        public void newMatrixAsync(MEOop receiver) {
            this.newMatrixAsync(receiver, null);
        }
        
        /// <remarks/>
        public void newMatrixAsync(MEOop receiver, object userState) {
            if ((this.newMatrixOperationCompleted == null)) {
                this.newMatrixOperationCompleted = new System.Threading.SendOrPostCallback(this.OnnewMatrixOperationCompleted);
            }
            this.InvokeAsync("newMatrix", new object[] {
                        receiver}, this.newMatrixOperationCompleted, userState);
        }
        
        private void OnnewMatrixOperationCompleted(object arg) {
            if ((this.newMatrixCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.newMatrixCompleted(this, new newMatrixCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://metacase.com/MetaEditAPI.newTable", RequestNamespace="http://metacase.com/wsdl/", ResponseNamespace="http://metacase.com/wsdl/")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public MEOop newTable(MEOop receiver) {
            object[] results = this.Invoke("newTable", new object[] {
                        receiver});
            return ((MEOop)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginnewTable(MEOop receiver, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("newTable", new object[] {
                        receiver}, callback, asyncState);
        }
        
        /// <remarks/>
        public MEOop EndnewTable(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((MEOop)(results[0]));
        }
        
        /// <remarks/>
        public void newTableAsync(MEOop receiver) {
            this.newTableAsync(receiver, null);
        }
        
        /// <remarks/>
        public void newTableAsync(MEOop receiver, object userState) {
            if ((this.newTableOperationCompleted == null)) {
                this.newTableOperationCompleted = new System.Threading.SendOrPostCallback(this.OnnewTableOperationCompleted);
            }
            this.InvokeAsync("newTable", new object[] {
                        receiver}, this.newTableOperationCompleted, userState);
        }
        
        private void OnnewTableOperationCompleted(object arg) {
            if ((this.newTableCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.newTableCompleted(this, new newTableCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://metacase.com/MetaEditAPI.inst", RequestNamespace="http://metacase.com/wsdl/", ResponseNamespace="http://metacase.com/wsdl/")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public MEOop inst(MEOop receiver) {
            object[] results = this.Invoke("inst", new object[] {
                        receiver});
            return ((MEOop)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult Begininst(MEOop receiver, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("inst", new object[] {
                        receiver}, callback, asyncState);
        }
        
        /// <remarks/>
        public MEOop Endinst(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((MEOop)(results[0]));
        }
        
        /// <remarks/>
        public void instAsync(MEOop receiver) {
            this.instAsync(receiver, null);
        }
        
        /// <remarks/>
        public void instAsync(MEOop receiver, object userState) {
            if ((this.instOperationCompleted == null)) {
                this.instOperationCompleted = new System.Threading.SendOrPostCallback(this.OninstOperationCompleted);
            }
            this.InvokeAsync("inst", new object[] {
                        receiver}, this.instOperationCompleted, userState);
        }
        
        private void OninstOperationCompleted(object arg) {
            if ((this.instCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.instCompleted(this, new instCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://metacase.com/MetaEditAPI.repSet", RequestNamespace="http://metacase.com/wsdl/", ResponseNamespace="http://metacase.com/wsdl/")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public MEOop[] repSet(MEOop receiver) {
            object[] results = this.Invoke("repSet", new object[] {
                        receiver});
            return ((MEOop[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginrepSet(MEOop receiver, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("repSet", new object[] {
                        receiver}, callback, asyncState);
        }
        
        /// <remarks/>
        public MEOop[] EndrepSet(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((MEOop[])(results[0]));
        }
        
        /// <remarks/>
        public void repSetAsync(MEOop receiver) {
            this.repSetAsync(receiver, null);
        }
        
        /// <remarks/>
        public void repSetAsync(MEOop receiver, object userState) {
            if ((this.repSetOperationCompleted == null)) {
                this.repSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnrepSetOperationCompleted);
            }
            this.InvokeAsync("repSet", new object[] {
                        receiver}, this.repSetOperationCompleted, userState);
        }
        
        private void OnrepSetOperationCompleted(object arg) {
            if ((this.repSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.repSetCompleted(this, new repSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://metacase.com/MetaEditAPI.reprGraph", RequestNamespace="http://metacase.com/wsdl/", ResponseNamespace="http://metacase.com/wsdl/")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public MEOop reprGraph(MEOop receiver) {
            object[] results = this.Invoke("reprGraph", new object[] {
                        receiver});
            return ((MEOop)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginreprGraph(MEOop receiver, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("reprGraph", new object[] {
                        receiver}, callback, asyncState);
        }
        
        /// <remarks/>
        public MEOop EndreprGraph(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((MEOop)(results[0]));
        }
        
        /// <remarks/>
        public void reprGraphAsync(MEOop receiver) {
            this.reprGraphAsync(receiver, null);
        }
        
        /// <remarks/>
        public void reprGraphAsync(MEOop receiver, object userState) {
            if ((this.reprGraphOperationCompleted == null)) {
                this.reprGraphOperationCompleted = new System.Threading.SendOrPostCallback(this.OnreprGraphOperationCompleted);
            }
            this.InvokeAsync("reprGraph", new object[] {
                        receiver}, this.reprGraphOperationCompleted, userState);
        }
        
        private void OnreprGraphOperationCompleted(object arg) {
            if ((this.reprGraphCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.reprGraphCompleted(this, new reprGraphCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://metacase.com/MetaEditAPI.remove", RequestNamespace="http://metacase.com/wsdl/", ResponseNamespace="http://metacase.com/wsdl/")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public MEOop remove(MEOop receiver) {
            object[] results = this.Invoke("remove", new object[] {
                        receiver});
            return ((MEOop)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult Beginremove(MEOop receiver, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("remove", new object[] {
                        receiver}, callback, asyncState);
        }
        
        /// <remarks/>
        public MEOop Endremove(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((MEOop)(results[0]));
        }
        
        /// <remarks/>
        public void removeAsync(MEOop receiver) {
            this.removeAsync(receiver, null);
        }
        
        /// <remarks/>
        public void removeAsync(MEOop receiver, object userState) {
            if ((this.removeOperationCompleted == null)) {
                this.removeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnremoveOperationCompleted);
            }
            this.InvokeAsync("remove", new object[] {
                        receiver}, this.removeOperationCompleted, userState);
        }
        
        private void OnremoveOperationCompleted(object arg) {
            if ((this.removeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.removeCompleted(this, new removeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://metacase.com/MetaEditAPI.timeStamp", RequestNamespace="http://metacase.com/wsdl/", ResponseNamespace="http://metacase.com/wsdl/")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public System.DateTime timeStamp(MEOop receiver) {
            object[] results = this.Invoke("timeStamp", new object[] {
                        receiver});
            return ((System.DateTime)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegintimeStamp(MEOop receiver, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("timeStamp", new object[] {
                        receiver}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.DateTime EndtimeStamp(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.DateTime)(results[0]));
        }
        
        /// <remarks/>
        public void timeStampAsync(MEOop receiver) {
            this.timeStampAsync(receiver, null);
        }
        
        /// <remarks/>
        public void timeStampAsync(MEOop receiver, object userState) {
            if ((this.timeStampOperationCompleted == null)) {
                this.timeStampOperationCompleted = new System.Threading.SendOrPostCallback(this.OntimeStampOperationCompleted);
            }
            this.InvokeAsync("timeStamp", new object[] {
                        receiver}, this.timeStampOperationCompleted, userState);
        }
        
        private void OntimeStampOperationCompleted(object arg) {
            if ((this.timeStampCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.timeStampCompleted(this, new timeStampCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://metacase.com/MetaEditAPI.setTimeStamp", RequestNamespace="http://metacase.com/wsdl/", ResponseNamespace="http://metacase.com/wsdl/")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public MENull setTimeStamp(MEOop receiver, [System.Xml.Serialization.SoapElementAttribute("timeStamp")] System.DateTime timeStamp1) {
            object[] results = this.Invoke("setTimeStamp", new object[] {
                        receiver,
                        timeStamp1});
            return ((MENull)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginsetTimeStamp(MEOop receiver, System.DateTime timeStamp1, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("setTimeStamp", new object[] {
                        receiver,
                        timeStamp1}, callback, asyncState);
        }
        
        /// <remarks/>
        public MENull EndsetTimeStamp(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((MENull)(results[0]));
        }
        
        /// <remarks/>
        public void setTimeStampAsync(MEOop receiver, System.DateTime timeStamp1) {
            this.setTimeStampAsync(receiver, timeStamp1, null);
        }
        
        /// <remarks/>
        public void setTimeStampAsync(MEOop receiver, System.DateTime timeStamp1, object userState) {
            if ((this.setTimeStampOperationCompleted == null)) {
                this.setTimeStampOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetTimeStampOperationCompleted);
            }
            this.InvokeAsync("setTimeStamp", new object[] {
                        receiver,
                        timeStamp1}, this.setTimeStampOperationCompleted, userState);
        }
        
        private void OnsetTimeStampOperationCompleted(object arg) {
            if ((this.setTimeStampCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setTimeStampCompleted(this, new setTimeStampCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://metacase.com/MetaEditAPI.objectReprs", RequestNamespace="http://metacase.com/wsdl/", ResponseNamespace="http://metacase.com/wsdl/")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public MEOop[] objectReprs(MEOop receiver) {
            object[] results = this.Invoke("objectReprs", new object[] {
                        receiver});
            return ((MEOop[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginobjectReprs(MEOop receiver, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("objectReprs", new object[] {
                        receiver}, callback, asyncState);
        }
        
        /// <remarks/>
        public MEOop[] EndobjectReprs(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((MEOop[])(results[0]));
        }
        
        /// <remarks/>
        public void objectReprsAsync(MEOop receiver) {
            this.objectReprsAsync(receiver, null);
        }
        
        /// <remarks/>
        public void objectReprsAsync(MEOop receiver, object userState) {
            if ((this.objectReprsOperationCompleted == null)) {
                this.objectReprsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnobjectReprsOperationCompleted);
            }
            this.InvokeAsync("objectReprs", new object[] {
                        receiver}, this.objectReprsOperationCompleted, userState);
        }
        
        private void OnobjectReprsOperationCompleted(object arg) {
            if ((this.objectReprsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.objectReprsCompleted(this, new objectReprsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://metacase.com/MetaEditAPI.bindingReprs", RequestNamespace="http://metacase.com/wsdl/", ResponseNamespace="http://metacase.com/wsdl/")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public MEOop[] bindingReprs(MEOop receiver) {
            object[] results = this.Invoke("bindingReprs", new object[] {
                        receiver});
            return ((MEOop[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginbindingReprs(MEOop receiver, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("bindingReprs", new object[] {
                        receiver}, callback, asyncState);
        }
        
        /// <remarks/>
        public MEOop[] EndbindingReprs(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((MEOop[])(results[0]));
        }
        
        /// <remarks/>
        public void bindingReprsAsync(MEOop receiver) {
            this.bindingReprsAsync(receiver, null);
        }
        
        /// <remarks/>
        public void bindingReprsAsync(MEOop receiver, object userState) {
            if ((this.bindingReprsOperationCompleted == null)) {
                this.bindingReprsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnbindingReprsOperationCompleted);
            }
            this.InvokeAsync("bindingReprs", new object[] {
                        receiver}, this.bindingReprsOperationCompleted, userState);
        }
        
        private void OnbindingReprsOperationCompleted(object arg) {
            if ((this.bindingReprsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.bindingReprsCompleted(this, new bindingReprsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://metacase.com/MetaEditAPI.grid", RequestNamespace="http://metacase.com/wsdl/", ResponseNamespace="http://metacase.com/wsdl/")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public MEAny grid(MEOop receiver) {
            object[] results = this.Invoke("grid", new object[] {
                        receiver});
            return ((MEAny)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult Begingrid(MEOop receiver, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("grid", new object[] {
                        receiver}, callback, asyncState);
        }
        
        /// <remarks/>
        public MEAny Endgrid(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((MEAny)(results[0]));
        }
        
        /// <remarks/>
        public void gridAsync(MEOop receiver) {
            this.gridAsync(receiver, null);
        }
        
        /// <remarks/>
        public void gridAsync(MEOop receiver, object userState) {
            if ((this.gridOperationCompleted == null)) {
                this.gridOperationCompleted = new System.Threading.SendOrPostCallback(this.OngridOperationCompleted);
            }
            this.InvokeAsync("grid", new object[] {
                        receiver}, this.gridOperationCompleted, userState);
        }
        
        private void OngridOperationCompleted(object arg) {
            if ((this.gridCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.gridCompleted(this, new gridCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://metacase.com/MetaEditAPI.setGrid", RequestNamespace="http://metacase.com/wsdl/", ResponseNamespace="http://metacase.com/wsdl/")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public MENull setGrid(MEOop receiver, [System.Xml.Serialization.SoapElementAttribute("grid")] MEAny grid1) {
            object[] results = this.Invoke("setGrid", new object[] {
                        receiver,
                        grid1});
            return ((MENull)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginsetGrid(MEOop receiver, MEAny grid1, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("setGrid", new object[] {
                        receiver,
                        grid1}, callback, asyncState);
        }
        
        /// <remarks/>
        public MENull EndsetGrid(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((MENull)(results[0]));
        }
        
        /// <remarks/>
        public void setGridAsync(MEOop receiver, MEAny grid1) {
            this.setGridAsync(receiver, grid1, null);
        }
        
        /// <remarks/>
        public void setGridAsync(MEOop receiver, MEAny grid1, object userState) {
            if ((this.setGridOperationCompleted == null)) {
                this.setGridOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetGridOperationCompleted);
            }
            this.InvokeAsync("setGrid", new object[] {
                        receiver,
                        grid1}, this.setGridOperationCompleted, userState);
        }
        
        private void OnsetGridOperationCompleted(object arg) {
            if ((this.setGridCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setGridCompleted(this, new setGridCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://metacase.com/MetaEditAPI.displayGrid", RequestNamespace="http://metacase.com/wsdl/", ResponseNamespace="http://metacase.com/wsdl/")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public bool displayGrid(MEOop receiver) {
            object[] results = this.Invoke("displayGrid", new object[] {
                        receiver});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegindisplayGrid(MEOop receiver, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("displayGrid", new object[] {
                        receiver}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EnddisplayGrid(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void displayGridAsync(MEOop receiver) {
            this.displayGridAsync(receiver, null);
        }
        
        /// <remarks/>
        public void displayGridAsync(MEOop receiver, object userState) {
            if ((this.displayGridOperationCompleted == null)) {
                this.displayGridOperationCompleted = new System.Threading.SendOrPostCallback(this.OndisplayGridOperationCompleted);
            }
            this.InvokeAsync("displayGrid", new object[] {
                        receiver}, this.displayGridOperationCompleted, userState);
        }
        
        private void OndisplayGridOperationCompleted(object arg) {
            if ((this.displayGridCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.displayGridCompleted(this, new displayGridCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://metacase.com/MetaEditAPI.setDisplayGrid", RequestNamespace="http://metacase.com/wsdl/", ResponseNamespace="http://metacase.com/wsdl/")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public MENull setDisplayGrid(MEOop receiver, [System.Xml.Serialization.SoapElementAttribute("displayGrid")] bool displayGrid1) {
            object[] results = this.Invoke("setDisplayGrid", new object[] {
                        receiver,
                        displayGrid1});
            return ((MENull)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginsetDisplayGrid(MEOop receiver, bool displayGrid1, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("setDisplayGrid", new object[] {
                        receiver,
                        displayGrid1}, callback, asyncState);
        }
        
        /// <remarks/>
        public MENull EndsetDisplayGrid(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((MENull)(results[0]));
        }
        
        /// <remarks/>
        public void setDisplayGridAsync(MEOop receiver, bool displayGrid1) {
            this.setDisplayGridAsync(receiver, displayGrid1, null);
        }
        
        /// <remarks/>
        public void setDisplayGridAsync(MEOop receiver, bool displayGrid1, object userState) {
            if ((this.setDisplayGridOperationCompleted == null)) {
                this.setDisplayGridOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetDisplayGridOperationCompleted);
            }
            this.InvokeAsync("setDisplayGrid", new object[] {
                        receiver,
                        displayGrid1}, this.setDisplayGridOperationCompleted, userState);
        }
        
        private void OnsetDisplayGridOperationCompleted(object arg) {
            if ((this.setDisplayGridCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setDisplayGridCompleted(this, new setDisplayGridCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://metacase.com/MetaEditAPI.useGrid", RequestNamespace="http://metacase.com/wsdl/", ResponseNamespace="http://metacase.com/wsdl/")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public bool useGrid(MEOop receiver) {
            object[] results = this.Invoke("useGrid", new object[] {
                        receiver});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginuseGrid(MEOop receiver, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("useGrid", new object[] {
                        receiver}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EnduseGrid(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void useGridAsync(MEOop receiver) {
            this.useGridAsync(receiver, null);
        }
        
        /// <remarks/>
        public void useGridAsync(MEOop receiver, object userState) {
            if ((this.useGridOperationCompleted == null)) {
                this.useGridOperationCompleted = new System.Threading.SendOrPostCallback(this.OnuseGridOperationCompleted);
            }
            this.InvokeAsync("useGrid", new object[] {
                        receiver}, this.useGridOperationCompleted, userState);
        }
        
        private void OnuseGridOperationCompleted(object arg) {
            if ((this.useGridCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.useGridCompleted(this, new useGridCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://metacase.com/MetaEditAPI.setUseGrid", RequestNamespace="http://metacase.com/wsdl/", ResponseNamespace="http://metacase.com/wsdl/")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public MENull setUseGrid(MEOop receiver, [System.Xml.Serialization.SoapElementAttribute("useGrid")] bool useGrid1) {
            object[] results = this.Invoke("setUseGrid", new object[] {
                        receiver,
                        useGrid1});
            return ((MENull)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginsetUseGrid(MEOop receiver, bool useGrid1, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("setUseGrid", new object[] {
                        receiver,
                        useGrid1}, callback, asyncState);
        }
        
        /// <remarks/>
        public MENull EndsetUseGrid(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((MENull)(results[0]));
        }
        
        /// <remarks/>
        public void setUseGridAsync(MEOop receiver, bool useGrid1) {
            this.setUseGridAsync(receiver, useGrid1, null);
        }
        
        /// <remarks/>
        public void setUseGridAsync(MEOop receiver, bool useGrid1, object userState) {
            if ((this.setUseGridOperationCompleted == null)) {
                this.setUseGridOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetUseGridOperationCompleted);
            }
            this.InvokeAsync("setUseGrid", new object[] {
                        receiver,
                        useGrid1}, this.setUseGridOperationCompleted, userState);
        }
        
        private void OnsetUseGridOperationCompleted(object arg) {
            if ((this.setUseGridCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setUseGridCompleted(this, new setUseGridCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://metacase.com/MetaEditAPI.place", RequestNamespace="http://metacase.com/wsdl/", ResponseNamespace="http://metacase.com/wsdl/")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public MEAny place(MEOop receiver) {
            object[] results = this.Invoke("place", new object[] {
                        receiver});
            return ((MEAny)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult Beginplace(MEOop receiver, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("place", new object[] {
                        receiver}, callback, asyncState);
        }
        
        /// <remarks/>
        public MEAny Endplace(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((MEAny)(results[0]));
        }
        
        /// <remarks/>
        public void placeAsync(MEOop receiver) {
            this.placeAsync(receiver, null);
        }
        
        /// <remarks/>
        public void placeAsync(MEOop receiver, object userState) {
            if ((this.placeOperationCompleted == null)) {
                this.placeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnplaceOperationCompleted);
            }
            this.InvokeAsync("place", new object[] {
                        receiver}, this.placeOperationCompleted, userState);
        }
        
        private void OnplaceOperationCompleted(object arg) {
            if ((this.placeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.placeCompleted(this, new placeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://metacase.com/MetaEditAPI.setPlace", RequestNamespace="http://metacase.com/wsdl/", ResponseNamespace="http://metacase.com/wsdl/")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public MENull setPlace(MEOop receiver, [System.Xml.Serialization.SoapElementAttribute("place")] MEAny place1) {
            object[] results = this.Invoke("setPlace", new object[] {
                        receiver,
                        place1});
            return ((MENull)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginsetPlace(MEOop receiver, MEAny place1, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("setPlace", new object[] {
                        receiver,
                        place1}, callback, asyncState);
        }
        
        /// <remarks/>
        public MENull EndsetPlace(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((MENull)(results[0]));
        }
        
        /// <remarks/>
        public void setPlaceAsync(MEOop receiver, MEAny place1) {
            this.setPlaceAsync(receiver, place1, null);
        }
        
        /// <remarks/>
        public void setPlaceAsync(MEOop receiver, MEAny place1, object userState) {
            if ((this.setPlaceOperationCompleted == null)) {
                this.setPlaceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetPlaceOperationCompleted);
            }
            this.InvokeAsync("setPlace", new object[] {
                        receiver,
                        place1}, this.setPlaceOperationCompleted, userState);
        }
        
        private void OnsetPlaceOperationCompleted(object arg) {
            if ((this.setPlaceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setPlaceCompleted(this, new setPlaceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://metacase.com/MetaEditAPI.scale", RequestNamespace="http://metacase.com/wsdl/", ResponseNamespace="http://metacase.com/wsdl/")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public MEAny scale(MEOop receiver) {
            object[] results = this.Invoke("scale", new object[] {
                        receiver});
            return ((MEAny)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult Beginscale(MEOop receiver, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("scale", new object[] {
                        receiver}, callback, asyncState);
        }
        
        /// <remarks/>
        public MEAny Endscale(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((MEAny)(results[0]));
        }
        
        /// <remarks/>
        public void scaleAsync(MEOop receiver) {
            this.scaleAsync(receiver, null);
        }
        
        /// <remarks/>
        public void scaleAsync(MEOop receiver, object userState) {
            if ((this.scaleOperationCompleted == null)) {
                this.scaleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnscaleOperationCompleted);
            }
            this.InvokeAsync("scale", new object[] {
                        receiver}, this.scaleOperationCompleted, userState);
        }
        
        private void OnscaleOperationCompleted(object arg) {
            if ((this.scaleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.scaleCompleted(this, new scaleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://metacase.com/MetaEditAPI.setScale", RequestNamespace="http://metacase.com/wsdl/", ResponseNamespace="http://metacase.com/wsdl/")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public MENull setScale(MEOop receiver, [System.Xml.Serialization.SoapElementAttribute("scale")] MEAny scale1) {
            object[] results = this.Invoke("setScale", new object[] {
                        receiver,
                        scale1});
            return ((MENull)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginsetScale(MEOop receiver, MEAny scale1, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("setScale", new object[] {
                        receiver,
                        scale1}, callback, asyncState);
        }
        
        /// <remarks/>
        public MENull EndsetScale(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((MENull)(results[0]));
        }
        
        /// <remarks/>
        public void setScaleAsync(MEOop receiver, MEAny scale1) {
            this.setScaleAsync(receiver, scale1, null);
        }
        
        /// <remarks/>
        public void setScaleAsync(MEOop receiver, MEAny scale1, object userState) {
            if ((this.setScaleOperationCompleted == null)) {
                this.setScaleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetScaleOperationCompleted);
            }
            this.InvokeAsync("setScale", new object[] {
                        receiver,
                        scale1}, this.setScaleOperationCompleted, userState);
        }
        
        private void OnsetScaleOperationCompleted(object arg) {
            if ((this.setScaleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setScaleCompleted(this, new setScaleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://metacase.com/MetaEditAPI.isStraight", RequestNamespace="http://metacase.com/wsdl/", ResponseNamespace="http://metacase.com/wsdl/")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public bool isStraight(MEOop receiver) {
            object[] results = this.Invoke("isStraight", new object[] {
                        receiver});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginisStraight(MEOop receiver, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("isStraight", new object[] {
                        receiver}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndisStraight(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void isStraightAsync(MEOop receiver) {
            this.isStraightAsync(receiver, null);
        }
        
        /// <remarks/>
        public void isStraightAsync(MEOop receiver, object userState) {
            if ((this.isStraightOperationCompleted == null)) {
                this.isStraightOperationCompleted = new System.Threading.SendOrPostCallback(this.OnisStraightOperationCompleted);
            }
            this.InvokeAsync("isStraight", new object[] {
                        receiver}, this.isStraightOperationCompleted, userState);
        }
        
        private void OnisStraightOperationCompleted(object arg) {
            if ((this.isStraightCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.isStraightCompleted(this, new isStraightCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://metacase.com/MetaEditAPI.straighten", RequestNamespace="http://metacase.com/wsdl/", ResponseNamespace="http://metacase.com/wsdl/")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public MENull straighten(MEOop receiver) {
            object[] results = this.Invoke("straighten", new object[] {
                        receiver});
            return ((MENull)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult Beginstraighten(MEOop receiver, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("straighten", new object[] {
                        receiver}, callback, asyncState);
        }
        
        /// <remarks/>
        public MENull Endstraighten(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((MENull)(results[0]));
        }
        
        /// <remarks/>
        public void straightenAsync(MEOop receiver) {
            this.straightenAsync(receiver, null);
        }
        
        /// <remarks/>
        public void straightenAsync(MEOop receiver, object userState) {
            if ((this.straightenOperationCompleted == null)) {
                this.straightenOperationCompleted = new System.Threading.SendOrPostCallback(this.OnstraightenOperationCompleted);
            }
            this.InvokeAsync("straighten", new object[] {
                        receiver}, this.straightenOperationCompleted, userState);
        }
        
        private void OnstraightenOperationCompleted(object arg) {
            if ((this.straightenCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.straightenCompleted(this, new straightenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://metacase.com/MetaEditAPI.layout", RequestNamespace="http://metacase.com/wsdl/", ResponseNamespace="http://metacase.com/wsdl/")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public MENull layout(MEOop receiver, METype layoutRelationship, METype fromRole, METype toRole, string direction, bool manhattan) {
            object[] results = this.Invoke("layout", new object[] {
                        receiver,
                        layoutRelationship,
                        fromRole,
                        toRole,
                        direction,
                        manhattan});
            return ((MENull)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult Beginlayout(MEOop receiver, METype layoutRelationship, METype fromRole, METype toRole, string direction, bool manhattan, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("layout", new object[] {
                        receiver,
                        layoutRelationship,
                        fromRole,
                        toRole,
                        direction,
                        manhattan}, callback, asyncState);
        }
        
        /// <remarks/>
        public MENull Endlayout(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((MENull)(results[0]));
        }
        
        /// <remarks/>
        public void layoutAsync(MEOop receiver, METype layoutRelationship, METype fromRole, METype toRole, string direction, bool manhattan) {
            this.layoutAsync(receiver, layoutRelationship, fromRole, toRole, direction, manhattan, null);
        }
        
        /// <remarks/>
        public void layoutAsync(MEOop receiver, METype layoutRelationship, METype fromRole, METype toRole, string direction, bool manhattan, object userState) {
            if ((this.layoutOperationCompleted == null)) {
                this.layoutOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlayoutOperationCompleted);
            }
            this.InvokeAsync("layout", new object[] {
                        receiver,
                        layoutRelationship,
                        fromRole,
                        toRole,
                        direction,
                        manhattan}, this.layoutOperationCompleted, userState);
        }
        
        private void OnlayoutOperationCompleted(object arg) {
            if ((this.layoutCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.layoutCompleted(this, new layoutCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://metacase.com/MetaEditAPI.addNewObjectRepFor", RequestNamespace="http://metacase.com/wsdl/", ResponseNamespace="http://metacase.com/wsdl/")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public MEOop addNewObjectRepFor(MEOop receiver, [System.Xml.Serialization.SoapElementAttribute("addNewObjectRepFor")] MEOop addNewObjectRepFor1, int beforeIndex, [System.Xml.Serialization.SoapElementAttribute("place")] MEAny place1) {
            object[] results = this.Invoke("addNewObjectRepFor", new object[] {
                        receiver,
                        addNewObjectRepFor1,
                        beforeIndex,
                        place1});
            return ((MEOop)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginaddNewObjectRepFor(MEOop receiver, MEOop addNewObjectRepFor1, int beforeIndex, MEAny place1, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("addNewObjectRepFor", new object[] {
                        receiver,
                        addNewObjectRepFor1,
                        beforeIndex,
                        place1}, callback, asyncState);
        }
        
        /// <remarks/>
        public MEOop EndaddNewObjectRepFor(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((MEOop)(results[0]));
        }
        
        /// <remarks/>
        public void addNewObjectRepForAsync(MEOop receiver, MEOop addNewObjectRepFor1, int beforeIndex, MEAny place1) {
            this.addNewObjectRepForAsync(receiver, addNewObjectRepFor1, beforeIndex, place1, null);
        }
        
        /// <remarks/>
        public void addNewObjectRepForAsync(MEOop receiver, MEOop addNewObjectRepFor1, int beforeIndex, MEAny place1, object userState) {
            if ((this.addNewObjectRepForOperationCompleted == null)) {
                this.addNewObjectRepForOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddNewObjectRepForOperationCompleted);
            }
            this.InvokeAsync("addNewObjectRepFor", new object[] {
                        receiver,
                        addNewObjectRepFor1,
                        beforeIndex,
                        place1}, this.addNewObjectRepForOperationCompleted, userState);
        }
        
        private void OnaddNewObjectRepForOperationCompleted(object arg) {
            if ((this.addNewObjectRepForCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addNewObjectRepForCompleted(this, new addNewObjectRepForCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://metacase.com/MetaEditAPI.addNewBindingRepFor", RequestNamespace="http://metacase.com/wsdl/", ResponseNamespace="http://metacase.com/wsdl/")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public MEOop addNewBindingRepFor(MEOop receiver, [System.Xml.Serialization.SoapElementAttribute("addNewBindingRepFor")] MEOop addNewBindingRepFor1, int beforeIndex, [System.Xml.Serialization.SoapElementAttribute("place")] MEAny place1) {
            object[] results = this.Invoke("addNewBindingRepFor", new object[] {
                        receiver,
                        addNewBindingRepFor1,
                        beforeIndex,
                        place1});
            return ((MEOop)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginaddNewBindingRepFor(MEOop receiver, MEOop addNewBindingRepFor1, int beforeIndex, MEAny place1, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("addNewBindingRepFor", new object[] {
                        receiver,
                        addNewBindingRepFor1,
                        beforeIndex,
                        place1}, callback, asyncState);
        }
        
        /// <remarks/>
        public MEOop EndaddNewBindingRepFor(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((MEOop)(results[0]));
        }
        
        /// <remarks/>
        public void addNewBindingRepForAsync(MEOop receiver, MEOop addNewBindingRepFor1, int beforeIndex, MEAny place1) {
            this.addNewBindingRepForAsync(receiver, addNewBindingRepFor1, beforeIndex, place1, null);
        }
        
        /// <remarks/>
        public void addNewBindingRepForAsync(MEOop receiver, MEOop addNewBindingRepFor1, int beforeIndex, MEAny place1, object userState) {
            if ((this.addNewBindingRepForOperationCompleted == null)) {
                this.addNewBindingRepForOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddNewBindingRepForOperationCompleted);
            }
            this.InvokeAsync("addNewBindingRepFor", new object[] {
                        receiver,
                        addNewBindingRepFor1,
                        beforeIndex,
                        place1}, this.addNewBindingRepForOperationCompleted, userState);
        }
        
        private void OnaddNewBindingRepForOperationCompleted(object arg) {
            if ((this.addNewBindingRepForCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addNewBindingRepForCompleted(this, new addNewBindingRepForCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://metacase.com/MetaEditAPI.connectionReprIds", RequestNamespace="http://metacase.com/wsdl/", ResponseNamespace="http://metacase.com/wsdl/")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public MEAny[] connectionReprIds(MEOop receiver) {
            object[] results = this.Invoke("connectionReprIds", new object[] {
                        receiver});
            return ((MEAny[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginconnectionReprIds(MEOop receiver, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("connectionReprIds", new object[] {
                        receiver}, callback, asyncState);
        }
        
        /// <remarks/>
        public MEAny[] EndconnectionReprIds(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((MEAny[])(results[0]));
        }
        
        /// <remarks/>
        public void connectionReprIdsAsync(MEOop receiver) {
            this.connectionReprIdsAsync(receiver, null);
        }
        
        /// <remarks/>
        public void connectionReprIdsAsync(MEOop receiver, object userState) {
            if ((this.connectionReprIdsOperationCompleted == null)) {
                this.connectionReprIdsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnconnectionReprIdsOperationCompleted);
            }
            this.InvokeAsync("connectionReprIds", new object[] {
                        receiver}, this.connectionReprIdsOperationCompleted, userState);
        }
        
        private void OnconnectionReprIdsOperationCompleted(object arg) {
            if ((this.connectionReprIdsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.connectionReprIdsCompleted(this, new connectionReprIdsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://metacase.com/MetaEditAPI.addPoint", RequestNamespace="http://metacase.com/wsdl/", ResponseNamespace="http://metacase.com/wsdl/")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public MENull addPoint(MEOop receiver, [System.Xml.Serialization.SoapElementAttribute("addPoint")] MEAny addPoint1, int index, int id) {
            object[] results = this.Invoke("addPoint", new object[] {
                        receiver,
                        addPoint1,
                        index,
                        id});
            return ((MENull)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginaddPoint(MEOop receiver, MEAny addPoint1, int index, int id, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("addPoint", new object[] {
                        receiver,
                        addPoint1,
                        index,
                        id}, callback, asyncState);
        }
        
        /// <remarks/>
        public MENull EndaddPoint(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((MENull)(results[0]));
        }
        
        /// <remarks/>
        public void addPointAsync(MEOop receiver, MEAny addPoint1, int index, int id) {
            this.addPointAsync(receiver, addPoint1, index, id, null);
        }
        
        /// <remarks/>
        public void addPointAsync(MEOop receiver, MEAny addPoint1, int index, int id, object userState) {
            if ((this.addPointOperationCompleted == null)) {
                this.addPointOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddPointOperationCompleted);
            }
            this.InvokeAsync("addPoint", new object[] {
                        receiver,
                        addPoint1,
                        index,
                        id}, this.addPointOperationCompleted, userState);
        }
        
        private void OnaddPointOperationCompleted(object arg) {
            if ((this.addPointCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addPointCompleted(this, new addPointCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://metacase.com/MetaEditAPI.putPointAtIndex", RequestNamespace="http://metacase.com/wsdl/", ResponseNamespace="http://metacase.com/wsdl/")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public MENull putPointAtIndex(MEOop receiver, int at, MEAny putPoint, int id) {
            object[] results = this.Invoke("putPointAtIndex", new object[] {
                        receiver,
                        at,
                        putPoint,
                        id});
            return ((MENull)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginputPointAtIndex(MEOop receiver, int at, MEAny putPoint, int id, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("putPointAtIndex", new object[] {
                        receiver,
                        at,
                        putPoint,
                        id}, callback, asyncState);
        }
        
        /// <remarks/>
        public MENull EndputPointAtIndex(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((MENull)(results[0]));
        }
        
        /// <remarks/>
        public void putPointAtIndexAsync(MEOop receiver, int at, MEAny putPoint, int id) {
            this.putPointAtIndexAsync(receiver, at, putPoint, id, null);
        }
        
        /// <remarks/>
        public void putPointAtIndexAsync(MEOop receiver, int at, MEAny putPoint, int id, object userState) {
            if ((this.putPointAtIndexOperationCompleted == null)) {
                this.putPointAtIndexOperationCompleted = new System.Threading.SendOrPostCallback(this.OnputPointAtIndexOperationCompleted);
            }
            this.InvokeAsync("putPointAtIndex", new object[] {
                        receiver,
                        at,
                        putPoint,
                        id}, this.putPointAtIndexOperationCompleted, userState);
        }
        
        private void OnputPointAtIndexOperationCompleted(object arg) {
            if ((this.putPointAtIndexCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.putPointAtIndexCompleted(this, new putPointAtIndexCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://metacase.com/MetaEditAPI.breakpoints", RequestNamespace="http://metacase.com/wsdl/", ResponseNamespace="http://metacase.com/wsdl/")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public MENull breakpoints(MEOop receiver, [System.Xml.Serialization.SoapElementAttribute("breakpoints")] MEAny[] breakpoints1, int id) {
            object[] results = this.Invoke("breakpoints", new object[] {
                        receiver,
                        breakpoints1,
                        id});
            return ((MENull)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult Beginbreakpoints(MEOop receiver, MEAny[] breakpoints1, int id, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("breakpoints", new object[] {
                        receiver,
                        breakpoints1,
                        id}, callback, asyncState);
        }
        
        /// <remarks/>
        public MENull Endbreakpoints(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((MENull)(results[0]));
        }
        
        /// <remarks/>
        public void breakpointsAsync(MEOop receiver, MEAny[] breakpoints1, int id) {
            this.breakpointsAsync(receiver, breakpoints1, id, null);
        }
        
        /// <remarks/>
        public void breakpointsAsync(MEOop receiver, MEAny[] breakpoints1, int id, object userState) {
            if ((this.breakpointsOperationCompleted == null)) {
                this.breakpointsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnbreakpointsOperationCompleted);
            }
            this.InvokeAsync("breakpoints", new object[] {
                        receiver,
                        breakpoints1,
                        id}, this.breakpointsOperationCompleted, userState);
        }
        
        private void OnbreakpointsOperationCompleted(object arg) {
            if ((this.breakpointsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.breakpointsCompleted(this, new breakpointsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://metacase.com/MetaEditAPI.objTargetOffset", RequestNamespace="http://metacase.com/wsdl/", ResponseNamespace="http://metacase.com/wsdl/")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public MENull objTargetOffset(MEOop receiver, [System.Xml.Serialization.SoapElementAttribute("objTargetOffset")] MEAny objTargetOffset1, int id) {
            object[] results = this.Invoke("objTargetOffset", new object[] {
                        receiver,
                        objTargetOffset1,
                        id});
            return ((MENull)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginobjTargetOffset(MEOop receiver, MEAny objTargetOffset1, int id, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("objTargetOffset", new object[] {
                        receiver,
                        objTargetOffset1,
                        id}, callback, asyncState);
        }
        
        /// <remarks/>
        public MENull EndobjTargetOffset(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((MENull)(results[0]));
        }
        
        /// <remarks/>
        public void objTargetOffsetAsync(MEOop receiver, MEAny objTargetOffset1, int id) {
            this.objTargetOffsetAsync(receiver, objTargetOffset1, id, null);
        }
        
        /// <remarks/>
        public void objTargetOffsetAsync(MEOop receiver, MEAny objTargetOffset1, int id, object userState) {
            if ((this.objTargetOffsetOperationCompleted == null)) {
                this.objTargetOffsetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnobjTargetOffsetOperationCompleted);
            }
            this.InvokeAsync("objTargetOffset", new object[] {
                        receiver,
                        objTargetOffset1,
                        id}, this.objTargetOffsetOperationCompleted, userState);
        }
        
        private void OnobjTargetOffsetOperationCompleted(object arg) {
            if ((this.objTargetOffsetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.objTargetOffsetCompleted(this, new objTargetOffsetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://metacase.com/MetaEditAPI.removePoint", RequestNamespace="http://metacase.com/wsdl/", ResponseNamespace="http://metacase.com/wsdl/")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public MEAny removePoint(MEOop receiver, [System.Xml.Serialization.SoapElementAttribute("removePoint")] MEAny removePoint1, int id) {
            object[] results = this.Invoke("removePoint", new object[] {
                        receiver,
                        removePoint1,
                        id});
            return ((MEAny)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginremovePoint(MEOop receiver, MEAny removePoint1, int id, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("removePoint", new object[] {
                        receiver,
                        removePoint1,
                        id}, callback, asyncState);
        }
        
        /// <remarks/>
        public MEAny EndremovePoint(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((MEAny)(results[0]));
        }
        
        /// <remarks/>
        public void removePointAsync(MEOop receiver, MEAny removePoint1, int id) {
            this.removePointAsync(receiver, removePoint1, id, null);
        }
        
        /// <remarks/>
        public void removePointAsync(MEOop receiver, MEAny removePoint1, int id, object userState) {
            if ((this.removePointOperationCompleted == null)) {
                this.removePointOperationCompleted = new System.Threading.SendOrPostCallback(this.OnremovePointOperationCompleted);
            }
            this.InvokeAsync("removePoint", new object[] {
                        receiver,
                        removePoint1,
                        id}, this.removePointOperationCompleted, userState);
        }
        
        private void OnremovePointOperationCompleted(object arg) {
            if ((this.removePointCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.removePointCompleted(this, new removePointCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://metacase.com/MetaEditAPI.hAxis", RequestNamespace="http://metacase.com/wsdl/", ResponseNamespace="http://metacase.com/wsdl/")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public MEOop[] hAxis(MEOop receiver) {
            object[] results = this.Invoke("hAxis", new object[] {
                        receiver});
            return ((MEOop[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginhAxis(MEOop receiver, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("hAxis", new object[] {
                        receiver}, callback, asyncState);
        }
        
        /// <remarks/>
        public MEOop[] EndhAxis(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((MEOop[])(results[0]));
        }
        
        /// <remarks/>
        public void hAxisAsync(MEOop receiver) {
            this.hAxisAsync(receiver, null);
        }
        
        /// <remarks/>
        public void hAxisAsync(MEOop receiver, object userState) {
            if ((this.hAxisOperationCompleted == null)) {
                this.hAxisOperationCompleted = new System.Threading.SendOrPostCallback(this.OnhAxisOperationCompleted);
            }
            this.InvokeAsync("hAxis", new object[] {
                        receiver}, this.hAxisOperationCompleted, userState);
        }
        
        private void OnhAxisOperationCompleted(object arg) {
            if ((this.hAxisCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.hAxisCompleted(this, new hAxisCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://metacase.com/MetaEditAPI.vAxis", RequestNamespace="http://metacase.com/wsdl/", ResponseNamespace="http://metacase.com/wsdl/")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public MEOop[] vAxis(MEOop receiver) {
            object[] results = this.Invoke("vAxis", new object[] {
                        receiver});
            return ((MEOop[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginvAxis(MEOop receiver, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("vAxis", new object[] {
                        receiver}, callback, asyncState);
        }
        
        /// <remarks/>
        public MEOop[] EndvAxis(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((MEOop[])(results[0]));
        }
        
        /// <remarks/>
        public void vAxisAsync(MEOop receiver) {
            this.vAxisAsync(receiver, null);
        }
        
        /// <remarks/>
        public void vAxisAsync(MEOop receiver, object userState) {
            if ((this.vAxisOperationCompleted == null)) {
                this.vAxisOperationCompleted = new System.Threading.SendOrPostCallback(this.OnvAxisOperationCompleted);
            }
            this.InvokeAsync("vAxis", new object[] {
                        receiver}, this.vAxisOperationCompleted, userState);
        }
        
        private void OnvAxisOperationCompleted(object arg) {
            if ((this.vAxisCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.vAxisCompleted(this, new vAxisCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://metacase.com/MetaEditAPI.bindSelect", RequestNamespace="http://metacase.com/wsdl/", ResponseNamespace="http://metacase.com/wsdl/")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public string bindSelect(MEOop receiver) {
            object[] results = this.Invoke("bindSelect", new object[] {
                        receiver});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginbindSelect(MEOop receiver, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("bindSelect", new object[] {
                        receiver}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndbindSelect(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void bindSelectAsync(MEOop receiver) {
            this.bindSelectAsync(receiver, null);
        }
        
        /// <remarks/>
        public void bindSelectAsync(MEOop receiver, object userState) {
            if ((this.bindSelectOperationCompleted == null)) {
                this.bindSelectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnbindSelectOperationCompleted);
            }
            this.InvokeAsync("bindSelect", new object[] {
                        receiver}, this.bindSelectOperationCompleted, userState);
        }
        
        private void OnbindSelectOperationCompleted(object arg) {
            if ((this.bindSelectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.bindSelectCompleted(this, new bindSelectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://metacase.com/MetaEditAPI.setBindSelect", RequestNamespace="http://metacase.com/wsdl/", ResponseNamespace="http://metacase.com/wsdl/")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public MENull setBindSelect(MEOop receiver, [System.Xml.Serialization.SoapElementAttribute("bindSelect")] string bindSelect1) {
            object[] results = this.Invoke("setBindSelect", new object[] {
                        receiver,
                        bindSelect1});
            return ((MENull)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginsetBindSelect(MEOop receiver, string bindSelect1, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("setBindSelect", new object[] {
                        receiver,
                        bindSelect1}, callback, asyncState);
        }
        
        /// <remarks/>
        public MENull EndsetBindSelect(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((MENull)(results[0]));
        }
        
        /// <remarks/>
        public void setBindSelectAsync(MEOop receiver, string bindSelect1) {
            this.setBindSelectAsync(receiver, bindSelect1, null);
        }
        
        /// <remarks/>
        public void setBindSelectAsync(MEOop receiver, string bindSelect1, object userState) {
            if ((this.setBindSelectOperationCompleted == null)) {
                this.setBindSelectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetBindSelectOperationCompleted);
            }
            this.InvokeAsync("setBindSelect", new object[] {
                        receiver,
                        bindSelect1}, this.setBindSelectOperationCompleted, userState);
        }
        
        private void OnsetBindSelectOperationCompleted(object arg) {
            if ((this.setBindSelectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setBindSelectCompleted(this, new setBindSelectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://metacase.com/MetaEditAPI.cellDisplayMode", RequestNamespace="http://metacase.com/wsdl/", ResponseNamespace="http://metacase.com/wsdl/")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public string cellDisplayMode(MEOop receiver) {
            object[] results = this.Invoke("cellDisplayMode", new object[] {
                        receiver});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegincellDisplayMode(MEOop receiver, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("cellDisplayMode", new object[] {
                        receiver}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndcellDisplayMode(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void cellDisplayModeAsync(MEOop receiver) {
            this.cellDisplayModeAsync(receiver, null);
        }
        
        /// <remarks/>
        public void cellDisplayModeAsync(MEOop receiver, object userState) {
            if ((this.cellDisplayModeOperationCompleted == null)) {
                this.cellDisplayModeOperationCompleted = new System.Threading.SendOrPostCallback(this.OncellDisplayModeOperationCompleted);
            }
            this.InvokeAsync("cellDisplayMode", new object[] {
                        receiver}, this.cellDisplayModeOperationCompleted, userState);
        }
        
        private void OncellDisplayModeOperationCompleted(object arg) {
            if ((this.cellDisplayModeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.cellDisplayModeCompleted(this, new cellDisplayModeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://metacase.com/MetaEditAPI.setCellDisplayMode", RequestNamespace="http://metacase.com/wsdl/", ResponseNamespace="http://metacase.com/wsdl/")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public MENull setCellDisplayMode(MEOop receiver, [System.Xml.Serialization.SoapElementAttribute("cellDisplayMode")] string cellDisplayMode1) {
            object[] results = this.Invoke("setCellDisplayMode", new object[] {
                        receiver,
                        cellDisplayMode1});
            return ((MENull)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginsetCellDisplayMode(MEOop receiver, string cellDisplayMode1, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("setCellDisplayMode", new object[] {
                        receiver,
                        cellDisplayMode1}, callback, asyncState);
        }
        
        /// <remarks/>
        public MENull EndsetCellDisplayMode(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((MENull)(results[0]));
        }
        
        /// <remarks/>
        public void setCellDisplayModeAsync(MEOop receiver, string cellDisplayMode1) {
            this.setCellDisplayModeAsync(receiver, cellDisplayMode1, null);
        }
        
        /// <remarks/>
        public void setCellDisplayModeAsync(MEOop receiver, string cellDisplayMode1, object userState) {
            if ((this.setCellDisplayModeOperationCompleted == null)) {
                this.setCellDisplayModeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetCellDisplayModeOperationCompleted);
            }
            this.InvokeAsync("setCellDisplayMode", new object[] {
                        receiver,
                        cellDisplayMode1}, this.setCellDisplayModeOperationCompleted, userState);
        }
        
        private void OnsetCellDisplayModeOperationCompleted(object arg) {
            if ((this.setCellDisplayModeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setCellDisplayModeCompleted(this, new setCellDisplayModeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://metacase.com/MetaEditAPI.displayStringSelector", RequestNamespace="http://metacase.com/wsdl/", ResponseNamespace="http://metacase.com/wsdl/")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public string displayStringSelector(MEOop receiver) {
            object[] results = this.Invoke("displayStringSelector", new object[] {
                        receiver});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegindisplayStringSelector(MEOop receiver, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("displayStringSelector", new object[] {
                        receiver}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EnddisplayStringSelector(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void displayStringSelectorAsync(MEOop receiver) {
            this.displayStringSelectorAsync(receiver, null);
        }
        
        /// <remarks/>
        public void displayStringSelectorAsync(MEOop receiver, object userState) {
            if ((this.displayStringSelectorOperationCompleted == null)) {
                this.displayStringSelectorOperationCompleted = new System.Threading.SendOrPostCallback(this.OndisplayStringSelectorOperationCompleted);
            }
            this.InvokeAsync("displayStringSelector", new object[] {
                        receiver}, this.displayStringSelectorOperationCompleted, userState);
        }
        
        private void OndisplayStringSelectorOperationCompleted(object arg) {
            if ((this.displayStringSelectorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.displayStringSelectorCompleted(this, new displayStringSelectorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://metacase.com/MetaEditAPI.setDisplayStringSelector", RequestNamespace="http://metacase.com/wsdl/", ResponseNamespace="http://metacase.com/wsdl/")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public MENull setDisplayStringSelector(MEOop receiver, [System.Xml.Serialization.SoapElementAttribute("displayStringSelector")] string displayStringSelector1) {
            object[] results = this.Invoke("setDisplayStringSelector", new object[] {
                        receiver,
                        displayStringSelector1});
            return ((MENull)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginsetDisplayStringSelector(MEOop receiver, string displayStringSelector1, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("setDisplayStringSelector", new object[] {
                        receiver,
                        displayStringSelector1}, callback, asyncState);
        }
        
        /// <remarks/>
        public MENull EndsetDisplayStringSelector(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((MENull)(results[0]));
        }
        
        /// <remarks/>
        public void setDisplayStringSelectorAsync(MEOop receiver, string displayStringSelector1) {
            this.setDisplayStringSelectorAsync(receiver, displayStringSelector1, null);
        }
        
        /// <remarks/>
        public void setDisplayStringSelectorAsync(MEOop receiver, string displayStringSelector1, object userState) {
            if ((this.setDisplayStringSelectorOperationCompleted == null)) {
                this.setDisplayStringSelectorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetDisplayStringSelectorOperationCompleted);
            }
            this.InvokeAsync("setDisplayStringSelector", new object[] {
                        receiver,
                        displayStringSelector1}, this.setDisplayStringSelectorOperationCompleted, userState);
        }
        
        private void OnsetDisplayStringSelectorOperationCompleted(object arg) {
            if ((this.setDisplayStringSelectorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setDisplayStringSelectorCompleted(this, new setDisplayStringSelectorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://metacase.com/MetaEditAPI.axisDisplayMode", RequestNamespace="http://metacase.com/wsdl/", ResponseNamespace="http://metacase.com/wsdl/")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public string axisDisplayMode(MEOop receiver) {
            object[] results = this.Invoke("axisDisplayMode", new object[] {
                        receiver});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginaxisDisplayMode(MEOop receiver, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("axisDisplayMode", new object[] {
                        receiver}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndaxisDisplayMode(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void axisDisplayModeAsync(MEOop receiver) {
            this.axisDisplayModeAsync(receiver, null);
        }
        
        /// <remarks/>
        public void axisDisplayModeAsync(MEOop receiver, object userState) {
            if ((this.axisDisplayModeOperationCompleted == null)) {
                this.axisDisplayModeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaxisDisplayModeOperationCompleted);
            }
            this.InvokeAsync("axisDisplayMode", new object[] {
                        receiver}, this.axisDisplayModeOperationCompleted, userState);
        }
        
        private void OnaxisDisplayModeOperationCompleted(object arg) {
            if ((this.axisDisplayModeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.axisDisplayModeCompleted(this, new axisDisplayModeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://metacase.com/MetaEditAPI.setAxisDisplayMode", RequestNamespace="http://metacase.com/wsdl/", ResponseNamespace="http://metacase.com/wsdl/")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public MENull setAxisDisplayMode(MEOop receiver, [System.Xml.Serialization.SoapElementAttribute("axisDisplayMode")] string axisDisplayMode1) {
            object[] results = this.Invoke("setAxisDisplayMode", new object[] {
                        receiver,
                        axisDisplayMode1});
            return ((MENull)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginsetAxisDisplayMode(MEOop receiver, string axisDisplayMode1, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("setAxisDisplayMode", new object[] {
                        receiver,
                        axisDisplayMode1}, callback, asyncState);
        }
        
        /// <remarks/>
        public MENull EndsetAxisDisplayMode(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((MENull)(results[0]));
        }
        
        /// <remarks/>
        public void setAxisDisplayModeAsync(MEOop receiver, string axisDisplayMode1) {
            this.setAxisDisplayModeAsync(receiver, axisDisplayMode1, null);
        }
        
        /// <remarks/>
        public void setAxisDisplayModeAsync(MEOop receiver, string axisDisplayMode1, object userState) {
            if ((this.setAxisDisplayModeOperationCompleted == null)) {
                this.setAxisDisplayModeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetAxisDisplayModeOperationCompleted);
            }
            this.InvokeAsync("setAxisDisplayMode", new object[] {
                        receiver,
                        axisDisplayMode1}, this.setAxisDisplayModeOperationCompleted, userState);
        }
        
        private void OnsetAxisDisplayModeOperationCompleted(object arg) {
            if ((this.setAxisDisplayModeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setAxisDisplayModeCompleted(this, new setAxisDisplayModeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://metacase.com/MetaEditAPI.showFirst", RequestNamespace="http://metacase.com/wsdl/", ResponseNamespace="http://metacase.com/wsdl/")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public bool showFirst(MEOop receiver) {
            object[] results = this.Invoke("showFirst", new object[] {
                        receiver});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginshowFirst(MEOop receiver, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("showFirst", new object[] {
                        receiver}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndshowFirst(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void showFirstAsync(MEOop receiver) {
            this.showFirstAsync(receiver, null);
        }
        
        /// <remarks/>
        public void showFirstAsync(MEOop receiver, object userState) {
            if ((this.showFirstOperationCompleted == null)) {
                this.showFirstOperationCompleted = new System.Threading.SendOrPostCallback(this.OnshowFirstOperationCompleted);
            }
            this.InvokeAsync("showFirst", new object[] {
                        receiver}, this.showFirstOperationCompleted, userState);
        }
        
        private void OnshowFirstOperationCompleted(object arg) {
            if ((this.showFirstCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.showFirstCompleted(this, new showFirstCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://metacase.com/MetaEditAPI.setShowFirst", RequestNamespace="http://metacase.com/wsdl/", ResponseNamespace="http://metacase.com/wsdl/")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public MENull setShowFirst(MEOop receiver, [System.Xml.Serialization.SoapElementAttribute("showFirst")] bool showFirst1) {
            object[] results = this.Invoke("setShowFirst", new object[] {
                        receiver,
                        showFirst1});
            return ((MENull)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginsetShowFirst(MEOop receiver, bool showFirst1, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("setShowFirst", new object[] {
                        receiver,
                        showFirst1}, callback, asyncState);
        }
        
        /// <remarks/>
        public MENull EndsetShowFirst(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((MENull)(results[0]));
        }
        
        /// <remarks/>
        public void setShowFirstAsync(MEOop receiver, bool showFirst1) {
            this.setShowFirstAsync(receiver, showFirst1, null);
        }
        
        /// <remarks/>
        public void setShowFirstAsync(MEOop receiver, bool showFirst1, object userState) {
            if ((this.setShowFirstOperationCompleted == null)) {
                this.setShowFirstOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetShowFirstOperationCompleted);
            }
            this.InvokeAsync("setShowFirst", new object[] {
                        receiver,
                        showFirst1}, this.setShowFirstOperationCompleted, userState);
        }
        
        private void OnsetShowFirstOperationCompleted(object arg) {
            if ((this.setShowFirstCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setShowFirstCompleted(this, new setShowFirstCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://metacase.com/MetaEditAPI.rowLabelsWidth", RequestNamespace="http://metacase.com/wsdl/", ResponseNamespace="http://metacase.com/wsdl/")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public int rowLabelsWidth(MEOop receiver) {
            object[] results = this.Invoke("rowLabelsWidth", new object[] {
                        receiver});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginrowLabelsWidth(MEOop receiver, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("rowLabelsWidth", new object[] {
                        receiver}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndrowLabelsWidth(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void rowLabelsWidthAsync(MEOop receiver) {
            this.rowLabelsWidthAsync(receiver, null);
        }
        
        /// <remarks/>
        public void rowLabelsWidthAsync(MEOop receiver, object userState) {
            if ((this.rowLabelsWidthOperationCompleted == null)) {
                this.rowLabelsWidthOperationCompleted = new System.Threading.SendOrPostCallback(this.OnrowLabelsWidthOperationCompleted);
            }
            this.InvokeAsync("rowLabelsWidth", new object[] {
                        receiver}, this.rowLabelsWidthOperationCompleted, userState);
        }
        
        private void OnrowLabelsWidthOperationCompleted(object arg) {
            if ((this.rowLabelsWidthCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.rowLabelsWidthCompleted(this, new rowLabelsWidthCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://metacase.com/MetaEditAPI.setRowLabelsWidth", RequestNamespace="http://metacase.com/wsdl/", ResponseNamespace="http://metacase.com/wsdl/")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public MENull setRowLabelsWidth(MEOop receiver, [System.Xml.Serialization.SoapElementAttribute("rowLabelsWidth")] int rowLabelsWidth1) {
            object[] results = this.Invoke("setRowLabelsWidth", new object[] {
                        receiver,
                        rowLabelsWidth1});
            return ((MENull)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginsetRowLabelsWidth(MEOop receiver, int rowLabelsWidth1, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("setRowLabelsWidth", new object[] {
                        receiver,
                        rowLabelsWidth1}, callback, asyncState);
        }
        
        /// <remarks/>
        public MENull EndsetRowLabelsWidth(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((MENull)(results[0]));
        }
        
        /// <remarks/>
        public void setRowLabelsWidthAsync(MEOop receiver, int rowLabelsWidth1) {
            this.setRowLabelsWidthAsync(receiver, rowLabelsWidth1, null);
        }
        
        /// <remarks/>
        public void setRowLabelsWidthAsync(MEOop receiver, int rowLabelsWidth1, object userState) {
            if ((this.setRowLabelsWidthOperationCompleted == null)) {
                this.setRowLabelsWidthOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetRowLabelsWidthOperationCompleted);
            }
            this.InvokeAsync("setRowLabelsWidth", new object[] {
                        receiver,
                        rowLabelsWidth1}, this.setRowLabelsWidthOperationCompleted, userState);
        }
        
        private void OnsetRowLabelsWidthOperationCompleted(object arg) {
            if ((this.setRowLabelsWidthCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setRowLabelsWidthCompleted(this, new setRowLabelsWidthCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://metacase.com/MetaEditAPI.textStyleSymbol", RequestNamespace="http://metacase.com/wsdl/", ResponseNamespace="http://metacase.com/wsdl/")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public string textStyleSymbol(MEOop receiver) {
            object[] results = this.Invoke("textStyleSymbol", new object[] {
                        receiver});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegintextStyleSymbol(MEOop receiver, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("textStyleSymbol", new object[] {
                        receiver}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndtextStyleSymbol(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void textStyleSymbolAsync(MEOop receiver) {
            this.textStyleSymbolAsync(receiver, null);
        }
        
        /// <remarks/>
        public void textStyleSymbolAsync(MEOop receiver, object userState) {
            if ((this.textStyleSymbolOperationCompleted == null)) {
                this.textStyleSymbolOperationCompleted = new System.Threading.SendOrPostCallback(this.OntextStyleSymbolOperationCompleted);
            }
            this.InvokeAsync("textStyleSymbol", new object[] {
                        receiver}, this.textStyleSymbolOperationCompleted, userState);
        }
        
        private void OntextStyleSymbolOperationCompleted(object arg) {
            if ((this.textStyleSymbolCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.textStyleSymbolCompleted(this, new textStyleSymbolCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://metacase.com/MetaEditAPI.setTextStyleSymbol", RequestNamespace="http://metacase.com/wsdl/", ResponseNamespace="http://metacase.com/wsdl/")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public MENull setTextStyleSymbol(MEOop receiver, [System.Xml.Serialization.SoapElementAttribute("textStyleSymbol")] string textStyleSymbol1) {
            object[] results = this.Invoke("setTextStyleSymbol", new object[] {
                        receiver,
                        textStyleSymbol1});
            return ((MENull)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginsetTextStyleSymbol(MEOop receiver, string textStyleSymbol1, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("setTextStyleSymbol", new object[] {
                        receiver,
                        textStyleSymbol1}, callback, asyncState);
        }
        
        /// <remarks/>
        public MENull EndsetTextStyleSymbol(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((MENull)(results[0]));
        }
        
        /// <remarks/>
        public void setTextStyleSymbolAsync(MEOop receiver, string textStyleSymbol1) {
            this.setTextStyleSymbolAsync(receiver, textStyleSymbol1, null);
        }
        
        /// <remarks/>
        public void setTextStyleSymbolAsync(MEOop receiver, string textStyleSymbol1, object userState) {
            if ((this.setTextStyleSymbolOperationCompleted == null)) {
                this.setTextStyleSymbolOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetTextStyleSymbolOperationCompleted);
            }
            this.InvokeAsync("setTextStyleSymbol", new object[] {
                        receiver,
                        textStyleSymbol1}, this.setTextStyleSymbolOperationCompleted, userState);
        }
        
        private void OnsetTextStyleSymbolOperationCompleted(object arg) {
            if ((this.setTextStyleSymbolCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setTextStyleSymbolCompleted(this, new setTextStyleSymbolCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://metacase.com/MetaEditAPI.addNewAxisEltFor", RequestNamespace="http://metacase.com/wsdl/", ResponseNamespace="http://metacase.com/wsdl/")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public MEOop addNewAxisEltFor(MEOop receiver, MEOop addNewRepFor, string toAxis, int beforeIndex) {
            object[] results = this.Invoke("addNewAxisEltFor", new object[] {
                        receiver,
                        addNewRepFor,
                        toAxis,
                        beforeIndex});
            return ((MEOop)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginaddNewAxisEltFor(MEOop receiver, MEOop addNewRepFor, string toAxis, int beforeIndex, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("addNewAxisEltFor", new object[] {
                        receiver,
                        addNewRepFor,
                        toAxis,
                        beforeIndex}, callback, asyncState);
        }
        
        /// <remarks/>
        public MEOop EndaddNewAxisEltFor(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((MEOop)(results[0]));
        }
        
        /// <remarks/>
        public void addNewAxisEltForAsync(MEOop receiver, MEOop addNewRepFor, string toAxis, int beforeIndex) {
            this.addNewAxisEltForAsync(receiver, addNewRepFor, toAxis, beforeIndex, null);
        }
        
        /// <remarks/>
        public void addNewAxisEltForAsync(MEOop receiver, MEOop addNewRepFor, string toAxis, int beforeIndex, object userState) {
            if ((this.addNewAxisEltForOperationCompleted == null)) {
                this.addNewAxisEltForOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddNewAxisEltForOperationCompleted);
            }
            this.InvokeAsync("addNewAxisEltFor", new object[] {
                        receiver,
                        addNewRepFor,
                        toAxis,
                        beforeIndex}, this.addNewAxisEltForOperationCompleted, userState);
        }
        
        private void OnaddNewAxisEltForOperationCompleted(object arg) {
            if ((this.addNewAxisEltForCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addNewAxisEltForCompleted(this, new addNewAxisEltForCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://metacase.com/MetaEditAPI.getWidth", RequestNamespace="http://metacase.com/wsdl/", ResponseNamespace="http://metacase.com/wsdl/")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public int getWidth(MEOop receiver) {
            object[] results = this.Invoke("getWidth", new object[] {
                        receiver});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetWidth(MEOop receiver, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getWidth", new object[] {
                        receiver}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndgetWidth(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void getWidthAsync(MEOop receiver) {
            this.getWidthAsync(receiver, null);
        }
        
        /// <remarks/>
        public void getWidthAsync(MEOop receiver, object userState) {
            if ((this.getWidthOperationCompleted == null)) {
                this.getWidthOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetWidthOperationCompleted);
            }
            this.InvokeAsync("getWidth", new object[] {
                        receiver}, this.getWidthOperationCompleted, userState);
        }
        
        private void OngetWidthOperationCompleted(object arg) {
            if ((this.getWidthCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getWidthCompleted(this, new getWidthCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://metacase.com/MetaEditAPI.setWidth", RequestNamespace="http://metacase.com/wsdl/", ResponseNamespace="http://metacase.com/wsdl/")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public MENull setWidth(MEOop receiver, [System.Xml.Serialization.SoapElementAttribute("setWidth")] int setWidth1) {
            object[] results = this.Invoke("setWidth", new object[] {
                        receiver,
                        setWidth1});
            return ((MENull)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginsetWidth(MEOop receiver, int setWidth1, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("setWidth", new object[] {
                        receiver,
                        setWidth1}, callback, asyncState);
        }
        
        /// <remarks/>
        public MENull EndsetWidth(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((MENull)(results[0]));
        }
        
        /// <remarks/>
        public void setWidthAsync(MEOop receiver, int setWidth1) {
            this.setWidthAsync(receiver, setWidth1, null);
        }
        
        /// <remarks/>
        public void setWidthAsync(MEOop receiver, int setWidth1, object userState) {
            if ((this.setWidthOperationCompleted == null)) {
                this.setWidthOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetWidthOperationCompleted);
            }
            this.InvokeAsync("setWidth", new object[] {
                        receiver,
                        setWidth1}, this.setWidthOperationCompleted, userState);
        }
        
        private void OnsetWidthOperationCompleted(object arg) {
            if ((this.setWidthCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setWidthCompleted(this, new setWidthCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://metacase.com/MetaEditAPI.oT", RequestNamespace="http://metacase.com/wsdl/", ResponseNamespace="http://metacase.com/wsdl/")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public METype oT(MEOop receiver) {
            object[] results = this.Invoke("oT", new object[] {
                        receiver});
            return ((METype)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginoT(MEOop receiver, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("oT", new object[] {
                        receiver}, callback, asyncState);
        }
        
        /// <remarks/>
        public METype EndoT(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((METype)(results[0]));
        }
        
        /// <remarks/>
        public void oTAsync(MEOop receiver) {
            this.oTAsync(receiver, null);
        }
        
        /// <remarks/>
        public void oTAsync(MEOop receiver, object userState) {
            if ((this.oTOperationCompleted == null)) {
                this.oTOperationCompleted = new System.Threading.SendOrPostCallback(this.OnoTOperationCompleted);
            }
            this.InvokeAsync("oT", new object[] {
                        receiver}, this.oTOperationCompleted, userState);
        }
        
        private void OnoTOperationCompleted(object arg) {
            if ((this.oTCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.oTCompleted(this, new oTCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://metacase.com/MetaEditAPI.baseCollection", RequestNamespace="http://metacase.com/wsdl/", ResponseNamespace="http://metacase.com/wsdl/")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public MEOop[] baseCollection(MEOop receiver) {
            object[] results = this.Invoke("baseCollection", new object[] {
                        receiver});
            return ((MEOop[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginbaseCollection(MEOop receiver, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("baseCollection", new object[] {
                        receiver}, callback, asyncState);
        }
        
        /// <remarks/>
        public MEOop[] EndbaseCollection(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((MEOop[])(results[0]));
        }
        
        /// <remarks/>
        public void baseCollectionAsync(MEOop receiver) {
            this.baseCollectionAsync(receiver, null);
        }
        
        /// <remarks/>
        public void baseCollectionAsync(MEOop receiver, object userState) {
            if ((this.baseCollectionOperationCompleted == null)) {
                this.baseCollectionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnbaseCollectionOperationCompleted);
            }
            this.InvokeAsync("baseCollection", new object[] {
                        receiver}, this.baseCollectionOperationCompleted, userState);
        }
        
        private void OnbaseCollectionOperationCompleted(object arg) {
            if ((this.baseCollectionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.baseCollectionCompleted(this, new baseCollectionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://metacase.com/MetaEditAPI.font", RequestNamespace="http://metacase.com/wsdl/", ResponseNamespace="http://metacase.com/wsdl/")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public string font(MEOop receiver) {
            object[] results = this.Invoke("font", new object[] {
                        receiver});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult Beginfont(MEOop receiver, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("font", new object[] {
                        receiver}, callback, asyncState);
        }
        
        /// <remarks/>
        public string Endfont(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void fontAsync(MEOop receiver) {
            this.fontAsync(receiver, null);
        }
        
        /// <remarks/>
        public void fontAsync(MEOop receiver, object userState) {
            if ((this.fontOperationCompleted == null)) {
                this.fontOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfontOperationCompleted);
            }
            this.InvokeAsync("font", new object[] {
                        receiver}, this.fontOperationCompleted, userState);
        }
        
        private void OnfontOperationCompleted(object arg) {
            if ((this.fontCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.fontCompleted(this, new fontCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://metacase.com/MetaEditAPI.setFont", RequestNamespace="http://metacase.com/wsdl/", ResponseNamespace="http://metacase.com/wsdl/")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public MENull setFont(MEOop receiver, [System.Xml.Serialization.SoapElementAttribute("font")] string font1) {
            object[] results = this.Invoke("setFont", new object[] {
                        receiver,
                        font1});
            return ((MENull)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginsetFont(MEOop receiver, string font1, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("setFont", new object[] {
                        receiver,
                        font1}, callback, asyncState);
        }
        
        /// <remarks/>
        public MENull EndsetFont(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((MENull)(results[0]));
        }
        
        /// <remarks/>
        public void setFontAsync(MEOop receiver, string font1) {
            this.setFontAsync(receiver, font1, null);
        }
        
        /// <remarks/>
        public void setFontAsync(MEOop receiver, string font1, object userState) {
            if ((this.setFontOperationCompleted == null)) {
                this.setFontOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetFontOperationCompleted);
            }
            this.InvokeAsync("setFont", new object[] {
                        receiver,
                        font1}, this.setFontOperationCompleted, userState);
        }
        
        private void OnsetFontOperationCompleted(object arg) {
            if ((this.setFontCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setFontCompleted(this, new setFontCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://metacase.com/MetaEditAPI.gxlWidths", RequestNamespace="http://metacase.com/wsdl/", ResponseNamespace="http://metacase.com/wsdl/")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public MEAny[] gxlWidths(MEOop receiver) {
            object[] results = this.Invoke("gxlWidths", new object[] {
                        receiver});
            return ((MEAny[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingxlWidths(MEOop receiver, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("gxlWidths", new object[] {
                        receiver}, callback, asyncState);
        }
        
        /// <remarks/>
        public MEAny[] EndgxlWidths(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((MEAny[])(results[0]));
        }
        
        /// <remarks/>
        public void gxlWidthsAsync(MEOop receiver) {
            this.gxlWidthsAsync(receiver, null);
        }
        
        /// <remarks/>
        public void gxlWidthsAsync(MEOop receiver, object userState) {
            if ((this.gxlWidthsOperationCompleted == null)) {
                this.gxlWidthsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngxlWidthsOperationCompleted);
            }
            this.InvokeAsync("gxlWidths", new object[] {
                        receiver}, this.gxlWidthsOperationCompleted, userState);
        }
        
        private void OngxlWidthsOperationCompleted(object arg) {
            if ((this.gxlWidthsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.gxlWidthsCompleted(this, new gxlWidthsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://metacase.com/MetaEditAPI.setGxlWidths", RequestNamespace="http://metacase.com/wsdl/", ResponseNamespace="http://metacase.com/wsdl/")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public MENull setGxlWidths(MEOop receiver, [System.Xml.Serialization.SoapElementAttribute("gxlWidths")] MEAny[] gxlWidths1) {
            object[] results = this.Invoke("setGxlWidths", new object[] {
                        receiver,
                        gxlWidths1});
            return ((MENull)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginsetGxlWidths(MEOop receiver, MEAny[] gxlWidths1, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("setGxlWidths", new object[] {
                        receiver,
                        gxlWidths1}, callback, asyncState);
        }
        
        /// <remarks/>
        public MENull EndsetGxlWidths(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((MENull)(results[0]));
        }
        
        /// <remarks/>
        public void setGxlWidthsAsync(MEOop receiver, MEAny[] gxlWidths1) {
            this.setGxlWidthsAsync(receiver, gxlWidths1, null);
        }
        
        /// <remarks/>
        public void setGxlWidthsAsync(MEOop receiver, MEAny[] gxlWidths1, object userState) {
            if ((this.setGxlWidthsOperationCompleted == null)) {
                this.setGxlWidthsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetGxlWidthsOperationCompleted);
            }
            this.InvokeAsync("setGxlWidths", new object[] {
                        receiver,
                        gxlWidths1}, this.setGxlWidthsOperationCompleted, userState);
        }
        
        private void OnsetGxlWidthsOperationCompleted(object arg) {
            if ((this.setGxlWidthsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setGxlWidthsCompleted(this, new setGxlWidthsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://metacase.com/MetaEditAPI.addNewTableEltFor", RequestNamespace="http://metacase.com/wsdl/", ResponseNamespace="http://metacase.com/wsdl/")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public MENull addNewTableEltFor(MEOop receiver, MEOop addNewRepFor, int beforeIndex) {
            object[] results = this.Invoke("addNewTableEltFor", new object[] {
                        receiver,
                        addNewRepFor,
                        beforeIndex});
            return ((MENull)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginaddNewTableEltFor(MEOop receiver, MEOop addNewRepFor, int beforeIndex, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("addNewTableEltFor", new object[] {
                        receiver,
                        addNewRepFor,
                        beforeIndex}, callback, asyncState);
        }
        
        /// <remarks/>
        public MENull EndaddNewTableEltFor(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((MENull)(results[0]));
        }
        
        /// <remarks/>
        public void addNewTableEltForAsync(MEOop receiver, MEOop addNewRepFor, int beforeIndex) {
            this.addNewTableEltForAsync(receiver, addNewRepFor, beforeIndex, null);
        }
        
        /// <remarks/>
        public void addNewTableEltForAsync(MEOop receiver, MEOop addNewRepFor, int beforeIndex, object userState) {
            if ((this.addNewTableEltForOperationCompleted == null)) {
                this.addNewTableEltForOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddNewTableEltForOperationCompleted);
            }
            this.InvokeAsync("addNewTableEltFor", new object[] {
                        receiver,
                        addNewRepFor,
                        beforeIndex}, this.addNewTableEltForOperationCompleted, userState);
        }
        
        private void OnaddNewTableEltForOperationCompleted(object arg) {
            if ((this.addNewTableEltForCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addNewTableEltForCompleted(this, new addNewTableEltForCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://metacase.com/MetaEditAPI.waitForBindingCreation", RequestNamespace="http://metacase.com/wsdl/", ResponseNamespace="http://metacase.com/wsdl/")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public MEAny[] waitForBindingCreation(MENull receiver, [System.Xml.Serialization.SoapElementAttribute("waitForBindingCreation")] int waitForBindingCreation1) {
            object[] results = this.Invoke("waitForBindingCreation", new object[] {
                        receiver,
                        waitForBindingCreation1});
            return ((MEAny[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginwaitForBindingCreation(MENull receiver, int waitForBindingCreation1, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("waitForBindingCreation", new object[] {
                        receiver,
                        waitForBindingCreation1}, callback, asyncState);
        }
        
        /// <remarks/>
        public MEAny[] EndwaitForBindingCreation(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((MEAny[])(results[0]));
        }
        
        /// <remarks/>
        public void waitForBindingCreationAsync(MENull receiver, int waitForBindingCreation1) {
            this.waitForBindingCreationAsync(receiver, waitForBindingCreation1, null);
        }
        
        /// <remarks/>
        public void waitForBindingCreationAsync(MENull receiver, int waitForBindingCreation1, object userState) {
            if ((this.waitForBindingCreationOperationCompleted == null)) {
                this.waitForBindingCreationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnwaitForBindingCreationOperationCompleted);
            }
            this.InvokeAsync("waitForBindingCreation", new object[] {
                        receiver,
                        waitForBindingCreation1}, this.waitForBindingCreationOperationCompleted, userState);
        }
        
        private void OnwaitForBindingCreationOperationCompleted(object arg) {
            if ((this.waitForBindingCreationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.waitForBindingCreationCompleted(this, new waitForBindingCreationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://metacase.com/MetaEditAPI.waitForBindingFinalization", RequestNamespace="http://metacase.com/wsdl/", ResponseNamespace="http://metacase.com/wsdl/")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public MEAny[] waitForBindingFinalization(MENull receiver, [System.Xml.Serialization.SoapElementAttribute("waitForBindingFinalization")] int waitForBindingFinalization1, MEOop @in) {
            object[] results = this.Invoke("waitForBindingFinalization", new object[] {
                        receiver,
                        waitForBindingFinalization1,
                        @in});
            return ((MEAny[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginwaitForBindingFinalization(MENull receiver, int waitForBindingFinalization1, MEOop @in, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("waitForBindingFinalization", new object[] {
                        receiver,
                        waitForBindingFinalization1,
                        @in}, callback, asyncState);
        }
        
        /// <remarks/>
        public MEAny[] EndwaitForBindingFinalization(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((MEAny[])(results[0]));
        }
        
        /// <remarks/>
        public void waitForBindingFinalizationAsync(MENull receiver, int waitForBindingFinalization1, MEOop @in) {
            this.waitForBindingFinalizationAsync(receiver, waitForBindingFinalization1, @in, null);
        }
        
        /// <remarks/>
        public void waitForBindingFinalizationAsync(MENull receiver, int waitForBindingFinalization1, MEOop @in, object userState) {
            if ((this.waitForBindingFinalizationOperationCompleted == null)) {
                this.waitForBindingFinalizationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnwaitForBindingFinalizationOperationCompleted);
            }
            this.InvokeAsync("waitForBindingFinalization", new object[] {
                        receiver,
                        waitForBindingFinalization1,
                        @in}, this.waitForBindingFinalizationOperationCompleted, userState);
        }
        
        private void OnwaitForBindingFinalizationOperationCompleted(object arg) {
            if ((this.waitForBindingFinalizationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.waitForBindingFinalizationCompleted(this, new waitForBindingFinalizationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://metacase.com/MetaEditAPI.openedGraphReprs", RequestNamespace="http://metacase.com/wsdl/", ResponseNamespace="http://metacase.com/wsdl/")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public MEOop[] openedGraphReprs(MENull receiver) {
            object[] results = this.Invoke("openedGraphReprs", new object[] {
                        receiver});
            return ((MEOop[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginopenedGraphReprs(MENull receiver, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("openedGraphReprs", new object[] {
                        receiver}, callback, asyncState);
        }
        
        /// <remarks/>
        public MEOop[] EndopenedGraphReprs(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((MEOop[])(results[0]));
        }
        
        /// <remarks/>
        public void openedGraphReprsAsync(MENull receiver) {
            this.openedGraphReprsAsync(receiver, null);
        }
        
        /// <remarks/>
        public void openedGraphReprsAsync(MENull receiver, object userState) {
            if ((this.openedGraphReprsOperationCompleted == null)) {
                this.openedGraphReprsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnopenedGraphReprsOperationCompleted);
            }
            this.InvokeAsync("openedGraphReprs", new object[] {
                        receiver}, this.openedGraphReprsOperationCompleted, userState);
        }
        
        private void OnopenedGraphReprsOperationCompleted(object arg) {
            if ((this.openedGraphReprsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.openedGraphReprsCompleted(this, new openedGraphReprsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://metacase.com/MetaEditAPI.animateAll", RequestNamespace="http://metacase.com/wsdl/", ResponseNamespace="http://metacase.com/wsdl/")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public MENull animateAll(MEOop receiver, [System.Xml.Serialization.SoapElementAttribute("animateAll")] MEOop[] animateAll1) {
            object[] results = this.Invoke("animateAll", new object[] {
                        receiver,
                        animateAll1});
            return ((MENull)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginanimateAll(MEOop receiver, MEOop[] animateAll1, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("animateAll", new object[] {
                        receiver,
                        animateAll1}, callback, asyncState);
        }
        
        /// <remarks/>
        public MENull EndanimateAll(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((MENull)(results[0]));
        }
        
        /// <remarks/>
        public void animateAllAsync(MEOop receiver, MEOop[] animateAll1) {
            this.animateAllAsync(receiver, animateAll1, null);
        }
        
        /// <remarks/>
        public void animateAllAsync(MEOop receiver, MEOop[] animateAll1, object userState) {
            if ((this.animateAllOperationCompleted == null)) {
                this.animateAllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnanimateAllOperationCompleted);
            }
            this.InvokeAsync("animateAll", new object[] {
                        receiver,
                        animateAll1}, this.animateAllOperationCompleted, userState);
        }
        
        private void OnanimateAllOperationCompleted(object arg) {
            if ((this.animateAllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.animateAllCompleted(this, new animateAllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://metacase.com/MetaEditAPI.animateNone", RequestNamespace="http://metacase.com/wsdl/", ResponseNamespace="http://metacase.com/wsdl/")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public MENull animateNone(MEOop receiver) {
            object[] results = this.Invoke("animateNone", new object[] {
                        receiver});
            return ((MENull)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginanimateNone(MEOop receiver, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("animateNone", new object[] {
                        receiver}, callback, asyncState);
        }
        
        /// <remarks/>
        public MENull EndanimateNone(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((MENull)(results[0]));
        }
        
        /// <remarks/>
        public void animateNoneAsync(MEOop receiver) {
            this.animateNoneAsync(receiver, null);
        }
        
        /// <remarks/>
        public void animateNoneAsync(MEOop receiver, object userState) {
            if ((this.animateNoneOperationCompleted == null)) {
                this.animateNoneOperationCompleted = new System.Threading.SendOrPostCallback(this.OnanimateNoneOperationCompleted);
            }
            this.InvokeAsync("animateNone", new object[] {
                        receiver}, this.animateNoneOperationCompleted, userState);
        }
        
        private void OnanimateNoneOperationCompleted(object arg) {
            if ((this.animateNoneCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.animateNoneCompleted(this, new animateNoneCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://metacase.com/MetaEditAPI.createGraphDialog", RequestNamespace="http://metacase.com/wsdl/", ResponseNamespace="http://metacase.com/wsdl/")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public MEAny createGraphDialog(METype receiver) {
            object[] results = this.Invoke("createGraphDialog", new object[] {
                        receiver});
            return ((MEAny)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegincreateGraphDialog(METype receiver, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("createGraphDialog", new object[] {
                        receiver}, callback, asyncState);
        }
        
        /// <remarks/>
        public MEAny EndcreateGraphDialog(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((MEAny)(results[0]));
        }
        
        /// <remarks/>
        public void createGraphDialogAsync(METype receiver) {
            this.createGraphDialogAsync(receiver, null);
        }
        
        /// <remarks/>
        public void createGraphDialogAsync(METype receiver, object userState) {
            if ((this.createGraphDialogOperationCompleted == null)) {
                this.createGraphDialogOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateGraphDialogOperationCompleted);
            }
            this.InvokeAsync("createGraphDialog", new object[] {
                        receiver}, this.createGraphDialogOperationCompleted, userState);
        }
        
        private void OncreateGraphDialogOperationCompleted(object arg) {
            if ((this.createGraphDialogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createGraphDialogCompleted(this, new createGraphDialogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://metacase.com/MetaEditAPI.createFromPropertyDialogInArea", RequestNamespace="http://metacase.com/wsdl/", ResponseNamespace="http://metacase.com/wsdl/")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public MEAny createFromPropertyDialogInArea(METype receiver, [System.Xml.Serialization.SoapElementAttribute("createFromPropertyDialogInArea")] int createFromPropertyDialogInArea1) {
            object[] results = this.Invoke("createFromPropertyDialogInArea", new object[] {
                        receiver,
                        createFromPropertyDialogInArea1});
            return ((MEAny)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegincreateFromPropertyDialogInArea(METype receiver, int createFromPropertyDialogInArea1, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("createFromPropertyDialogInArea", new object[] {
                        receiver,
                        createFromPropertyDialogInArea1}, callback, asyncState);
        }
        
        /// <remarks/>
        public MEAny EndcreateFromPropertyDialogInArea(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((MEAny)(results[0]));
        }
        
        /// <remarks/>
        public void createFromPropertyDialogInAreaAsync(METype receiver, int createFromPropertyDialogInArea1) {
            this.createFromPropertyDialogInAreaAsync(receiver, createFromPropertyDialogInArea1, null);
        }
        
        /// <remarks/>
        public void createFromPropertyDialogInAreaAsync(METype receiver, int createFromPropertyDialogInArea1, object userState) {
            if ((this.createFromPropertyDialogInAreaOperationCompleted == null)) {
                this.createFromPropertyDialogInAreaOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateFromPropertyDialogInAreaOperationCompleted);
            }
            this.InvokeAsync("createFromPropertyDialogInArea", new object[] {
                        receiver,
                        createFromPropertyDialogInArea1}, this.createFromPropertyDialogInAreaOperationCompleted, userState);
        }
        
        private void OncreateFromPropertyDialogInAreaOperationCompleted(object arg) {
            if ((this.createFromPropertyDialogInAreaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createFromPropertyDialogInAreaCompleted(this, new createFromPropertyDialogInAreaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://metacase.com/MetaEditAPI.propertyDialog", RequestNamespace="http://metacase.com/wsdl/", ResponseNamespace="http://metacase.com/wsdl/")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public bool propertyDialog(MEOop receiver) {
            object[] results = this.Invoke("propertyDialog", new object[] {
                        receiver});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginpropertyDialog(MEOop receiver, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("propertyDialog", new object[] {
                        receiver}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndpropertyDialog(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void propertyDialogAsync(MEOop receiver) {
            this.propertyDialogAsync(receiver, null);
        }
        
        /// <remarks/>
        public void propertyDialogAsync(MEOop receiver, object userState) {
            if ((this.propertyDialogOperationCompleted == null)) {
                this.propertyDialogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnpropertyDialogOperationCompleted);
            }
            this.InvokeAsync("propertyDialog", new object[] {
                        receiver}, this.propertyDialogOperationCompleted, userState);
        }
        
        private void OnpropertyDialogOperationCompleted(object arg) {
            if ((this.propertyDialogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.propertyDialogCompleted(this, new propertyDialogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://metacase.com/MetaEditAPI.forGraphRun", RequestNamespace="http://metacase.com/wsdl/", ResponseNamespace="http://metacase.com/wsdl/")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public bool forGraphRun(MEOop receiver, [System.Xml.Serialization.SoapElementAttribute("forGraphRun")] string forGraphRun1) {
            object[] results = this.Invoke("forGraphRun", new object[] {
                        receiver,
                        forGraphRun1});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginforGraphRun(MEOop receiver, string forGraphRun1, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("forGraphRun", new object[] {
                        receiver,
                        forGraphRun1}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndforGraphRun(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void forGraphRunAsync(MEOop receiver, string forGraphRun1) {
            this.forGraphRunAsync(receiver, forGraphRun1, null);
        }
        
        /// <remarks/>
        public void forGraphRunAsync(MEOop receiver, string forGraphRun1, object userState) {
            if ((this.forGraphRunOperationCompleted == null)) {
                this.forGraphRunOperationCompleted = new System.Threading.SendOrPostCallback(this.OnforGraphRunOperationCompleted);
            }
            this.InvokeAsync("forGraphRun", new object[] {
                        receiver,
                        forGraphRun1}, this.forGraphRunOperationCompleted, userState);
        }
        
        private void OnforGraphRunOperationCompleted(object arg) {
            if ((this.forGraphRunCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.forGraphRunCompleted(this, new forGraphRunCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://metacase.com/MetaEditAPI.generatorNames", RequestNamespace="http://metacase.com/wsdl/", ResponseNamespace="http://metacase.com/wsdl/")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public string generatorNames(METype receiver) {
            object[] results = this.Invoke("generatorNames", new object[] {
                        receiver});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingeneratorNames(METype receiver, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("generatorNames", new object[] {
                        receiver}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndgeneratorNames(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void generatorNamesAsync(METype receiver) {
            this.generatorNamesAsync(receiver, null);
        }
        
        /// <remarks/>
        public void generatorNamesAsync(METype receiver, object userState) {
            if ((this.generatorNamesOperationCompleted == null)) {
                this.generatorNamesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngeneratorNamesOperationCompleted);
            }
            this.InvokeAsync("generatorNames", new object[] {
                        receiver}, this.generatorNamesOperationCompleted, userState);
        }
        
        private void OngeneratorNamesOperationCompleted(object arg) {
            if ((this.generatorNamesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.generatorNamesCompleted(this, new generatorNamesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://metacase.com/MetaEditAPI.currentDir", RequestNamespace="http://metacase.com/wsdl/", ResponseNamespace="http://metacase.com/wsdl/")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public MENull currentDir(MENull receiver, [System.Xml.Serialization.SoapElementAttribute("currentDir")] string currentDir1) {
            object[] results = this.Invoke("currentDir", new object[] {
                        receiver,
                        currentDir1});
            return ((MENull)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegincurrentDir(MENull receiver, string currentDir1, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("currentDir", new object[] {
                        receiver,
                        currentDir1}, callback, asyncState);
        }
        
        /// <remarks/>
        public MENull EndcurrentDir(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((MENull)(results[0]));
        }
        
        /// <remarks/>
        public void currentDirAsync(MENull receiver, string currentDir1) {
            this.currentDirAsync(receiver, currentDir1, null);
        }
        
        /// <remarks/>
        public void currentDirAsync(MENull receiver, string currentDir1, object userState) {
            if ((this.currentDirOperationCompleted == null)) {
                this.currentDirOperationCompleted = new System.Threading.SendOrPostCallback(this.OncurrentDirOperationCompleted);
            }
            this.InvokeAsync("currentDir", new object[] {
                        receiver,
                        currentDir1}, this.currentDirOperationCompleted, userState);
        }
        
        private void OncurrentDirOperationCompleted(object arg) {
            if ((this.currentDirCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.currentDirCompleted(this, new currentDirCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://metacase.com/MetaEditAPI.fileInPatch", RequestNamespace="http://metacase.com/wsdl/", ResponseNamespace="http://metacase.com/wsdl/")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public MENull fileInPatch(MENull receiver, [System.Xml.Serialization.SoapElementAttribute("fileInPatch")] string fileInPatch1) {
            object[] results = this.Invoke("fileInPatch", new object[] {
                        receiver,
                        fileInPatch1});
            return ((MENull)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginfileInPatch(MENull receiver, string fileInPatch1, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("fileInPatch", new object[] {
                        receiver,
                        fileInPatch1}, callback, asyncState);
        }
        
        /// <remarks/>
        public MENull EndfileInPatch(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((MENull)(results[0]));
        }
        
        /// <remarks/>
        public void fileInPatchAsync(MENull receiver, string fileInPatch1) {
            this.fileInPatchAsync(receiver, fileInPatch1, null);
        }
        
        /// <remarks/>
        public void fileInPatchAsync(MENull receiver, string fileInPatch1, object userState) {
            if ((this.fileInPatchOperationCompleted == null)) {
                this.fileInPatchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfileInPatchOperationCompleted);
            }
            this.InvokeAsync("fileInPatch", new object[] {
                        receiver,
                        fileInPatch1}, this.fileInPatchOperationCompleted, userState);
        }
        
        private void OnfileInPatchOperationCompleted(object arg) {
            if ((this.fileInPatchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.fileInPatchCompleted(this, new fileInPatchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://metacase.com/MetaEditAPI.fileInPatches", RequestNamespace="http://metacase.com/wsdl/", ResponseNamespace="http://metacase.com/wsdl/")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public MENull fileInPatches(MENull receiver) {
            object[] results = this.Invoke("fileInPatches", new object[] {
                        receiver});
            return ((MENull)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginfileInPatches(MENull receiver, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("fileInPatches", new object[] {
                        receiver}, callback, asyncState);
        }
        
        /// <remarks/>
        public MENull EndfileInPatches(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((MENull)(results[0]));
        }
        
        /// <remarks/>
        public void fileInPatchesAsync(MENull receiver) {
            this.fileInPatchesAsync(receiver, null);
        }
        
        /// <remarks/>
        public void fileInPatchesAsync(MENull receiver, object userState) {
            if ((this.fileInPatchesOperationCompleted == null)) {
                this.fileInPatchesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfileInPatchesOperationCompleted);
            }
            this.InvokeAsync("fileInPatches", new object[] {
                        receiver}, this.fileInPatchesOperationCompleted, userState);
        }
        
        private void OnfileInPatchesOperationCompleted(object arg) {
            if ((this.fileInPatchesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.fileInPatchesCompleted(this, new fileInPatchesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://metacase.com/MetaEditAPI.abandon", RequestNamespace="http://metacase.com/wsdl/", ResponseNamespace="http://metacase.com/wsdl/")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public MENull abandon(MENull receiver) {
            object[] results = this.Invoke("abandon", new object[] {
                        receiver});
            return ((MENull)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult Beginabandon(MENull receiver, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("abandon", new object[] {
                        receiver}, callback, asyncState);
        }
        
        /// <remarks/>
        public MENull Endabandon(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((MENull)(results[0]));
        }
        
        /// <remarks/>
        public void abandonAsync(MENull receiver) {
            this.abandonAsync(receiver, null);
        }
        
        /// <remarks/>
        public void abandonAsync(MENull receiver, object userState) {
            if ((this.abandonOperationCompleted == null)) {
                this.abandonOperationCompleted = new System.Threading.SendOrPostCallback(this.OnabandonOperationCompleted);
            }
            this.InvokeAsync("abandon", new object[] {
                        receiver}, this.abandonOperationCompleted, userState);
        }
        
        private void OnabandonOperationCompleted(object arg) {
            if ((this.abandonCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.abandonCompleted(this, new abandonCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://metacase.com/MetaEditAPI.commit", RequestNamespace="http://metacase.com/wsdl/", ResponseNamespace="http://metacase.com/wsdl/")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public MENull commit(MENull receiver) {
            object[] results = this.Invoke("commit", new object[] {
                        receiver});
            return ((MENull)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult Begincommit(MENull receiver, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("commit", new object[] {
                        receiver}, callback, asyncState);
        }
        
        /// <remarks/>
        public MENull Endcommit(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((MENull)(results[0]));
        }
        
        /// <remarks/>
        public void commitAsync(MENull receiver) {
            this.commitAsync(receiver, null);
        }
        
        /// <remarks/>
        public void commitAsync(MENull receiver, object userState) {
            if ((this.commitOperationCompleted == null)) {
                this.commitOperationCompleted = new System.Threading.SendOrPostCallback(this.OncommitOperationCompleted);
            }
            this.InvokeAsync("commit", new object[] {
                        receiver}, this.commitOperationCompleted, userState);
        }
        
        private void OncommitOperationCompleted(object arg) {
            if ((this.commitCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.commitCompleted(this, new commitCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://metacase.com/MetaEditAPI.condenseDatabase", RequestNamespace="http://metacase.com/wsdl/", ResponseNamespace="http://metacase.com/wsdl/")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public MENull condenseDatabase(MENull receiver) {
            object[] results = this.Invoke("condenseDatabase", new object[] {
                        receiver});
            return ((MENull)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegincondenseDatabase(MENull receiver, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("condenseDatabase", new object[] {
                        receiver}, callback, asyncState);
        }
        
        /// <remarks/>
        public MENull EndcondenseDatabase(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((MENull)(results[0]));
        }
        
        /// <remarks/>
        public void condenseDatabaseAsync(MENull receiver) {
            this.condenseDatabaseAsync(receiver, null);
        }
        
        /// <remarks/>
        public void condenseDatabaseAsync(MENull receiver, object userState) {
            if ((this.condenseDatabaseOperationCompleted == null)) {
                this.condenseDatabaseOperationCompleted = new System.Threading.SendOrPostCallback(this.OncondenseDatabaseOperationCompleted);
            }
            this.InvokeAsync("condenseDatabase", new object[] {
                        receiver}, this.condenseDatabaseOperationCompleted, userState);
        }
        
        private void OncondenseDatabaseOperationCompleted(object arg) {
            if ((this.condenseDatabaseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.condenseDatabaseCompleted(this, new condenseDatabaseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://metacase.com/MetaEditAPI.createProject", RequestNamespace="http://metacase.com/wsdl/", ResponseNamespace="http://metacase.com/wsdl/")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public MENull createProject(MENull receiver, [System.Xml.Serialization.SoapElementAttribute("createProject")] string createProject1) {
            object[] results = this.Invoke("createProject", new object[] {
                        receiver,
                        createProject1});
            return ((MENull)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegincreateProject(MENull receiver, string createProject1, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("createProject", new object[] {
                        receiver,
                        createProject1}, callback, asyncState);
        }
        
        /// <remarks/>
        public MENull EndcreateProject(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((MENull)(results[0]));
        }
        
        /// <remarks/>
        public void createProjectAsync(MENull receiver, string createProject1) {
            this.createProjectAsync(receiver, createProject1, null);
        }
        
        /// <remarks/>
        public void createProjectAsync(MENull receiver, string createProject1, object userState) {
            if ((this.createProjectOperationCompleted == null)) {
                this.createProjectOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateProjectOperationCompleted);
            }
            this.InvokeAsync("createProject", new object[] {
                        receiver,
                        createProject1}, this.createProjectOperationCompleted, userState);
        }
        
        private void OncreateProjectOperationCompleted(object arg) {
            if ((this.createProjectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createProjectCompleted(this, new createProjectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://metacase.com/MetaEditAPI.document", RequestNamespace="http://metacase.com/wsdl/", ResponseNamespace="http://metacase.com/wsdl/")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public MENull document(MENull receiver, [System.Xml.Serialization.SoapElementAttribute("document")] string document1, string into) {
            object[] results = this.Invoke("document", new object[] {
                        receiver,
                        document1,
                        into});
            return ((MENull)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult Begindocument(MENull receiver, string document1, string into, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("document", new object[] {
                        receiver,
                        document1,
                        into}, callback, asyncState);
        }
        
        /// <remarks/>
        public MENull Enddocument(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((MENull)(results[0]));
        }
        
        /// <remarks/>
        public void documentAsync(MENull receiver, string document1, string into) {
            this.documentAsync(receiver, document1, into, null);
        }
        
        /// <remarks/>
        public void documentAsync(MENull receiver, string document1, string into, object userState) {
            if ((this.documentOperationCompleted == null)) {
                this.documentOperationCompleted = new System.Threading.SendOrPostCallback(this.OndocumentOperationCompleted);
            }
            this.InvokeAsync("document", new object[] {
                        receiver,
                        document1,
                        into}, this.documentOperationCompleted, userState);
        }
        
        private void OndocumentOperationCompleted(object arg) {
            if ((this.documentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.documentCompleted(this, new documentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://metacase.com/MetaEditAPI.forAll", RequestNamespace="http://metacase.com/wsdl/", ResponseNamespace="http://metacase.com/wsdl/")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public MENull forAll(MENull receiver, [System.Xml.Serialization.SoapElementAttribute("forAll")] string forAll1, string run) {
            object[] results = this.Invoke("forAll", new object[] {
                        receiver,
                        forAll1,
                        run});
            return ((MENull)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginforAll(MENull receiver, string forAll1, string run, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("forAll", new object[] {
                        receiver,
                        forAll1,
                        run}, callback, asyncState);
        }
        
        /// <remarks/>
        public MENull EndforAll(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((MENull)(results[0]));
        }
        
        /// <remarks/>
        public void forAllAsync(MENull receiver, string forAll1, string run) {
            this.forAllAsync(receiver, forAll1, run, null);
        }
        
        /// <remarks/>
        public void forAllAsync(MENull receiver, string forAll1, string run, object userState) {
            if ((this.forAllOperationCompleted == null)) {
                this.forAllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnforAllOperationCompleted);
            }
            this.InvokeAsync("forAll", new object[] {
                        receiver,
                        forAll1,
                        run}, this.forAllOperationCompleted, userState);
        }
        
        private void OnforAllOperationCompleted(object arg) {
            if ((this.forAllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.forAllCompleted(this, new forAllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://metacase.com/MetaEditAPI.forName", RequestNamespace="http://metacase.com/wsdl/", ResponseNamespace="http://metacase.com/wsdl/")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public MENull forName(MENull receiver, [System.Xml.Serialization.SoapElementAttribute("forName")] string forName1, [System.Xml.Serialization.SoapElementAttribute("type")] string type1, string run) {
            object[] results = this.Invoke("forName", new object[] {
                        receiver,
                        forName1,
                        type1,
                        run});
            return ((MENull)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginforName(MENull receiver, string forName1, string type1, string run, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("forName", new object[] {
                        receiver,
                        forName1,
                        type1,
                        run}, callback, asyncState);
        }
        
        /// <remarks/>
        public MENull EndforName(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((MENull)(results[0]));
        }
        
        /// <remarks/>
        public void forNameAsync(MENull receiver, string forName1, string type1, string run) {
            this.forNameAsync(receiver, forName1, type1, run, null);
        }
        
        /// <remarks/>
        public void forNameAsync(MENull receiver, string forName1, string type1, string run, object userState) {
            if ((this.forNameOperationCompleted == null)) {
                this.forNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnforNameOperationCompleted);
            }
            this.InvokeAsync("forName", new object[] {
                        receiver,
                        forName1,
                        type1,
                        run}, this.forNameOperationCompleted, userState);
        }
        
        private void OnforNameOperationCompleted(object arg) {
            if ((this.forNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.forNameCompleted(this, new forNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://metacase.com/MetaEditAPI.login", RequestNamespace="http://metacase.com/wsdl/", ResponseNamespace="http://metacase.com/wsdl/")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public MENull login(MENull receiver) {
            object[] results = this.Invoke("login", new object[] {
                        receiver});
            return ((MENull)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult Beginlogin(MENull receiver, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("login", new object[] {
                        receiver}, callback, asyncState);
        }
        
        /// <remarks/>
        public MENull Endlogin(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((MENull)(results[0]));
        }
        
        /// <remarks/>
        public void loginAsync(MENull receiver) {
            this.loginAsync(receiver, null);
        }
        
        /// <remarks/>
        public void loginAsync(MENull receiver, object userState) {
            if ((this.loginOperationCompleted == null)) {
                this.loginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnloginOperationCompleted);
            }
            this.InvokeAsync("login", new object[] {
                        receiver}, this.loginOperationCompleted, userState);
        }
        
        private void OnloginOperationCompleted(object arg) {
            if ((this.loginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.loginCompleted(this, new loginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://metacase.com/MetaEditAPI.loginDB", RequestNamespace="http://metacase.com/wsdl/", ResponseNamespace="http://metacase.com/wsdl/")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public MENull loginDB(MENull receiver, [System.Xml.Serialization.SoapElementAttribute("loginDB")] string loginDB1, string user, string password) {
            object[] results = this.Invoke("loginDB", new object[] {
                        receiver,
                        loginDB1,
                        user,
                        password});
            return ((MENull)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginloginDB(MENull receiver, string loginDB1, string user, string password, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("loginDB", new object[] {
                        receiver,
                        loginDB1,
                        user,
                        password}, callback, asyncState);
        }
        
        /// <remarks/>
        public MENull EndloginDB(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((MENull)(results[0]));
        }
        
        /// <remarks/>
        public void loginDBAsync(MENull receiver, string loginDB1, string user, string password) {
            this.loginDBAsync(receiver, loginDB1, user, password, null);
        }
        
        /// <remarks/>
        public void loginDBAsync(MENull receiver, string loginDB1, string user, string password, object userState) {
            if ((this.loginDBOperationCompleted == null)) {
                this.loginDBOperationCompleted = new System.Threading.SendOrPostCallback(this.OnloginDBOperationCompleted);
            }
            this.InvokeAsync("loginDB", new object[] {
                        receiver,
                        loginDB1,
                        user,
                        password}, this.loginDBOperationCompleted, userState);
        }
        
        private void OnloginDBOperationCompleted(object arg) {
            if ((this.loginDBCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.loginDBCompleted(this, new loginDBCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://metacase.com/MetaEditAPI.loginNewDB", RequestNamespace="http://metacase.com/wsdl/", ResponseNamespace="http://metacase.com/wsdl/")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public MENull loginNewDB(MENull receiver, [System.Xml.Serialization.SoapElementAttribute("loginNewDB")] string loginNewDB1, string dir, string user, string password) {
            object[] results = this.Invoke("loginNewDB", new object[] {
                        receiver,
                        loginNewDB1,
                        dir,
                        user,
                        password});
            return ((MENull)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginloginNewDB(MENull receiver, string loginNewDB1, string dir, string user, string password, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("loginNewDB", new object[] {
                        receiver,
                        loginNewDB1,
                        dir,
                        user,
                        password}, callback, asyncState);
        }
        
        /// <remarks/>
        public MENull EndloginNewDB(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((MENull)(results[0]));
        }
        
        /// <remarks/>
        public void loginNewDBAsync(MENull receiver, string loginNewDB1, string dir, string user, string password) {
            this.loginNewDBAsync(receiver, loginNewDB1, dir, user, password, null);
        }
        
        /// <remarks/>
        public void loginNewDBAsync(MENull receiver, string loginNewDB1, string dir, string user, string password, object userState) {
            if ((this.loginNewDBOperationCompleted == null)) {
                this.loginNewDBOperationCompleted = new System.Threading.SendOrPostCallback(this.OnloginNewDBOperationCompleted);
            }
            this.InvokeAsync("loginNewDB", new object[] {
                        receiver,
                        loginNewDB1,
                        dir,
                        user,
                        password}, this.loginNewDBOperationCompleted, userState);
        }
        
        private void OnloginNewDBOperationCompleted(object arg) {
            if ((this.loginNewDBCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.loginNewDBCompleted(this, new loginNewDBCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://metacase.com/MetaEditAPI.logoutAndExit", RequestNamespace="http://metacase.com/wsdl/", ResponseNamespace="http://metacase.com/wsdl/")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public MENull logoutAndExit(MENull receiver) {
            object[] results = this.Invoke("logoutAndExit", new object[] {
                        receiver});
            return ((MENull)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginlogoutAndExit(MENull receiver, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("logoutAndExit", new object[] {
                        receiver}, callback, asyncState);
        }
        
        /// <remarks/>
        public MENull EndlogoutAndExit(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((MENull)(results[0]));
        }
        
        /// <remarks/>
        public void logoutAndExitAsync(MENull receiver) {
            this.logoutAndExitAsync(receiver, null);
        }
        
        /// <remarks/>
        public void logoutAndExitAsync(MENull receiver, object userState) {
            if ((this.logoutAndExitOperationCompleted == null)) {
                this.logoutAndExitOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlogoutAndExitOperationCompleted);
            }
            this.InvokeAsync("logoutAndExit", new object[] {
                        receiver}, this.logoutAndExitOperationCompleted, userState);
        }
        
        private void OnlogoutAndExitOperationCompleted(object arg) {
            if ((this.logoutAndExitCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.logoutAndExitCompleted(this, new logoutAndExitCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://metacase.com/MetaEditAPI.maintainDatabase", RequestNamespace="http://metacase.com/wsdl/", ResponseNamespace="http://metacase.com/wsdl/")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public MENull maintainDatabase(MENull receiver) {
            object[] results = this.Invoke("maintainDatabase", new object[] {
                        receiver});
            return ((MENull)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginmaintainDatabase(MENull receiver, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("maintainDatabase", new object[] {
                        receiver}, callback, asyncState);
        }
        
        /// <remarks/>
        public MENull EndmaintainDatabase(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((MENull)(results[0]));
        }
        
        /// <remarks/>
        public void maintainDatabaseAsync(MENull receiver) {
            this.maintainDatabaseAsync(receiver, null);
        }
        
        /// <remarks/>
        public void maintainDatabaseAsync(MENull receiver, object userState) {
            if ((this.maintainDatabaseOperationCompleted == null)) {
                this.maintainDatabaseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmaintainDatabaseOperationCompleted);
            }
            this.InvokeAsync("maintainDatabase", new object[] {
                        receiver}, this.maintainDatabaseOperationCompleted, userState);
        }
        
        private void OnmaintainDatabaseOperationCompleted(object arg) {
            if ((this.maintainDatabaseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.maintainDatabaseCompleted(this, new maintainDatabaseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://metacase.com/MetaEditAPI.openAllProjects", RequestNamespace="http://metacase.com/wsdl/", ResponseNamespace="http://metacase.com/wsdl/")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public MENull openAllProjects(MENull receiver) {
            object[] results = this.Invoke("openAllProjects", new object[] {
                        receiver});
            return ((MENull)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginopenAllProjects(MENull receiver, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("openAllProjects", new object[] {
                        receiver}, callback, asyncState);
        }
        
        /// <remarks/>
        public MENull EndopenAllProjects(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((MENull)(results[0]));
        }
        
        /// <remarks/>
        public void openAllProjectsAsync(MENull receiver) {
            this.openAllProjectsAsync(receiver, null);
        }
        
        /// <remarks/>
        public void openAllProjectsAsync(MENull receiver, object userState) {
            if ((this.openAllProjectsOperationCompleted == null)) {
                this.openAllProjectsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnopenAllProjectsOperationCompleted);
            }
            this.InvokeAsync("openAllProjects", new object[] {
                        receiver}, this.openAllProjectsOperationCompleted, userState);
        }
        
        private void OnopenAllProjectsOperationCompleted(object arg) {
            if ((this.openAllProjectsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.openAllProjectsCompleted(this, new openAllProjectsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://metacase.com/MetaEditAPI.quit", RequestNamespace="http://metacase.com/wsdl/", ResponseNamespace="http://metacase.com/wsdl/")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public MENull quit(MENull receiver) {
            object[] results = this.Invoke("quit", new object[] {
                        receiver});
            return ((MENull)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult Beginquit(MENull receiver, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("quit", new object[] {
                        receiver}, callback, asyncState);
        }
        
        /// <remarks/>
        public MENull Endquit(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((MENull)(results[0]));
        }
        
        /// <remarks/>
        public void quitAsync(MENull receiver) {
            this.quitAsync(receiver, null);
        }
        
        /// <remarks/>
        public void quitAsync(MENull receiver, object userState) {
            if ((this.quitOperationCompleted == null)) {
                this.quitOperationCompleted = new System.Threading.SendOrPostCallback(this.OnquitOperationCompleted);
            }
            this.InvokeAsync("quit", new object[] {
                        receiver}, this.quitOperationCompleted, userState);
        }
        
        private void OnquitOperationCompleted(object arg) {
            if ((this.quitCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.quitCompleted(this, new quitCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://metacase.com/MetaEditAPI.saveWSDL", RequestNamespace="http://metacase.com/wsdl/", ResponseNamespace="http://metacase.com/wsdl/")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public MENull saveWSDL(MENull receiver, [System.Xml.Serialization.SoapElementAttribute("saveWSDL")] string saveWSDL1) {
            object[] results = this.Invoke("saveWSDL", new object[] {
                        receiver,
                        saveWSDL1});
            return ((MENull)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginsaveWSDL(MENull receiver, string saveWSDL1, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("saveWSDL", new object[] {
                        receiver,
                        saveWSDL1}, callback, asyncState);
        }
        
        /// <remarks/>
        public MENull EndsaveWSDL(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((MENull)(results[0]));
        }
        
        /// <remarks/>
        public void saveWSDLAsync(MENull receiver, string saveWSDL1) {
            this.saveWSDLAsync(receiver, saveWSDL1, null);
        }
        
        /// <remarks/>
        public void saveWSDLAsync(MENull receiver, string saveWSDL1, object userState) {
            if ((this.saveWSDLOperationCompleted == null)) {
                this.saveWSDLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsaveWSDLOperationCompleted);
            }
            this.InvokeAsync("saveWSDL", new object[] {
                        receiver,
                        saveWSDL1}, this.saveWSDLOperationCompleted, userState);
        }
        
        private void OnsaveWSDLOperationCompleted(object arg) {
            if ((this.saveWSDLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.saveWSDLCompleted(this, new saveWSDLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://metacase.com/MetaEditAPI.setProject", RequestNamespace="http://metacase.com/wsdl/", ResponseNamespace="http://metacase.com/wsdl/")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public MENull setProject(MENull receiver, [System.Xml.Serialization.SoapElementAttribute("setProject")] string setProject1) {
            object[] results = this.Invoke("setProject", new object[] {
                        receiver,
                        setProject1});
            return ((MENull)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginsetProject(MENull receiver, string setProject1, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("setProject", new object[] {
                        receiver,
                        setProject1}, callback, asyncState);
        }
        
        /// <remarks/>
        public MENull EndsetProject(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((MENull)(results[0]));
        }
        
        /// <remarks/>
        public void setProjectAsync(MENull receiver, string setProject1) {
            this.setProjectAsync(receiver, setProject1, null);
        }
        
        /// <remarks/>
        public void setProjectAsync(MENull receiver, string setProject1, object userState) {
            if ((this.setProjectOperationCompleted == null)) {
                this.setProjectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetProjectOperationCompleted);
            }
            this.InvokeAsync("setProject", new object[] {
                        receiver,
                        setProject1}, this.setProjectOperationCompleted, userState);
        }
        
        private void OnsetProjectOperationCompleted(object arg) {
            if ((this.setProjectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setProjectCompleted(this, new setProjectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://metacase.com/MetaEditAPI.startAPI", RequestNamespace="http://metacase.com/wsdl/", ResponseNamespace="http://metacase.com/wsdl/")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public MENull startAPI(MENull receiver) {
            object[] results = this.Invoke("startAPI", new object[] {
                        receiver});
            return ((MENull)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginstartAPI(MENull receiver, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("startAPI", new object[] {
                        receiver}, callback, asyncState);
        }
        
        /// <remarks/>
        public MENull EndstartAPI(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((MENull)(results[0]));
        }
        
        /// <remarks/>
        public void startAPIAsync(MENull receiver) {
            this.startAPIAsync(receiver, null);
        }
        
        /// <remarks/>
        public void startAPIAsync(MENull receiver, object userState) {
            if ((this.startAPIOperationCompleted == null)) {
                this.startAPIOperationCompleted = new System.Threading.SendOrPostCallback(this.OnstartAPIOperationCompleted);
            }
            this.InvokeAsync("startAPI", new object[] {
                        receiver}, this.startAPIOperationCompleted, userState);
        }
        
        private void OnstartAPIOperationCompleted(object arg) {
            if ((this.startAPICompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.startAPICompleted(this, new startAPICompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://metacase.com/MetaEditAPI.startAPIHostname", RequestNamespace="http://metacase.com/wsdl/", ResponseNamespace="http://metacase.com/wsdl/")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public MENull startAPIHostname(MENull receiver, [System.Xml.Serialization.SoapElementAttribute("startAPIHostname")] string startAPIHostname1, string port, string logEvents) {
            object[] results = this.Invoke("startAPIHostname", new object[] {
                        receiver,
                        startAPIHostname1,
                        port,
                        logEvents});
            return ((MENull)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginstartAPIHostname(MENull receiver, string startAPIHostname1, string port, string logEvents, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("startAPIHostname", new object[] {
                        receiver,
                        startAPIHostname1,
                        port,
                        logEvents}, callback, asyncState);
        }
        
        /// <remarks/>
        public MENull EndstartAPIHostname(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((MENull)(results[0]));
        }
        
        /// <remarks/>
        public void startAPIHostnameAsync(MENull receiver, string startAPIHostname1, string port, string logEvents) {
            this.startAPIHostnameAsync(receiver, startAPIHostname1, port, logEvents, null);
        }
        
        /// <remarks/>
        public void startAPIHostnameAsync(MENull receiver, string startAPIHostname1, string port, string logEvents, object userState) {
            if ((this.startAPIHostnameOperationCompleted == null)) {
                this.startAPIHostnameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnstartAPIHostnameOperationCompleted);
            }
            this.InvokeAsync("startAPIHostname", new object[] {
                        receiver,
                        startAPIHostname1,
                        port,
                        logEvents}, this.startAPIHostnameOperationCompleted, userState);
        }
        
        private void OnstartAPIHostnameOperationCompleted(object arg) {
            if ((this.startAPIHostnameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.startAPIHostnameCompleted(this, new startAPIHostnameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://metacase.com/MetaEditAPI.stopAPI", RequestNamespace="http://metacase.com/wsdl/", ResponseNamespace="http://metacase.com/wsdl/")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public MENull stopAPI(MENull receiver) {
            object[] results = this.Invoke("stopAPI", new object[] {
                        receiver});
            return ((MENull)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginstopAPI(MENull receiver, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("stopAPI", new object[] {
                        receiver}, callback, asyncState);
        }
        
        /// <remarks/>
        public MENull EndstopAPI(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((MENull)(results[0]));
        }
        
        /// <remarks/>
        public void stopAPIAsync(MENull receiver) {
            this.stopAPIAsync(receiver, null);
        }
        
        /// <remarks/>
        public void stopAPIAsync(MENull receiver, object userState) {
            if ((this.stopAPIOperationCompleted == null)) {
                this.stopAPIOperationCompleted = new System.Threading.SendOrPostCallback(this.OnstopAPIOperationCompleted);
            }
            this.InvokeAsync("stopAPI", new object[] {
                        receiver}, this.stopAPIOperationCompleted, userState);
        }
        
        private void OnstopAPIOperationCompleted(object arg) {
            if ((this.stopAPICompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.stopAPICompleted(this, new stopAPICompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://metacase.com/type")]
    public partial class METype {
        
        private string nameField;
        
        /// <remarks/>
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://metacase.com/type")]
    public partial class MENull {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://metacase.com/type")]
    public partial class MEAny {
        
        private string meTypeField;
        
        private string meValueField;
        
        /// <remarks/>
        public string meType {
            get {
                return this.meTypeField;
            }
            set {
                this.meTypeField = value;
            }
        }
        
        /// <remarks/>
        public string meValue {
            get {
                return this.meValueField;
            }
            set {
                this.meValueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://metacase.com/type")]
    public partial class MEOop {
        
        private int areaIDField;
        
        private int objectIDField;
        
        /// <remarks/>
        public int areaID {
            get {
                return this.areaIDField;
            }
            set {
                this.areaIDField = value;
            }
        }
        
        /// <remarks/>
        public int objectID {
            get {
                return this.objectIDField;
            }
            set {
                this.objectIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void allGoodInstancesCompletedEventHandler(object sender, allGoodInstancesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class allGoodInstancesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal allGoodInstancesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MEOop[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MEOop[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void allSimilarInstancesCompletedEventHandler(object sender, allSimilarInstancesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class allSimilarInstancesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal allSimilarInstancesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MEOop[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MEOop[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void subTypeNamedCompletedEventHandler(object sender, subTypeNamedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class subTypeNamedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal subTypeNamedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public METype Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((METype)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void findStringCompletedEventHandler(object sender, findStringCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class findStringCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal findStringCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MEOop[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MEOop[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void instancesNamedCompletedEventHandler(object sender, instancesNamedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class instancesNamedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal instancesNamedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MEOop[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MEOop[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void typeNameCompletedEventHandler(object sender, typeNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class typeNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal typeNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void typeCompletedEventHandler(object sender, typeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class typeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal typeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public METype Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((METype)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void userPrintStringCompletedEventHandler(object sender, userPrintStringCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class userPrintStringCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal userPrintStringCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void valueAtCompletedEventHandler(object sender, valueAtCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class valueAtCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal valueAtCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MEAny Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MEAny)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void setValueAtCompletedEventHandler(object sender, setValueAtCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class setValueAtCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal setValueAtCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MEAny Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MEAny)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void allPropertiesValuesCompletedEventHandler(object sender, allPropertiesValuesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class allPropertiesValuesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal allPropertiesValuesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MEAny[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MEAny[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void allPropertiesCompletedEventHandler(object sender, allPropertiesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class allPropertiesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal allPropertiesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MEOop[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MEOop[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void allPropertiesWrappedCompletedEventHandler(object sender, allPropertiesWrappedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class allPropertiesWrappedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal allPropertiesWrappedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MEAny[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MEAny[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void instPropsCompletedEventHandler(object sender, instPropsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class instPropsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal instPropsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MEAny Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MEAny)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void unsafeNewCompletedEventHandler(object sender, unsafeNewCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class unsafeNewCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal unsafeNewCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MEOop Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MEOop)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void objectSetCompletedEventHandler(object sender, objectSetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class objectSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal objectSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MEOop[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MEOop[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void relationshipSetCompletedEventHandler(object sender, relationshipSetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class relationshipSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal relationshipSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MEOop[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MEOop[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void roleSetCompletedEventHandler(object sender, roleSetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class roleSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal roleSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MEOop[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MEOop[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void bindingSetCompletedEventHandler(object sender, bindingSetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class bindingSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal bindingSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MEOop[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MEOop[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void explodeGraphsCompletedEventHandler(object sender, explodeGraphsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class explodeGraphsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal explodeGraphsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MEOop[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MEOop[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void decompGraphsCompletedEventHandler(object sender, decompGraphsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class decompGraphsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal decompGraphsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MEOop[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MEOop[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void subgraphsCompletedEventHandler(object sender, subgraphsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class subgraphsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal subgraphsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MEOop[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MEOop[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void addExplodeCompletedEventHandler(object sender, addExplodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addExplodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addExplodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MEOop Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MEOop)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void getExplodeGraphsForNPCompletedEventHandler(object sender, getExplodeGraphsForNPCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getExplodeGraphsForNPCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getExplodeGraphsForNPCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MEOop[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MEOop[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void removeExplodeCompletedEventHandler(object sender, removeExplodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class removeExplodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal removeExplodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MEOop Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MEOop)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void decompGraphCompletedEventHandler(object sender, decompGraphCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class decompGraphCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal decompGraphCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MEAny Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MEAny)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void setDecompGraphCompletedEventHandler(object sender, setDecompGraphCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class setDecompGraphCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal setDecompGraphCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MEAny Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MEAny)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void objsForObjCompletedEventHandler(object sender, objsForObjCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class objsForObjCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal objsForObjCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MEOop[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MEOop[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void objsForRelCompletedEventHandler(object sender, objsForRelCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class objsForRelCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal objsForRelCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MEOop[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MEOop[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void objsForRoleCompletedEventHandler(object sender, objsForRoleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class objsForRoleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal objsForRoleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MEOop[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MEOop[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void relsForObjCompletedEventHandler(object sender, relsForObjCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class relsForObjCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal relsForObjCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MEOop[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MEOop[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void relsForRoleCompletedEventHandler(object sender, relsForRoleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class relsForRoleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal relsForRoleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MEOop[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MEOop[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void rolesForObjCompletedEventHandler(object sender, rolesForObjCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class rolesForObjCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal rolesForObjCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MEOop[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MEOop[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void rolesForRelCompletedEventHandler(object sender, rolesForRelCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class rolesForRelCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal rolesForRelCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MEOop[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MEOop[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void rolesForRoleCompletedEventHandler(object sender, rolesForRoleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class rolesForRoleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal rolesForRoleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MEOop[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MEOop[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void openCompletedEventHandler(object sender, openCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class openCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal openCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MENull Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MENull)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void animateCompletedEventHandler(object sender, animateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class animateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal animateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MENull Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MENull)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void refreshCompletedEventHandler(object sender, refreshCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class refreshCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal refreshCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MENull Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MENull)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void copiedObjectsCompletedEventHandler(object sender, copiedObjectsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class copiedObjectsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal copiedObjectsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MEOop[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MEOop[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void deleteCompletedEventHandler(object sender, deleteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MENull Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MENull)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void addToGraphCompletedEventHandler(object sender, addToGraphCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addToGraphCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addToGraphCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MENull Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MENull)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void createBindingCompletedEventHandler(object sender, createBindingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createBindingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createBindingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MEOop Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MEOop)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void relationshipCompletedEventHandler(object sender, relationshipCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class relationshipCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal relationshipCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MEOop Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MEOop)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void rolesCompletedEventHandler(object sender, rolesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class rolesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal rolesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MEOop[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MEOop[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void objectsCompletedEventHandler(object sender, objectsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class objectsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal objectsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MEOop[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MEOop[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void diagramsCompletedEventHandler(object sender, diagramsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class diagramsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal diagramsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MEOop[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MEOop[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void matricesCompletedEventHandler(object sender, matricesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class matricesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal matricesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MEOop[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MEOop[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void tablesCompletedEventHandler(object sender, tablesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class tablesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal tablesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MEOop[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MEOop[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void newDiagramCompletedEventHandler(object sender, newDiagramCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class newDiagramCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal newDiagramCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MEOop Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MEOop)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void newMatrixCompletedEventHandler(object sender, newMatrixCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class newMatrixCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal newMatrixCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MEOop Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MEOop)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void newTableCompletedEventHandler(object sender, newTableCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class newTableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal newTableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MEOop Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MEOop)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void instCompletedEventHandler(object sender, instCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class instCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal instCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MEOop Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MEOop)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void repSetCompletedEventHandler(object sender, repSetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class repSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal repSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MEOop[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MEOop[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void reprGraphCompletedEventHandler(object sender, reprGraphCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class reprGraphCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal reprGraphCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MEOop Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MEOop)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void removeCompletedEventHandler(object sender, removeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class removeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal removeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MEOop Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MEOop)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void timeStampCompletedEventHandler(object sender, timeStampCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class timeStampCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal timeStampCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.DateTime Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.DateTime)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void setTimeStampCompletedEventHandler(object sender, setTimeStampCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class setTimeStampCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal setTimeStampCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MENull Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MENull)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void objectReprsCompletedEventHandler(object sender, objectReprsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class objectReprsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal objectReprsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MEOop[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MEOop[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void bindingReprsCompletedEventHandler(object sender, bindingReprsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class bindingReprsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal bindingReprsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MEOop[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MEOop[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void gridCompletedEventHandler(object sender, gridCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class gridCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal gridCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MEAny Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MEAny)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void setGridCompletedEventHandler(object sender, setGridCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class setGridCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal setGridCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MENull Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MENull)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void displayGridCompletedEventHandler(object sender, displayGridCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class displayGridCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal displayGridCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void setDisplayGridCompletedEventHandler(object sender, setDisplayGridCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class setDisplayGridCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal setDisplayGridCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MENull Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MENull)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void useGridCompletedEventHandler(object sender, useGridCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class useGridCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal useGridCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void setUseGridCompletedEventHandler(object sender, setUseGridCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class setUseGridCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal setUseGridCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MENull Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MENull)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void placeCompletedEventHandler(object sender, placeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class placeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal placeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MEAny Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MEAny)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void setPlaceCompletedEventHandler(object sender, setPlaceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class setPlaceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal setPlaceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MENull Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MENull)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void scaleCompletedEventHandler(object sender, scaleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class scaleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal scaleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MEAny Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MEAny)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void setScaleCompletedEventHandler(object sender, setScaleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class setScaleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal setScaleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MENull Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MENull)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void isStraightCompletedEventHandler(object sender, isStraightCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class isStraightCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal isStraightCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void straightenCompletedEventHandler(object sender, straightenCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class straightenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal straightenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MENull Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MENull)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void layoutCompletedEventHandler(object sender, layoutCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class layoutCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal layoutCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MENull Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MENull)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void addNewObjectRepForCompletedEventHandler(object sender, addNewObjectRepForCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addNewObjectRepForCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addNewObjectRepForCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MEOop Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MEOop)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void addNewBindingRepForCompletedEventHandler(object sender, addNewBindingRepForCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addNewBindingRepForCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addNewBindingRepForCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MEOop Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MEOop)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void connectionReprIdsCompletedEventHandler(object sender, connectionReprIdsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class connectionReprIdsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal connectionReprIdsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MEAny[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MEAny[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void addPointCompletedEventHandler(object sender, addPointCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addPointCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addPointCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MENull Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MENull)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void putPointAtIndexCompletedEventHandler(object sender, putPointAtIndexCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class putPointAtIndexCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal putPointAtIndexCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MENull Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MENull)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void breakpointsCompletedEventHandler(object sender, breakpointsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class breakpointsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal breakpointsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MENull Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MENull)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void objTargetOffsetCompletedEventHandler(object sender, objTargetOffsetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class objTargetOffsetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal objTargetOffsetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MENull Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MENull)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void removePointCompletedEventHandler(object sender, removePointCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class removePointCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal removePointCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MEAny Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MEAny)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void hAxisCompletedEventHandler(object sender, hAxisCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class hAxisCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal hAxisCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MEOop[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MEOop[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void vAxisCompletedEventHandler(object sender, vAxisCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class vAxisCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal vAxisCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MEOop[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MEOop[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void bindSelectCompletedEventHandler(object sender, bindSelectCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class bindSelectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal bindSelectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void setBindSelectCompletedEventHandler(object sender, setBindSelectCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class setBindSelectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal setBindSelectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MENull Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MENull)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void cellDisplayModeCompletedEventHandler(object sender, cellDisplayModeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class cellDisplayModeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal cellDisplayModeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void setCellDisplayModeCompletedEventHandler(object sender, setCellDisplayModeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class setCellDisplayModeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal setCellDisplayModeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MENull Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MENull)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void displayStringSelectorCompletedEventHandler(object sender, displayStringSelectorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class displayStringSelectorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal displayStringSelectorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void setDisplayStringSelectorCompletedEventHandler(object sender, setDisplayStringSelectorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class setDisplayStringSelectorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal setDisplayStringSelectorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MENull Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MENull)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void axisDisplayModeCompletedEventHandler(object sender, axisDisplayModeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class axisDisplayModeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal axisDisplayModeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void setAxisDisplayModeCompletedEventHandler(object sender, setAxisDisplayModeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class setAxisDisplayModeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal setAxisDisplayModeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MENull Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MENull)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void showFirstCompletedEventHandler(object sender, showFirstCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class showFirstCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal showFirstCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void setShowFirstCompletedEventHandler(object sender, setShowFirstCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class setShowFirstCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal setShowFirstCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MENull Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MENull)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void rowLabelsWidthCompletedEventHandler(object sender, rowLabelsWidthCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class rowLabelsWidthCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal rowLabelsWidthCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void setRowLabelsWidthCompletedEventHandler(object sender, setRowLabelsWidthCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class setRowLabelsWidthCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal setRowLabelsWidthCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MENull Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MENull)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void textStyleSymbolCompletedEventHandler(object sender, textStyleSymbolCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class textStyleSymbolCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal textStyleSymbolCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void setTextStyleSymbolCompletedEventHandler(object sender, setTextStyleSymbolCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class setTextStyleSymbolCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal setTextStyleSymbolCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MENull Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MENull)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void addNewAxisEltForCompletedEventHandler(object sender, addNewAxisEltForCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addNewAxisEltForCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addNewAxisEltForCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MEOop Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MEOop)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void getWidthCompletedEventHandler(object sender, getWidthCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getWidthCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getWidthCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void setWidthCompletedEventHandler(object sender, setWidthCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class setWidthCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal setWidthCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MENull Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MENull)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void oTCompletedEventHandler(object sender, oTCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class oTCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal oTCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public METype Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((METype)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void baseCollectionCompletedEventHandler(object sender, baseCollectionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class baseCollectionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal baseCollectionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MEOop[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MEOop[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void fontCompletedEventHandler(object sender, fontCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class fontCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal fontCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void setFontCompletedEventHandler(object sender, setFontCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class setFontCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal setFontCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MENull Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MENull)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void gxlWidthsCompletedEventHandler(object sender, gxlWidthsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class gxlWidthsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal gxlWidthsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MEAny[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MEAny[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void setGxlWidthsCompletedEventHandler(object sender, setGxlWidthsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class setGxlWidthsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal setGxlWidthsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MENull Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MENull)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void addNewTableEltForCompletedEventHandler(object sender, addNewTableEltForCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addNewTableEltForCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addNewTableEltForCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MENull Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MENull)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void waitForBindingCreationCompletedEventHandler(object sender, waitForBindingCreationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class waitForBindingCreationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal waitForBindingCreationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MEAny[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MEAny[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void waitForBindingFinalizationCompletedEventHandler(object sender, waitForBindingFinalizationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class waitForBindingFinalizationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal waitForBindingFinalizationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MEAny[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MEAny[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void openedGraphReprsCompletedEventHandler(object sender, openedGraphReprsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class openedGraphReprsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal openedGraphReprsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MEOop[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MEOop[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void animateAllCompletedEventHandler(object sender, animateAllCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class animateAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal animateAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MENull Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MENull)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void animateNoneCompletedEventHandler(object sender, animateNoneCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class animateNoneCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal animateNoneCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MENull Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MENull)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void createGraphDialogCompletedEventHandler(object sender, createGraphDialogCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createGraphDialogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createGraphDialogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MEAny Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MEAny)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void createFromPropertyDialogInAreaCompletedEventHandler(object sender, createFromPropertyDialogInAreaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createFromPropertyDialogInAreaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createFromPropertyDialogInAreaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MEAny Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MEAny)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void propertyDialogCompletedEventHandler(object sender, propertyDialogCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class propertyDialogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal propertyDialogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void forGraphRunCompletedEventHandler(object sender, forGraphRunCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class forGraphRunCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal forGraphRunCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void generatorNamesCompletedEventHandler(object sender, generatorNamesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class generatorNamesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal generatorNamesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void currentDirCompletedEventHandler(object sender, currentDirCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class currentDirCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal currentDirCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MENull Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MENull)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void fileInPatchCompletedEventHandler(object sender, fileInPatchCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class fileInPatchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal fileInPatchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MENull Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MENull)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void fileInPatchesCompletedEventHandler(object sender, fileInPatchesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class fileInPatchesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal fileInPatchesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MENull Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MENull)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void abandonCompletedEventHandler(object sender, abandonCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class abandonCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal abandonCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MENull Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MENull)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void commitCompletedEventHandler(object sender, commitCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class commitCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal commitCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MENull Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MENull)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void condenseDatabaseCompletedEventHandler(object sender, condenseDatabaseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class condenseDatabaseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal condenseDatabaseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MENull Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MENull)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void createProjectCompletedEventHandler(object sender, createProjectCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createProjectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createProjectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MENull Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MENull)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void documentCompletedEventHandler(object sender, documentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class documentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal documentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MENull Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MENull)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void forAllCompletedEventHandler(object sender, forAllCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class forAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal forAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MENull Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MENull)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void forNameCompletedEventHandler(object sender, forNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class forNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal forNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MENull Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MENull)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void loginCompletedEventHandler(object sender, loginCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class loginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal loginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MENull Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MENull)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void loginDBCompletedEventHandler(object sender, loginDBCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class loginDBCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal loginDBCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MENull Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MENull)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void loginNewDBCompletedEventHandler(object sender, loginNewDBCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class loginNewDBCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal loginNewDBCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MENull Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MENull)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void logoutAndExitCompletedEventHandler(object sender, logoutAndExitCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class logoutAndExitCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal logoutAndExitCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MENull Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MENull)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void maintainDatabaseCompletedEventHandler(object sender, maintainDatabaseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class maintainDatabaseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal maintainDatabaseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MENull Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MENull)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void openAllProjectsCompletedEventHandler(object sender, openAllProjectsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class openAllProjectsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal openAllProjectsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MENull Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MENull)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void quitCompletedEventHandler(object sender, quitCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class quitCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal quitCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MENull Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MENull)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void saveWSDLCompletedEventHandler(object sender, saveWSDLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class saveWSDLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal saveWSDLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MENull Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MENull)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void setProjectCompletedEventHandler(object sender, setProjectCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class setProjectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal setProjectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MENull Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MENull)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void startAPICompletedEventHandler(object sender, startAPICompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class startAPICompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal startAPICompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MENull Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MENull)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void startAPIHostnameCompletedEventHandler(object sender, startAPIHostnameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class startAPIHostnameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal startAPIHostnameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MENull Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MENull)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void stopAPICompletedEventHandler(object sender, stopAPICompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class stopAPICompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal stopAPICompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MENull Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MENull)(this.results[0]));
            }
        }
    }
}
